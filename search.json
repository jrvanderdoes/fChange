[{"path":"https://jrvanderdoes.github.io/fChange/LICENSE.html","id":null,"dir":"","previous_headings":"","what":"GNU General Public License","title":"GNU General Public License","text":"Version 3, 29 June 2007Copyright © 2007 Free Software Foundation, Inc. <http://fsf.org/> Everyone permitted copy distribute verbatim copies license document, changing allowed.","code":""},{"path":"https://jrvanderdoes.github.io/fChange/LICENSE.html","id":"preamble","dir":"","previous_headings":"","what":"Preamble","title":"GNU General Public License","text":"GNU General Public License free, copyleft license software kinds works. licenses software practical works designed take away freedom share change works. contrast, GNU General Public License intended guarantee freedom share change versions program–make sure remains free software users. , Free Software Foundation, use GNU General Public License software; applies also work released way authors. can apply programs, . speak free software, referring freedom, price. General Public Licenses designed make sure freedom distribute copies free software (charge wish), receive source code can get want , can change software use pieces new free programs, know can things. protect rights, need prevent others denying rights asking surrender rights. Therefore, certain responsibilities distribute copies software, modify : responsibilities respect freedom others. example, distribute copies program, whether gratis fee, must pass recipients freedoms received. must make sure , , receive can get source code. must show terms know rights. Developers use GNU GPL protect rights two steps: (1) assert copyright software, (2) offer License giving legal permission copy, distribute /modify . developers’ authors’ protection, GPL clearly explains warranty free software. users’ authors’ sake, GPL requires modified versions marked changed, problems attributed erroneously authors previous versions. devices designed deny users access install run modified versions software inside , although manufacturer can . fundamentally incompatible aim protecting users’ freedom change software. systematic pattern abuse occurs area products individuals use, precisely unacceptable. Therefore, designed version GPL prohibit practice products. problems arise substantially domains, stand ready extend provision domains future versions GPL, needed protect freedom users. Finally, every program threatened constantly software patents. States allow patents restrict development use software general-purpose computers, , wish avoid special danger patents applied free program make effectively proprietary. prevent , GPL assures patents used render program non-free. precise terms conditions copying, distribution modification follow.","code":""},{"path":[]},{"path":"https://jrvanderdoes.github.io/fChange/LICENSE.html","id":"id_0-definitions","dir":"","previous_headings":"TERMS AND CONDITIONS","what":"0. Definitions","title":"GNU General Public License","text":"“License” refers version 3 GNU General Public License. “Copyright” also means copyright-like laws apply kinds works, semiconductor masks. “Program” refers copyrightable work licensed License. licensee addressed “”. “Licensees” “recipients” may individuals organizations. “modify” work means copy adapt part work fashion requiring copyright permission, making exact copy. resulting work called “modified version” earlier work work “based ” earlier work. “covered work” means either unmodified Program work based Program. “propagate” work means anything , without permission, make directly secondarily liable infringement applicable copyright law, except executing computer modifying private copy. Propagation includes copying, distribution (without modification), making available public, countries activities well. “convey” work means kind propagation enables parties make receive copies. Mere interaction user computer network, transfer copy, conveying. interactive user interface displays “Appropriate Legal Notices” extent includes convenient prominently visible feature (1) displays appropriate copyright notice, (2) tells user warranty work (except extent warranties provided), licensees may convey work License, view copy License. interface presents list user commands options, menu, prominent item list meets criterion.","code":""},{"path":"https://jrvanderdoes.github.io/fChange/LICENSE.html","id":"id_1-source-code","dir":"","previous_headings":"TERMS AND CONDITIONS","what":"1. Source Code","title":"GNU General Public License","text":"“source code” work means preferred form work making modifications . “Object code” means non-source form work. “Standard Interface” means interface either official standard defined recognized standards body, , case interfaces specified particular programming language, one widely used among developers working language. “System Libraries” executable work include anything, work whole, () included normal form packaging Major Component, part Major Component, (b) serves enable use work Major Component, implement Standard Interface implementation available public source code form. “Major Component”, context, means major essential component (kernel, window system, ) specific operating system () executable work runs, compiler used produce work, object code interpreter used run . “Corresponding Source” work object code form means source code needed generate, install, (executable work) run object code modify work, including scripts control activities. However, include work’s System Libraries, general-purpose tools generally available free programs used unmodified performing activities part work. example, Corresponding Source includes interface definition files associated source files work, source code shared libraries dynamically linked subprograms work specifically designed require, intimate data communication control flow subprograms parts work. Corresponding Source need include anything users can regenerate automatically parts Corresponding Source. Corresponding Source work source code form work.","code":""},{"path":"https://jrvanderdoes.github.io/fChange/LICENSE.html","id":"id_2-basic-permissions","dir":"","previous_headings":"TERMS AND CONDITIONS","what":"2. Basic Permissions","title":"GNU General Public License","text":"rights granted License granted term copyright Program, irrevocable provided stated conditions met. License explicitly affirms unlimited permission run unmodified Program. output running covered work covered License output, given content, constitutes covered work. License acknowledges rights fair use equivalent, provided copyright law. may make, run propagate covered works convey, without conditions long license otherwise remains force. may convey covered works others sole purpose make modifications exclusively , provide facilities running works, provided comply terms License conveying material control copyright. thus making running covered works must exclusively behalf, direction control, terms prohibit making copies copyrighted material outside relationship . Conveying circumstances permitted solely conditions stated . Sublicensing allowed; section 10 makes unnecessary.","code":""},{"path":"https://jrvanderdoes.github.io/fChange/LICENSE.html","id":"id_3-protecting-users-legal-rights-from-anti-circumvention-law","dir":"","previous_headings":"TERMS AND CONDITIONS","what":"3. Protecting Users’ Legal Rights From Anti-Circumvention Law","title":"GNU General Public License","text":"covered work shall deemed part effective technological measure applicable law fulfilling obligations article 11 WIPO copyright treaty adopted 20 December 1996, similar laws prohibiting restricting circumvention measures. convey covered work, waive legal power forbid circumvention technological measures extent circumvention effected exercising rights License respect covered work, disclaim intention limit operation modification work means enforcing, work’s users, third parties’ legal rights forbid circumvention technological measures.","code":""},{"path":"https://jrvanderdoes.github.io/fChange/LICENSE.html","id":"id_4-conveying-verbatim-copies","dir":"","previous_headings":"TERMS AND CONDITIONS","what":"4. Conveying Verbatim Copies","title":"GNU General Public License","text":"may convey verbatim copies Program’s source code receive , medium, provided conspicuously appropriately publish copy appropriate copyright notice; keep intact notices stating License non-permissive terms added accord section 7 apply code; keep intact notices absence warranty; give recipients copy License along Program. may charge price price copy convey, may offer support warranty protection fee.","code":""},{"path":"https://jrvanderdoes.github.io/fChange/LICENSE.html","id":"id_5-conveying-modified-source-versions","dir":"","previous_headings":"TERMS AND CONDITIONS","what":"5. Conveying Modified Source Versions","title":"GNU General Public License","text":"may convey work based Program, modifications produce Program, form source code terms section 4, provided also meet conditions: ) work must carry prominent notices stating modified , giving relevant date. b) work must carry prominent notices stating released License conditions added section 7. requirement modifies requirement section 4 “keep intact notices”. c) must license entire work, whole, License anyone comes possession copy. License therefore apply, along applicable section 7 additional terms, whole work, parts, regardless packaged. License gives permission license work way, invalidate permission separately received . d) work interactive user interfaces, must display Appropriate Legal Notices; however, Program interactive interfaces display Appropriate Legal Notices, work need make . compilation covered work separate independent works, nature extensions covered work, combined form larger program, volume storage distribution medium, called “aggregate” compilation resulting copyright used limit access legal rights compilation’s users beyond individual works permit. Inclusion covered work aggregate cause License apply parts aggregate.","code":""},{"path":"https://jrvanderdoes.github.io/fChange/LICENSE.html","id":"id_6-conveying-non-source-forms","dir":"","previous_headings":"TERMS AND CONDITIONS","what":"6. Conveying Non-Source Forms","title":"GNU General Public License","text":"may convey covered work object code form terms sections 4 5, provided also convey machine-readable Corresponding Source terms License, one ways: ) Convey object code , embodied , physical product (including physical distribution medium), accompanied Corresponding Source fixed durable physical medium customarily used software interchange. b) Convey object code , embodied , physical product (including physical distribution medium), accompanied written offer, valid least three years valid long offer spare parts customer support product model, give anyone possesses object code either (1) copy Corresponding Source software product covered License, durable physical medium customarily used software interchange, price reasonable cost physically performing conveying source, (2) access copy Corresponding Source network server charge. c) Convey individual copies object code copy written offer provide Corresponding Source. alternative allowed occasionally noncommercially, received object code offer, accord subsection 6b. d) Convey object code offering access designated place (gratis charge), offer equivalent access Corresponding Source way place charge. need require recipients copy Corresponding Source along object code. place copy object code network server, Corresponding Source may different server (operated third party) supports equivalent copying facilities, provided maintain clear directions next object code saying find Corresponding Source. Regardless server hosts Corresponding Source, remain obligated ensure available long needed satisfy requirements. e) Convey object code using peer--peer transmission, provided inform peers object code Corresponding Source work offered general public charge subsection 6d. separable portion object code, whose source code excluded Corresponding Source System Library, need included conveying object code work. “User Product” either (1) “consumer product”, means tangible personal property normally used personal, family, household purposes, (2) anything designed sold incorporation dwelling. determining whether product consumer product, doubtful cases shall resolved favor coverage. particular product received particular user, “normally used” refers typical common use class product, regardless status particular user way particular user actually uses, expects expected use, product. product consumer product regardless whether product substantial commercial, industrial non-consumer uses, unless uses represent significant mode use product. “Installation Information” User Product means methods, procedures, authorization keys, information required install execute modified versions covered work User Product modified version Corresponding Source. information must suffice ensure continued functioning modified object code case prevented interfered solely modification made. convey object code work section , , specifically use , User Product, conveying occurs part transaction right possession use User Product transferred recipient perpetuity fixed term (regardless transaction characterized), Corresponding Source conveyed section must accompanied Installation Information. requirement apply neither third party retains ability install modified object code User Product (example, work installed ROM). requirement provide Installation Information include requirement continue provide support service, warranty, updates work modified installed recipient, User Product modified installed. Access network may denied modification materially adversely affects operation network violates rules protocols communication across network. Corresponding Source conveyed, Installation Information provided, accord section must format publicly documented (implementation available public source code form), must require special password key unpacking, reading copying.","code":""},{"path":"https://jrvanderdoes.github.io/fChange/LICENSE.html","id":"id_7-additional-terms","dir":"","previous_headings":"TERMS AND CONDITIONS","what":"7. Additional Terms","title":"GNU General Public License","text":"“Additional permissions” terms supplement terms License making exceptions one conditions. Additional permissions applicable entire Program shall treated though included License, extent valid applicable law. additional permissions apply part Program, part may used separately permissions, entire Program remains governed License without regard additional permissions. convey copy covered work, may option remove additional permissions copy, part . (Additional permissions may written require removal certain cases modify work.) may place additional permissions material, added covered work, can give appropriate copyright permission. Notwithstanding provision License, material add covered work, may (authorized copyright holders material) supplement terms License terms: ) Disclaiming warranty limiting liability differently terms sections 15 16 License; b) Requiring preservation specified reasonable legal notices author attributions material Appropriate Legal Notices displayed works containing ; c) Prohibiting misrepresentation origin material, requiring modified versions material marked reasonable ways different original version; d) Limiting use publicity purposes names licensors authors material; e) Declining grant rights trademark law use trade names, trademarks, service marks; f) Requiring indemnification licensors authors material anyone conveys material (modified versions ) contractual assumptions liability recipient, liability contractual assumptions directly impose licensors authors. non-permissive additional terms considered “restrictions” within meaning section 10. Program received , part , contains notice stating governed License along term restriction, may remove term. license document contains restriction permits relicensing conveying License, may add covered work material governed terms license document, provided restriction survive relicensing conveying. add terms covered work accord section, must place, relevant source files, statement additional terms apply files, notice indicating find applicable terms. Additional terms, permissive non-permissive, may stated form separately written license, stated exceptions; requirements apply either way.","code":""},{"path":"https://jrvanderdoes.github.io/fChange/LICENSE.html","id":"id_8-termination","dir":"","previous_headings":"TERMS AND CONDITIONS","what":"8. Termination","title":"GNU General Public License","text":"may propagate modify covered work except expressly provided License. attempt otherwise propagate modify void, automatically terminate rights License (including patent licenses granted third paragraph section 11). However, cease violation License, license particular copyright holder reinstated () provisionally, unless copyright holder explicitly finally terminates license, (b) permanently, copyright holder fails notify violation reasonable means prior 60 days cessation. Moreover, license particular copyright holder reinstated permanently copyright holder notifies violation reasonable means, first time received notice violation License (work) copyright holder, cure violation prior 30 days receipt notice. Termination rights section terminate licenses parties received copies rights License. rights terminated permanently reinstated, qualify receive new licenses material section 10.","code":""},{"path":"https://jrvanderdoes.github.io/fChange/LICENSE.html","id":"id_9-acceptance-not-required-for-having-copies","dir":"","previous_headings":"TERMS AND CONDITIONS","what":"9. Acceptance Not Required for Having Copies","title":"GNU General Public License","text":"required accept License order receive run copy Program. Ancillary propagation covered work occurring solely consequence using peer--peer transmission receive copy likewise require acceptance. However, nothing License grants permission propagate modify covered work. actions infringe copyright accept License. Therefore, modifying propagating covered work, indicate acceptance License .","code":""},{"path":"https://jrvanderdoes.github.io/fChange/LICENSE.html","id":"id_10-automatic-licensing-of-downstream-recipients","dir":"","previous_headings":"TERMS AND CONDITIONS","what":"10. Automatic Licensing of Downstream Recipients","title":"GNU General Public License","text":"time convey covered work, recipient automatically receives license original licensors, run, modify propagate work, subject License. responsible enforcing compliance third parties License. “entity transaction” transaction transferring control organization, substantially assets one, subdividing organization, merging organizations. propagation covered work results entity transaction, party transaction receives copy work also receives whatever licenses work party’s predecessor interest give previous paragraph, plus right possession Corresponding Source work predecessor interest, predecessor can get reasonable efforts. may impose restrictions exercise rights granted affirmed License. example, may impose license fee, royalty, charge exercise rights granted License, may initiate litigation (including cross-claim counterclaim lawsuit) alleging patent claim infringed making, using, selling, offering sale, importing Program portion .","code":""},{"path":"https://jrvanderdoes.github.io/fChange/LICENSE.html","id":"id_11-patents","dir":"","previous_headings":"TERMS AND CONDITIONS","what":"11. Patents","title":"GNU General Public License","text":"“contributor” copyright holder authorizes use License Program work Program based. work thus licensed called contributor’s “contributor version”. contributor’s “essential patent claims” patent claims owned controlled contributor, whether already acquired hereafter acquired, infringed manner, permitted License, making, using, selling contributor version, include claims infringed consequence modification contributor version. purposes definition, “control” includes right grant patent sublicenses manner consistent requirements License. contributor grants non-exclusive, worldwide, royalty-free patent license contributor’s essential patent claims, make, use, sell, offer sale, import otherwise run, modify propagate contents contributor version. following three paragraphs, “patent license” express agreement commitment, however denominated, enforce patent (express permission practice patent covenant sue patent infringement). “grant” patent license party means make agreement commitment enforce patent party. convey covered work, knowingly relying patent license, Corresponding Source work available anyone copy, free charge terms License, publicly available network server readily accessible means, must either (1) cause Corresponding Source available, (2) arrange deprive benefit patent license particular work, (3) arrange, manner consistent requirements License, extend patent license downstream recipients. “Knowingly relying” means actual knowledge , patent license, conveying covered work country, recipient’s use covered work country, infringe one identifiable patents country reason believe valid. , pursuant connection single transaction arrangement, convey, propagate procuring conveyance , covered work, grant patent license parties receiving covered work authorizing use, propagate, modify convey specific copy covered work, patent license grant automatically extended recipients covered work works based . patent license “discriminatory” include within scope coverage, prohibits exercise , conditioned non-exercise one rights specifically granted License. may convey covered work party arrangement third party business distributing software, make payment third party based extent activity conveying work, third party grants, parties receive covered work , discriminatory patent license () connection copies covered work conveyed (copies made copies), (b) primarily connection specific products compilations contain covered work, unless entered arrangement, patent license granted, prior 28 March 2007. Nothing License shall construed excluding limiting implied license defenses infringement may otherwise available applicable patent law.","code":""},{"path":"https://jrvanderdoes.github.io/fChange/LICENSE.html","id":"id_12-no-surrender-of-others-freedom","dir":"","previous_headings":"TERMS AND CONDITIONS","what":"12. No Surrender of Others’ Freedom","title":"GNU General Public License","text":"conditions imposed (whether court order, agreement otherwise) contradict conditions License, excuse conditions License. convey covered work satisfy simultaneously obligations License pertinent obligations, consequence may convey . example, agree terms obligate collect royalty conveying convey Program, way satisfy terms License refrain entirely conveying Program.","code":""},{"path":"https://jrvanderdoes.github.io/fChange/LICENSE.html","id":"id_13-use-with-the-gnu-affero-general-public-license","dir":"","previous_headings":"TERMS AND CONDITIONS","what":"13. Use with the GNU Affero General Public License","title":"GNU General Public License","text":"Notwithstanding provision License, permission link combine covered work work licensed version 3 GNU Affero General Public License single combined work, convey resulting work. terms License continue apply part covered work, special requirements GNU Affero General Public License, section 13, concerning interaction network apply combination .","code":""},{"path":"https://jrvanderdoes.github.io/fChange/LICENSE.html","id":"id_14-revised-versions-of-this-license","dir":"","previous_headings":"TERMS AND CONDITIONS","what":"14. Revised Versions of this License","title":"GNU General Public License","text":"Free Software Foundation may publish revised /new versions GNU General Public License time time. new versions similar spirit present version, may differ detail address new problems concerns. version given distinguishing version number. Program specifies certain numbered version GNU General Public License “later version” applies , option following terms conditions either numbered version later version published Free Software Foundation. Program specify version number GNU General Public License, may choose version ever published Free Software Foundation. Program specifies proxy can decide future versions GNU General Public License can used, proxy’s public statement acceptance version permanently authorizes choose version Program. Later license versions may give additional different permissions. However, additional obligations imposed author copyright holder result choosing follow later version.","code":""},{"path":"https://jrvanderdoes.github.io/fChange/LICENSE.html","id":"id_15-disclaimer-of-warranty","dir":"","previous_headings":"TERMS AND CONDITIONS","what":"15. Disclaimer of Warranty","title":"GNU General Public License","text":"WARRANTY PROGRAM, EXTENT PERMITTED APPLICABLE LAW. EXCEPT OTHERWISE STATED WRITING COPYRIGHT HOLDERS /PARTIES PROVIDE PROGRAM “” WITHOUT WARRANTY KIND, EITHER EXPRESSED IMPLIED, INCLUDING, LIMITED , IMPLIED WARRANTIES MERCHANTABILITY FITNESS PARTICULAR PURPOSE. ENTIRE RISK QUALITY PERFORMANCE PROGRAM . PROGRAM PROVE DEFECTIVE, ASSUME COST NECESSARY SERVICING, REPAIR CORRECTION.","code":""},{"path":"https://jrvanderdoes.github.io/fChange/LICENSE.html","id":"id_16-limitation-of-liability","dir":"","previous_headings":"TERMS AND CONDITIONS","what":"16. Limitation of Liability","title":"GNU General Public License","text":"EVENT UNLESS REQUIRED APPLICABLE LAW AGREED WRITING COPYRIGHT HOLDER, PARTY MODIFIES /CONVEYS PROGRAM PERMITTED , LIABLE DAMAGES, INCLUDING GENERAL, SPECIAL, INCIDENTAL CONSEQUENTIAL DAMAGES ARISING USE INABILITY USE PROGRAM (INCLUDING LIMITED LOSS DATA DATA RENDERED INACCURATE LOSSES SUSTAINED THIRD PARTIES FAILURE PROGRAM OPERATE PROGRAMS), EVEN HOLDER PARTY ADVISED POSSIBILITY DAMAGES.","code":""},{"path":"https://jrvanderdoes.github.io/fChange/LICENSE.html","id":"id_17-interpretation-of-sections-15-and-16","dir":"","previous_headings":"TERMS AND CONDITIONS","what":"17. Interpretation of Sections 15 and 16","title":"GNU General Public License","text":"disclaimer warranty limitation liability provided given local legal effect according terms, reviewing courts shall apply local law closely approximates absolute waiver civil liability connection Program, unless warranty assumption liability accompanies copy Program return fee. END TERMS CONDITIONS","code":""},{"path":"https://jrvanderdoes.github.io/fChange/LICENSE.html","id":"how-to-apply-these-terms-to-your-new-programs","dir":"","previous_headings":"","what":"How to Apply These Terms to Your New Programs","title":"GNU General Public License","text":"develop new program, want greatest possible use public, best way achieve make free software everyone can redistribute change terms. , attach following notices program. safest attach start source file effectively state exclusion warranty; file least “copyright” line pointer full notice found. Also add information contact electronic paper mail. program terminal interaction, make output short notice like starts interactive mode: hypothetical commands show w show c show appropriate parts General Public License. course, program’s commands might different; GUI interface, use “box”. also get employer (work programmer) school, , sign “copyright disclaimer” program, necessary. information , apply follow GNU GPL, see <http://www.gnu.org/licenses/>. GNU General Public License permit incorporating program proprietary programs. program subroutine library, may consider useful permit linking proprietary applications library. want , use GNU Lesser General Public License instead License. first, please read <http://www.gnu.org/philosophy/--lgpl.html>.","code":"<one line to give the program's name and a brief idea of what it does.> Copyright (C) <year>  <name of author>  This program is free software: you can redistribute it and/or modify it under the terms of the GNU General Public License as published by the Free Software Foundation, either version 3 of the License, or (at your option) any later version.  This program is distributed in the hope that it will be useful, but WITHOUT ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License for more details.  You should have received a copy of the GNU General Public License along with this program.  If not, see <http://www.gnu.org/licenses/>. <program>  Copyright (C) <year>  <name of author> This program comes with ABSOLUTELY NO WARRANTY; for details type 'show w'. This is free software, and you are welcome to redistribute it under certain conditions; type 'show c' for details."},{"path":"https://jrvanderdoes.github.io/fChange/articles/Examples.html","id":"overview","dir":"Articles","previous_headings":"","what":"Overview","title":"Examples","text":"article, examine severl applications fChange.","code":""},{"path":"https://jrvanderdoes.github.io/fChange/articles/Examples.html","id":"electricity","dir":"Articles","previous_headings":"","what":"Electricity","title":"Examples","text":"section examines hourly Spanish electricity spot price 2014. data loaded ${\\tt fChange}$, can retrieved calling electricity. goal detect changes data. data may viewed using following: data seems exhibit trends time (perhaps due season). wish model trends first, search data remaining changes. use principal component analysis convert finite dimensions, fit model, return functional data. , pre-built functions can used project data, e.g. previous approach similar next, except without smoothing incorporated. next, show details precisely. use binary segmentation investigate residuals case.","code":"plot(electricity,         val_axis_title = '',res_axis_title = '',FD_axis_title = '',         plot_title = '') epca <- pca_examination(X = electricity,TVE = 0.99)  set.seed(654321) res1 <- change(X = epca$residuals,                            statistic='Tn',                            critical = 'simulation',method = 'characteristic',                type = 'segmentation') set.seed(123456) elec_mod <- projection_model(electricity,TVE=0.95,model='ets', check.cp=TRUE)  plot(elec_mod$errors,changes = elec_mod$changes)"},{"path":"https://jrvanderdoes.github.io/fChange/articles/Examples.html","id":"sp-500","dir":"Articles","previous_headings":"","what":"S&P 500","title":"Examples","text":"section focused application finance, specifically S&P500 index. includes data , pre-loaded. aim detect changes stock prices. data collected minutely resolution. convert overnight cumulative intraday returns , plot . changes can detected using binary segmentation follows.","code":"compute_ocidr <- function(dat){   dat_cidr <- dat   dat_cidr[,1]  <- 100*(log(dat[,1]) - log(dat[1,1]))   # Obs   for(j in 2:ncol(dat_cidr)){      dat_cidr[,j] <- 100 *        ( log(dat[,j]) - log(dat[nrow(dat_cidr),j-1]) )   }      dat_cidr }  SPYUS_ocidr <- compute_ocidr(SPYUS500)  plot_ocidr <- plot(dfts(SPYUS_ocidr),                       val_axis_title = '',res_axis_title = '',FD_axis_title = '',                       plot_title = '') set.seed(25641) spy_min_changes <- change(dfts(SPYUS_ocidr), type='segmentation',                                    statistic='Tn',                                    critical='simulation',                                    method = 'characteristic') plot_ocidr <- plot(dfts(SPYUS_ocidr),changes = spy_min_changes[[1]],                       val_axis_title = '',res_axis_title = '',FD_axis_title = '',                       plot_title = '',type = 'highdim')"},{"path":"https://jrvanderdoes.github.io/fChange/articles/Simulations.html","id":"known-simulations","dir":"Articles","previous_headings":"","what":"Known Simulations","title":"Simulations","text":"KNOWN USED COMPLETE SIMULATIONS","code":""},{"path":[]},{"path":"https://jrvanderdoes.github.io/fChange/articles/Simulations.html","id":"single-change-simulations","dir":"Articles","previous_headings":"","what":"Single Change Simulations","title":"Simulations","text":"","code":"################ # Parameters ################ change <- 0.15 locs <- c(0.5,0.75,0.8,0.9,0.95) lengths <- c(100,500) nSims <- 1000 dat_res <- 50 alpha_val <- 0.05 path <- 'C:\\\\Users\\\\j53vande\\\\Desktop\\\\New folder (2)\\\\'  ################ # Generate and Model Data ################ results <- cbind(expand.grid(locs,lengths),matrix(ncol=4)) colnames(results) <- c('loc','length','Tn','Mn','MeanMn','MeanTn') for(c in 1:length(locs)){   cat(paste0('\\n - Loc ',locs[c],' - '))      for(l in 1:length(lengths)){     cat(paste0('\\nLength ',lengths[l],': '))     data <- list()          tmp_results <- data.frame('Tn'=rep(NA,nSims),                               'Mn'=NA,                               'MeanMn'=NA,'MeanTn'=NA)          for(s in 1:nSims){       cat(paste0(s,','))              # Generate Data       set.seed(123*c+123^2*l+s+1)              data[[s]] <- generate_kl(         ns = c(lengths[l]*locs[c], lengths[l]-(lengths[l]*locs[c])),         eigsList = list(c(1/sqrt(1:5)),                         c(1/sqrt(1:5))),         basesList = list(           fda::create.bspline.basis(nbasis = 5, norder = 4)         ),         meansList = c(0,change),         distsArray = c(\"Normal\",'Normal'),         evals = seq(0, 1, length.out=dat_res),         kappasArray = c(0),         silent = T       )              # Analyze        set.seed(123*c+123^2*l+s)              TnMn_sim <- characteristic_change_sim(data[[s]]$data,h=0,space='BM', silent=T)       mean_val <- .change_mean(data[[s]])       mean_val_Tn <- .change_mean(data[[s]],statistic = 'Tn')       tmp_results[s,] <- c(TnMn_sim$Tn$pval,                            TnMn_sim$Mn$pval,                            mean_val$pvalue,                            mean_val_Tn$pvalue)     }          results[results$loc==locs[c] &               results$length==lengths[l], -c(1:2)] <- colMeans(tmp_results<=alpha_val)   } }  ################ # Plot ################ data_plot <- results %>% na.omit %>% pivot_longer(cols = Tn:MeanTn)  results_plot100 <- data_plot[data_plot$length==100,] results_plot500 <- data_plot[data_plot$length==500,]  cols <- scales::hue_pal()(4)  ggplot(mapping=aes(x=loc,                      y=value,                      group=name,                      color=name)) +   geom_line(data=results_plot100,linewidth=1) +   geom_line(data=results_plot500,linewidth=1,             linetype='dashed') +   geom_hline(aes(yintercept=0.05),linewidth=1.5,              linetype='dotted',color='gray') +   geom_point(data=results_plot100,size=4) +   geom_point(data=results_plot500,size=4) +   theme_bw() +   theme(axis.title = element_text(size=24),         axis.text = element_text(size=20),         legend.justification = c(0, 0),         legend.position = c(0.67, 0.75),         legend.text =  element_text(size=20),         legend.title = element_blank()) +   xlab(expression(tau)) +   ylab('Rejection Rate') +   scale_color_manual(values = c(cols[c(1,3)], 'black',cols[4]),                      labels=c('Tn','Mn','ARS-18', 'mARS-18'),                      breaks=c('Tn','Mn','MeanTn', 'MeanMn'))"},{"path":"https://jrvanderdoes.github.io/fChange/articles/Simulations.html","id":"appendix-simulations","dir":"Articles","previous_headings":"","what":"Appendix Simulations","title":"Simulations","text":"","code":"nSims <- 1000 length <- 100 Bs <- c(5,10,20,30,35) data <- list()  data <- data.frame('Bs'=Bs,                    'Tn'=NA,'TnQuant'=NA,                    'Mn'=NA, 'MnQuant'=NA)  for(B in 1:length(Bs)){   results_tmp <- data.frame('Tn'=rep(NA,nSims),'Tn95'=NA,                             'Mn'=NA,'Mn95'=NA)   for(s in nSims:1){     cat(paste0(s,','))     set.seed(12345*B+s+1)      data[[s]] <- generate_data_fd(       ns = c(length),       eigsList = list(c(1/sqrt(1:5))),       basesList = list(         fda::create.bspline.basis(nbasis = 5, norder = 4)       ),       meansList = c(0),       distsArray = c(\"Normal\"),       evals = seq(0, 1, length.out=50),       kappasArray = c(0),       silent = T     )     # Tn     tmp <- detect_changepoint_final_TnAndMn(       X = data[[s]], B=Bs[B], J=50, h=0)      results_tmp[s,] <- c(tmp$Tn$value,stats::quantile(tmp$Tn$gamProcess,probs = 0.95)[[1]],                          tmp$Mn$value,stats::quantile(tmp$Mn$gamProcess,probs = 0.95)[[1]])   }    data[B,-1] <- colMeans(results_tmp) }   # Tweak following for each image data_plot <- data %>%   pivot_longer(cols = Tn:MnQuant) %>%   mutate('Bname'=paste0(Bs,name))  ggplot(data_plot,        aes(x=res,y=value,color=name,fill=name,group=Bname)) +   geom_boxplot(alpha=0.25) +   theme_bw() +   #ylim(c(0,50)) +   scale_y_log10() +   ggplot2::scale_color_manual(     values=c(scales::hue_pal()(7))) +   ggplot2::scale_fill_manual(     values=scales::hue_pal()(7)) +   ylab('Log Errors') +   xlab(NULL) +   guides(fill=guide_legend(title=\"Metric\"),          color=guide_legend(title=\"Metric\")) nSims <- 1000 length <- 100 dat_res <- c(20,30,40,50,60) data <- list()  data <- data.frame('res'=dat_res,                    'Tn'=NA,'TnQuant'=NA,                    'Mn'=NA, 'MnQuant'=NA)  for(res in 1:length(dat_res)){   results_tmp <- data.frame('Tn'=rep(NA,nSims),'Tn95'=NA,                             'Mn'=NA,'Mn95'=NA)   for(s in 1:nSims){     cat(paste0(s,','))     set.seed(12345*res+s+1)      data[[s]] <- generate_data_fd(       ns = c(length),       eigsList = list(c(1/sqrt(1:5))),       basesList = list(         fda::create.bspline.basis(nbasis = 5, norder = 4)       ),       meansList = c(0),       distsArray = c(\"Normal\"),       evals = seq(0, 1, length.out=dat_res[res]),       kappasArray = c(0),       silent = T     )     # Tn     tmp <- detect_changepoint_final_TnAndMn(       X = data[[s]], M=20, J=dat_res[res], h=0)      results_tmp[s,] <- c(tmp$Tn$value,quantile(tmp$Tn$gamProcess,probs = 0.95)[[1]],                          tmp$Mn$value,quantile(tmp$Mn$gamProcess,probs = 0.95)[[1]])   }    data[res,-1] <- colMeans(results_tmp) }  # Tweak following for each image data_plot <- data %>%   pivot_longer(cols = Tn:MnQuant) %>%   mutate('resname'=paste0(res,name)) ggplot(data_plot,        aes(x=res,y=value,color=name,fill=name,group=resname)) +   geom_boxplot(alpha=0.25) +   theme_bw() +   #ylim(c(0,50)) +   scale_y_log10() +   ggplot2::scale_color_manual(     values=c(scales::hue_pal()(7))) +   ggplot2::scale_fill_manual(     values=scales::hue_pal()(7)) +   ylab('Log Errors') +   xlab(NULL) +   guides(fill=guide_legend(title=\"Metric\"),          color=guide_legend(title=\"Metric\")) nSims <- 1000 length_val <- 100 B_opts <- c(1, 5, 10, 20, 30) changes <- c(0, 0.1, 0.2)  Tn_data <- Mn_data <-  data.frame('changes'=changes,                                   'B1'=NA,'B5'=NA,                                   'B10'=NA,'B20'=NA,                                   'B30'=NA)  for(c_i in 1:length(changes)){   results_Tn <- results_Mn <-      data.frame(matrix(nrow=nSims,ncol = length(B_opts)))   colnames(results_Tn) <- colnames(results_Mn) <-      paste0('B',B_opts)   for(i in 1:nSims){     cat(paste0(i,', '))     set.seed(123*i+1)          data <- generate_kl(       ns = c(length_val/2, length_val/2),       eigsList = list(c(1/sqrt(1:5)),                       c(1/sqrt(1:5))),       basesList = list(         fda::create.bspline.basis(nbasis = 5, norder = 4)       ),       meansList = c(0,changes[c_i]),       distsArray = c(\"Normal\",'Normal'),       evals = seq(0, 1, length.out=50),       kappasArray = c(0),       silent = T     )          for(B_idx in 1:length(B_opts)){              tmp <- characteristic_change_sim(         X = data$data, M = B_opts[B_idx],         J = 50, nSims = 1000, K = bartlett_kernel,         h=1, space='BM', silent = TRUE)              results_Tn[i,B_idx] <- tmp$Tn$pval       results_Mn[i,B_idx] <- tmp$Mn$pval     }   }      Tn_data[c_i,] <- c(changes[c_i],colMeans(results_Tn<=0.05))   Mn_data[c_i,] <- c(changes[c_i],colMeans(results_Mn<=0.05)) }  ## PLOTTING Tn_plot <- Tn_data %>% na.omit %>% pivot_longer(cols = B1:B30) Mn_plot <- Mn_data %>% na.omit %>% pivot_longer(cols = B1:B30) Tn_plot$name <- factor(Tn_plot$name,levels = c('B1','B5','B10','B20','B30')) Mn_plot$name <- factor(Mn_plot$name,levels = c('B1','B5','B10','B20','B30'))  ggplot(mapping=aes(x=changes,                      y=value,                      group=name,                      color=name)) +   geom_line(data=Tn_plot,linewidth=1) +   geom_line(data=Mn_plot,linewidth=1,             linetype='dotdash') +   geom_hline(aes(yintercept=0.05),linewidth=1.5,              linetype='dotted',color='gray') +   geom_point(data=Tn_plot,size=4) +   geom_point(data=Mn_plot,size=4) +   theme_bw() +   theme(axis.title = element_text(size=24),         axis.text = element_text(size=20),         legend.justification = c(0, 0),         legend.position = c(0.75, 0.16),         legend.text =  element_text(size=20),         legend.title = element_blank()) +   xlab(expression(delta)) +   ylab('Rejection Rate') +   scale_color_discrete(     labels=c('B=1','B=5','B=10','B=20','B=30'),     breaks=c('B1','B5','B10','B20','B30'))"},{"path":"https://jrvanderdoes.github.io/fChange/articles/Simulations.html","id":"possible-simulations","dir":"Articles","previous_headings":"","what":"Possible Simulations","title":"Simulations","text":"code , generate data null tables. Compute Statistics mean change figure","code":"path <- getwd() path <- paste0(path,'/paperFiles/Null/')  nTrials <- 1000 lengths <- c(100,500) dat_res <- 50 burnin <- 1000  ################################################ ##  KL Data Generation - Null ################################################ ################### ## No Dependence ###################  for(l_idx in 1:length(lengths)){      set.seed(12345+l_idx)   data <- list()      for(i in 1:nTrials){     cat(paste0(i,', '))     data[[i]] <- generate_kl(       ns = lengths[l_idx],       eigsList = list(1/sqrt(1:5)),       basesList = list(         fda::create.bspline.basis(nbasis = 5, norder = 4)       ),       meansList = c(0),       distsArray = c(\"Normal\"),       evals = seq(0, 1, length.out=dat_res),       kappasArray = c(0),       silent = T,       burnin = burnin     )$data   }      saveRDS(data,paste0(path, 'KL/Data/NullCase_len',l_idx,'_data.rds')) }   ################### ## Mild Dependence ###################  for(l_idx in 1:length(lengths)){      set.seed(12345+l_idx)   data <- list()      for(i in 1:nTrials){     cat(paste0(i,', '))     data[[i]] <- generate_kl(       ns = lengths[l_idx],       eigsList = list(1/sqrt(1:5)),       basesList = list(         fda::create.bspline.basis(nbasis = 5, norder = 4)       ),       meansList = c(0),       distsArray = c(\"Normal\"),       evals = seq(0, 1, length.out=dat_res),       kappasArray = c(0.5),       silent = T,       burnin = burnin     )$data   }      saveRDS(data,paste0(path, 'KL/Data/NullCase_len',l_idx,'_data_mild.rds')) }   ################### ## Strong Dependence ###################  for(l_idx in 1:length(lengths)){      set.seed(12345+l_idx)   data <- list()      for(i in 1:nTrials){     cat(paste0(i,', '))     data[[i]] <- generate_kl(       ns = lengths[l_idx],       eigsList = list(1/sqrt(1:5)),       basesList = list(         fda::create.bspline.basis(nbasis = 5, norder = 4)       ),       meansList = c(0),       distsArray = c(\"Normal\"),       evals = seq(0, 1, length.out=dat_res),       kappasArray = c(0.8),       silent = T,       burnin = burnin     )$data   }      saveRDS(data,paste0(path, 'KL/Data/NullCase_len',l_idx,'_data_strong.rds')) }  ################################################ ##  OU Data Generation - Null ################################################ ################### ## No Dependence ###################  for(l_idx in 1:length(lengths)){      set.seed(12345+l_idx)   data <- list()      for(i in 1:nTrials){     cat(paste0(i,', '))     data[[i]] <- generate_ou(res=dat_res,N=lengths[l_idx], burnin=burnin, rho=0)$data   }      saveRDS(data,paste0(path, 'OU/Data/OUNull_len',l_idx,'_data.rds')) }  ################### ## Mild Dependence ###################  for(l_idx in 1:length(lengths)){      set.seed(12345+l_idx)   data <- list()      for(i in 1:nTrials){     cat(paste0(i,', '))     data[[i]] <- generate_ou(res=dat_res,N=lengths[l_idx], burnin=burnin, rho=0.5)$data   }      saveRDS(data,paste0(path, 'OU/Data/OUNull_len',l_idx,'_data_mild.rds'))    }  ################### ## Strong Dependence ###################  for(l_idx in 1:length(lengths)){      set.seed(12345+l_idx)   data <- list()      for(i in 1:nTrials){     cat(paste0(i,', '))     data[[i]] <- generate_ou(res=dat_res,N=lengths[l_idx], burnin=burnin, rho=0.8)$data   }      saveRDS(data,paste0(path, 'OU/Data/OUNull_len',l_idx,'_data_strong.rds'))    }   ################################################ ##  FAR(1) Data Generation - Null ################################################ ################### ## No Dependence ###################  for(l_idx in 1:length(lengths)){      set.seed(12345+l_idx)   data <- list()      for(i in 1:nTrials){     cat(paste0(i,', '))     data[[i]] <- generate_far1(resolution=dat_res, N=lengths[l_idx],                               d=0, burnin=burnin)$data   }      saveRDS(data,paste0(path,'FAR1/Data/FAR1Null_len',l_idx,'_data.rds')) }   ################### ## Mild Dependence ###################  for(l_idx in 1:length(lengths)){      set.seed(12345+l_idx)   data <- list()      for(i in 1:nTrials){     cat(paste0(i,', '))     data[[i]] <- generate_far1(resolution=dat_res, N=lengths[l_idx],                               d=0.5, burnin=burnin)$data   }      saveRDS(data,paste0(path,'FAR1/Data/FAR1Null_len',l_idx,'_data_mild.rds')) }   ################### ## Strong Dependence ###################  for(l_idx in 1:length(lengths)){      set.seed(12345+l_idx)   data <- list()      for(i in 1:nTrials){     cat(paste0(i,', '))     data[[i]] <- generate_far1(resolution=dat_res, N=lengths[l_idx],                               d=0.8, burnin=burnin)$data   }      saveRDS(data,paste0(path,'FAR1/Data/FAR1Null_len',l_idx,'_data_strong.rds')) } #path <- getwd() #path <- paste0(path,'/paperFiles/Null/KL/') path <- 'C:/Users/jerem/OneDrive/Documents/School/Waterloo/Research/RPackages/fChange-data/paperFiles/Null/KL/'      data <- readRDS(paste0(path,'Data/',                            'NullCase_len',l_idx,'_data.rds')) function(data_path_start, path){   nTrials <- 1000   lengths <- c(100,500)   dat_res <- 50      for(l_idx in 1:length(lengths)){     cat(paste0('\\n',l_idx,': '))     results <- data.frame(       'length'=rep(NA, nTrials),       'simTnh0'=NA, 'simTnh13'=NA, 'simTnhd13'=NA,       'simMnh0'=NA, 'simMnh13'=NA, 'simMnhd13'=NA,       'bootTnh0'=NA,'bootTnh13'=NA,'bootTnhd13'=NA,       'bootMnh0'=NA,'bootMnh13'=NA,'bootMnhd13'=NA,       'welchTnh0a5'=NA,'welchTnh13a5'=NA,'welchTnhd13a5'=NA,       'welchTnh0a1'=NA,'welchTnh13a1'=NA,'welchTnhd13a1'=NA)        data <- readRDS(paste0(data_path_start,l_idx,'_data.rds'))        for(i in 1:nTrials){       cat(paste0(i,', '))          ## Simulation       #   Tn and Mn       set.seed(123456*l_idx+i)       sim0 <- characteristic_change_sim(         data[[i]], h=0,space='BM')       sim13 <- characteristic_change_sim(         data[[i]], h=lengths[l_idx]^(1/3),space='BM')       simd13 <- characteristic_change_sim(         data[[i]], h=2*lengths[l_idx]^(1/3),space='BM')          results[i, c('simTnh0','simTnh13','simTnhd13')] <-         c(sim0$Tn$pval,sim13$Tn$pval,simd13$Tn$pval)       results[i, c('simMnh0','simMnh13','simMnhd13')] <-         c(sim0$Mn$pval,sim13$Mn$pval,simd13$Mn$pval)              ## Bootstrap       #   Tn       set.seed(123456*l_idx+i)       boot0 <- detect_changepoint_bootstrap(         X=data[[i]], statistic='Tn',         blocksize=1,space='BM',          silent = T)       boot13 <- detect_changepoint_bootstrap(         X=data[[i]], statistic='Tn',         blocksize=lengths[l_idx]^(1/3),space='BM',          silent = T)       bootd13 <- detect_changepoint_bootstrap(         X=data[[i]], statistic='Tn',         blocksize=2*lengths[l_idx]^(1/3),space='BM',          silent = T)              results[i, c('bootTnh0','bootTnh13','bootTnhd13')] <-         c(boot0$pval,boot13$pval,bootd13$pval)              #   Mn       set.seed(123456*l_idx+i)       boot0 <- detect_changepoint_bootstrap(         X=data[[i]], statistic='Mn',         blocksize=1,space='BM',          silent = T)       boot13 <- detect_changepoint_bootstrap(         X=data[[i]], statistic='Mn',         blocksize=lengths[l_idx]^(1/3),space='BM',          silent = T)       bootd13 <- detect_changepoint_bootstrap(         X=data[[i]], statistic='Mn',         blocksize=2*lengths[l_idx]^(1/3),space='BM',          silent = T)              results[i, c('bootMnh0','bootMnh13','bootMnhd13')] <-         c(boot0$pval,boot13$pval,bootd13$pval)              ## Welch - 0.05       #   Tn       set.seed(123456*l_idx+i)       welch0 <- characteristic_change_welch(         X=data[[i]],         h=0,space='BM', alpha = 0.05)       welch13 <- characteristic_change_welch(         X=data[[i]],         h=lengths[l_idx]^(1/3),space='BM', alpha = 0.05)       welchd13 <- characteristic_change_welch(         X=data[[i]],         h=2*lengths[l_idx]^(1/3),space='BM', alpha = 0.05)              results[i, c('welchTnh0a5',                     'welchTnh13a5',                     'welchTnhd13a5')] <-         c(tn0$detected, tn13$detected, tnd13$detected)          ## Welch - 0.01       #   Tn       set.seed(123456*l_idx+i)       tn0 <- characteristic_change_welch(         X=data[[i]],         h=0, space='BM', alpha = 0.01)       tn13 <- characteristic_change_welch(         X=data[[i]],         h=lengths[l_idx]^(1/3),space='BM', alpha = 0.01)       tnd13 <- characteristic_change_welch(         X=data[[i]],         h=2*lengths[l_idx]^(1/3),space='BM', alpha = 0.01)          results[i, c('welchTnh0a1',                     'welchTnh13a1',                     'welchTnhd13a1')] <-         c(tn0$detected, tn13$detected, tnd13$detected)                     if((nTrials %% 100) == 0)         saveRDS(results,                  paste0(path,'tmpResults/',                         'Tn_NullCase_len',l_idx,'.rds'))     }        saveRDS(results, paste0(path,'Results/',                             'Tn_NullCase_len',l_idx,'.rds'))   }      results }      ################################################ ##  KL Data Generation - Null ################################################ ################### ## No Dependence ################### for(l_idx in 1:length(lengths)){   cat(paste0('\\n',l_idx,': '))   results <- data.frame('length'=rep(NA, nTrials),                         'tnh0'=NA, 'tnh13'=NA, 'tnhd13'=NA)    data <- readRDS(paste0(path,'Data/',                          'NullCase_len',l_idx,'_data.rds'))    for(i in 1:nTrials){     cat(paste0(i,', '))      ## Simulation     #   Tn and Mn     set.seed(123456*l_idx+i)     tn0 <- characteristic_change_sim(       data[[i]], h=0,space='BM')     tn13 <- characteristic_change_sim(       data[[i]], h=lengths[l_idx]^(1/3),space='BM')     tnd13 <- characteristic_change_sim(       data[[i]], h=2*lengths[l_idx]^(1/3),space='BM')      ## Bootstrap     #   Tn     set.seed(123456*l_idx+i)     tn0 <- detect_changepoint_bootstrap(       X=data[[i]], statistic='Tn',       blocksize=1,space='BM', silent = T)     tn13 <- detect_changepoint_bootstrap(       X=data[[i]], statistic='Tn',       blocksize=lengths[l_idx]^(1/3),space='BM', silent = T)     tnd13 <- detect_changepoint_bootstrap(       X=data[[i]], statistic='Tn',       blocksize=2*lengths[l_idx]^(1/3),space='BM', silent = T)      results[i,] <- c(lengths[l_idx],                      tn0$pval, tn13$pval, tnd13$pval)          #   Mn     set.seed(123456*l_idx+i)     mn0 <- detect_changepoint_bootstrap(       X=data[[i]], statistic='Mn',       blocksize=1,space='BM', silent = T)     mn13 <- detect_changepoint_bootstrap(       X=data[[i]], statistic='Mn',       blocksize=lengths[l_idx]^(1/3),space='BM', silent = T)     mnd13 <- detect_changepoint_bootstrap(       X=data[[i]], statistic='Mn',       blocksize=2*lengths[l_idx]^(1/3),space='BM', silent = T)      results[i,] <- c(lengths[l_idx],                      mn0$pval, mn13$pval, mnd13$pval)          ## Welch - 0.05     #   Tn     set.seed(123456*l_idx+i)     tn0 <- characteristic_change_welch(       X=data[[i]],       h=0,space='BM', alpha = 0.05)     tn13 <- characteristic_change_welch(       X=data[[i]],       h=lengths[l_idx]^(1/3),space='BM', alpha = 0.05)     tnd13 <- characteristic_change_welch(       X=data[[i]],       h=2*lengths[l_idx]^(1/3),space='BM', alpha = 0.05)      results[i,] <- c(lengths[l_idx],                      tn0$detected,                       tn13$detected,                       tnd13$detected)      ## Welch - 0.01     #   Tn     set.seed(123456*l_idx+i)     tn0 <- characteristic_change_welch(       X=data[[i]],       h=0, space='BM', alpha = 0.01)     tn13 <- characteristic_change_welch(       X=data[[i]],       h=lengths[l_idx]^(1/3),space='BM', alpha = 0.01)     tnd13 <- characteristic_change_welch(       X=data[[i]],       h=2*lengths[l_idx]^(1/3),space='BM', alpha = 0.01)      results[i,] <- c(lengths[l_idx],                      tn0$detected,                       tn13$detected,                       tnd13$detected)          # results[i,] <- c(lengths[l_idx],     #                  tn0$pval, tn13$pval, tnd13$pval)      if((nTrials %% 100) == 0)       saveRDS(results,paste0(path,'tmpResults/', 'Tn_NullCase_len',l_idx,'.rds'))   }    saveRDS(results,paste0(path,'Results/', 'Tn_NullCase_len',l_idx,'.rds')) }  ################### ## Mild Dependence ################### for(l_idx in 1:length(lengths)){   cat(paste0('\\n',l_idx,': '))   results <- data.frame('length'=rep(NA, nTrials),                         'tnh0'=NA, 'tnh13'=NA, 'tnhd13'=NA)    data <- readRDS(paste0(path,'Data/',                          'NullCase_len',l_idx,'_data_mild.rds'))    for(i in 1:nTrials){     cat(paste0(i,', '))      set.seed(123456*l_idx+i)     tn0 <- detect_changepoint_final_Tn(data[[i]], h=0,space='BM')     tn13 <- detect_changepoint_final_Tn(data[[i]], h=lengths[l_idx]^(1/3),space='BM')     tnd13 <- detect_changepoint_final_Tn(data[[i]], h=2*lengths[l_idx]^(1/3),space='BM')      results[i,] <- c(lengths[l_idx],                      tn0$pval, tn13$pval, tnd13$pval)      if((nTrials %% 100) == 0)       saveRDS(results,paste0(path,'tmpResults/', 'Tn_NullCase_len',l_idx,'_mild.rds'))   }    saveRDS(results,paste0(path,'Results/', 'Tn_NullCase_len',l_idx,'_mild.rds')) }   ################### ## Strong Dependence ################### for(l_idx in 1:length(lengths)){   cat(paste0('\\n',l_idx,': '))   results <- data.frame('length'=rep(NA, nTrials),                         'tnh0'=NA, 'tnh13'=NA, 'tnhd13'=NA)    data <- readRDS(paste0(path,'Data/',                          'NullCase_len',l_idx,'_data_strong.rds'))    for(i in 1:nTrials){     cat(paste0(i,', '))      set.seed(123456*l_idx+i)     tn0 <- detect_changepoint_final_Tn(data[[i]], h=0,space='BM')     tn13 <- detect_changepoint_final_Tn(data[[i]], h=lengths[l_idx]^(1/3),space='BM')     tnd13 <- detect_changepoint_final_Tn(data[[i]], h=2*lengths[l_idx]^(1/3),space='BM')      results[i,] <- c(lengths[l_idx],                      tn0$pval, tn13$pval, tnd13$pval)      if((nTrials %% 100) == 0)       saveRDS(results,paste0(path,'tmpResults/', 'Tn_NullCase_len',l_idx,'_strong.rds'))   }    saveRDS(results,paste0(path,'Results/', 'Tn_NullCase_len',l_idx,'_strong.rds')) } tmp = 0"},{"path":"https://jrvanderdoes.github.io/fChange/authors.html","id":null,"dir":"","previous_headings":"","what":"Authors","title":"Authors and Citation","text":"Jeremy VanderDoes. Author, maintainer. Gregory Rice. Author. Martin Wendler. Author.","code":""},{"path":"https://jrvanderdoes.github.io/fChange/authors.html","id":"citation","dir":"","previous_headings":"","what":"Citation","title":"Authors and Citation","text":"VanderDoes J, Rice G, Wendler M (2025). fChange: Functional Change Point Detection. R package version 1.0.0, https://jrvanderdoes.github.io/fChange/.","code":"@Manual{,   title = {fChange: Functional Change Point Detection},   author = {Jeremy VanderDoes and Gregory Rice and Martin Wendler},   year = {2025},   note = {R package version 1.0.0},   url = {https://jrvanderdoes.github.io/fChange/}, }"},{"path":"https://jrvanderdoes.github.io/fChange/index.html","id":"fchange","dir":"","previous_headings":"","what":"Functional Change Point Detection","title":"Functional Change Point Detection","text":"goal fChange …","code":""},{"path":"https://jrvanderdoes.github.io/fChange/index.html","id":"installation","dir":"","previous_headings":"","what":"Installation","title":"Functional Change Point Detection","text":"can install development version fChange GitHub :","code":"# install.packages(\"devtools\") devtools::install_github(\"jrvanderdoes/fChange\")"},{"path":"https://jrvanderdoes.github.io/fChange/index.html","id":"example","dir":"","previous_headings":"","what":"Example","title":"Functional Change Point Detection","text":"basic example shows solve common problem: special using README.Rmd instead just README.md? can include R chunks like : ’ll still need render README.Rmd regularly, keep README.md --date. devtools::build_readme() handy . also use GitHub Actions re-render README.Rmd every time push. example workflow can found : https://github.com/r-lib/actions/tree/v1/examples. can also embed plots, example:  case, don’t forget commit push resulting figure files, display GitHub CRAN.","code":"library(fChange) #> Registered S3 method overwritten by 'quantmod': #>   method            from #>   as.zoo.data.frame zoo #>  #> Attaching package: 'fChange' #> The following objects are masked from 'package:stats': #>  #>     acf, pacf, sd, var ## basic example code summary(cars) #>      speed           dist        #>  Min.   : 4.0   Min.   :  2.00   #>  1st Qu.:12.0   1st Qu.: 26.00   #>  Median :15.0   Median : 36.00   #>  Mean   :15.4   Mean   : 42.98   #>  3rd Qu.:19.0   3rd Qu.: 56.00   #>  Max.   :25.0   Max.   :120.00"},{"path":"https://jrvanderdoes.github.io/fChange/reference/SPYUS500.html","id":null,"dir":"Reference","previous_headings":"","what":"S&P 500 Index Data — SPYUS500","title":"S&P 500 Index Data — SPYUS500","text":"Intraday prices S&P500 index (SPY) 2019 2023. Minutely resolution daily observations.","code":""},{"path":"https://jrvanderdoes.github.io/fChange/reference/SPYUS500.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"S&P 500 Index Data — SPYUS500","text":"","code":"SPYUS500"},{"path":[]},{"path":"https://jrvanderdoes.github.io/fChange/reference/SPYUS500.html","id":"spy-","dir":"Reference","previous_headings":"","what":"SPY500","title":"S&P 500 Index Data — SPYUS500","text":"dfts object","code":""},{"path":"https://jrvanderdoes.github.io/fChange/reference/acf.html","id":null,"dir":"Reference","previous_headings":"","what":"ACF/PACF Functions — acf","title":"ACF/PACF Functions — acf","text":"function computes ACF/PACF data. can applied traditional scalar time series functional time series defined dfts().","code":""},{"path":"https://jrvanderdoes.github.io/fChange/reference/acf.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"ACF/PACF Functions — acf","text":"","code":"acf(x, lag.max = NULL, ...)  # Default S3 method acf(x, lag.max = NULL, ...)  pacf(x, lag.max = NULL, ...)  # Default S3 method pacf(x, lag.max = NULL, ...)  # S3 method for class 'dfts' acf(   x,   lag.max = NULL,   alpha = 0.05,   method = c(\"Welch\", \"MC\", \"Imhof\"),   WWN = TRUE,   figure = TRUE,   ... )  # S3 method for class 'dfts' pacf(x, lag.max = NULL, n_pcs = NULL, alpha = 0.95, figure = TRUE, ...)"},{"path":"https://jrvanderdoes.github.io/fChange/reference/acf.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"ACF/PACF Functions — acf","text":"x Object computation (partial) autocorrelation function (ACF/PACF). lag.max Number lagged covariance estimators time series used estimate (partial) autocorrelation function. ... arguments passed acf.dfts() function. alpha value 0 1 indicates confidence interval ..d. bounds partial autocorrelation function. default ci = 0.95. method Character specifying method used estimating distribution hypothesis functional white noise. Accepted values : \"Welch\": Welch approximation. \"MC\": Monte-Carlo estimation. \"Imhof\": Estimation using Imhof's method. default, method = \"Welch\". WWN Logical. TRUE, WWN bounds also computed figure Logical. TRUE, plots estimated partial autocorrelation function specified ..d. bound. n_pcs Number principal components used fit ARH(p) models.","code":""},{"path":"https://jrvanderdoes.github.io/fChange/reference/acf.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"ACF/PACF Functions — acf","text":"ACF PACF values plots Return list : SWN_bound: upper prediction bound ..d. distribution strong white noise assumption. WWN_bound: upper prediction bound ..d. distribution weak white noise assumption. acfs: Autocorrelation values lag functional time series. plot: Plot autocorrelation values lag functional time series. Return list : Blueline: upper prediction bound ..d. distribution. rho: Partial autocorrelation coefficients lag functional time series.","code":""},{"path":"https://jrvanderdoes.github.io/fChange/reference/acf.html","id":"references","dir":"Reference","previous_headings":"","what":"References","title":"ACF/PACF Functions — acf","text":"Mestre G., Portela J., Rice G., Munoz San Roque ., Alonso E. (2021). Functional time series model identification diagnosis means auto- partial autocorrelation analysis. Computational Statistics & Data Analysis, 155, 107108. https://doi.org/10.1016/j.csda.2020.107108 Mestre, G., Portela, J., Munoz San Roque, ., Alonso, E. (2020). Forecasting hourly supply curves Italian Day-Ahead electricity market double-seasonal SARMAHX model. International Journal Electrical Power & Energy Systems, 121, 106083. https://doi.org/10.1016/j.ijepes.2020.106083 Kokoszka, P., Rice, G., Shang, H.L. (2017). Inference autocovariance functional time series conditional heteroscedasticity Journal Multivariate Analysis, 162, 32–50. https://doi.org/10.1016/j.jmva.2017.08.004 Mestre G., Portela J., Rice G., Munoz San Roque ., Alonso E. (2021). Functional time series model identification diagnosis means auto- partial autocorrelation analysis. Computational Statistics & Data Analysis, 155, 107108. https://doi.org/10.1016/j.csda.2020.107108","code":""},{"path":[]},{"path":"https://jrvanderdoes.github.io/fChange/reference/acf.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"ACF/PACF Functions — acf","text":"","code":"acf(1:10)  x <- generate_brownian_bridge(100, seq(0,1,length.out=20)) acf(x,20)   x <- generate_brownian_bridge(100, seq(0,1,length.out=20)) pacf(x,lag.max = 10, n_pcs = 2)    #> $pacfs #>  [1] 0.064037897 0.009777752 0.022652278 0.010114004 0.010038782 0.027484322 #>  [7] 0.010180744 0.010197617 0.007987793 0.014724775 #>  #> $SWN #> [1] 0.04969999 #>"},{"path":"https://jrvanderdoes.github.io/fChange/reference/adaptive_bandwidth.html","id":null,"dir":"Reference","previous_headings":"","what":"Adaptive_bandwidth — adaptive_bandwidth","title":"Adaptive_bandwidth — adaptive_bandwidth","text":"Computes \"optimal\" bandwidth using bandwidth selection method based spectral density operator adapts functional data.","code":""},{"path":"https://jrvanderdoes.github.io/fChange/reference/adaptive_bandwidth.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Adaptive_bandwidth — adaptive_bandwidth","text":"","code":"adaptive_bandwidth(X, kernel = \"bartlett\")"},{"path":"https://jrvanderdoes.github.io/fChange/reference/adaptive_bandwidth.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Adaptive_bandwidth — adaptive_bandwidth","text":"X dfts object data can automatically converted format. See dfts(). kernel Kernel function selection use, 'bartlett' 'parzen'.","code":""},{"path":"https://jrvanderdoes.github.io/fChange/reference/adaptive_bandwidth.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Adaptive_bandwidth — adaptive_bandwidth","text":"scalar value \"optimal\" data-adapted bandwidth.","code":""},{"path":"https://jrvanderdoes.github.io/fChange/reference/autocorrelation.html","id":null,"dir":"Reference","previous_headings":"","what":"Estimate the autocorrelation function of the series — autocorrelation","title":"Estimate the autocorrelation function of the series — autocorrelation","text":"Obtain empirical autocorrelation function given lags functional time series, X. Given functional time series, sample autocovariance functions \\(\\hat{C}_{h}(u,v)\\) given : $$\\hat{C}_{h}(u,v) =  \\frac{1}{T} \\sum_{=1}^{T-h}(Y_{}(u) -      \\overline{X}_{T}(u))(Y_{+h}(v) - \\overline{X}_{T}(v))$$ \\( \\overline{X}_{T}(u) = \\frac{1}{T} \\sum_{= 1}^{T} Y_{}(t)\\) denotes sample mean function. autocorrelation functions defined range \\((0,1)\\) normalizing functions using factor \\(\\int\\hat{C}_{0}(u,u)du\\).","code":""},{"path":"https://jrvanderdoes.github.io/fChange/reference/autocorrelation.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Estimate the autocorrelation function of the series — autocorrelation","text":"","code":"autocorrelation(X, lags)"},{"path":"https://jrvanderdoes.github.io/fChange/reference/autocorrelation.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Estimate the autocorrelation function of the series — autocorrelation","text":"X dfts object data can automatically converted format. See dfts(). lags Numeric(s) lags estimate lagged autocovariance / autocorrelation operators.","code":""},{"path":"https://jrvanderdoes.github.io/fChange/reference/autocorrelation.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Estimate the autocorrelation function of the series — autocorrelation","text":"Return list data.frame lagged autocorrelation function(s) estimated data. function given \\((r x r)\\) matrix, \\(r\\) number points observed curve.","code":""},{"path":"https://jrvanderdoes.github.io/fChange/reference/autocorrelation.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Estimate the autocorrelation function of the series — autocorrelation","text":"","code":"N <- 100 v <- seq(from = 0, to = 1, length.out = 10) sig <- 2 bbridge <- generate_brownian_bridge(N, v, sig)  lagged_autocor <- autocorrelation(X = bbridge, lags = 0:1) image(x = v, y = v, z = lagged_autocor$Lag0)  lagged_autocor1 <- autocorrelation(X = bbridge, lags = 1) image(x = v, y = v, z = lagged_autocor1)"},{"path":"https://jrvanderdoes.github.io/fChange/reference/autocovariance.html","id":null,"dir":"Reference","previous_headings":"","what":"Estimate the autocovariance function of the series — autocovariance","title":"Estimate the autocovariance function of the series — autocovariance","text":"Obtain empirical autocovariance function given lags functional time series, X. Given functional time series, sample autocovariance functions \\(\\hat{C}_{h}(u,v)\\) given : $$\\hat{C}_{h}(u,v) =  \\frac{1}{T} \\sum_{=1}^{T-h}(Y_{}(u) -      \\overline{Y}_{T}(u))(Y_{+h}(v) - \\overline{Y}_{T}(v))$$ \\( \\overline{Y}_{T}(u) = \\frac{1}{T} \\sum_{= 1}^{T} Y_{}(t)\\) denotes sample mean function.","code":""},{"path":"https://jrvanderdoes.github.io/fChange/reference/autocovariance.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Estimate the autocovariance function of the series — autocovariance","text":"","code":"autocovariance(X, lags = 0:1, center = TRUE)"},{"path":"https://jrvanderdoes.github.io/fChange/reference/autocovariance.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Estimate the autocovariance function of the series — autocovariance","text":"X dfts object data can automatically converted format. See dfts(). lags Numeric(s) lags estimate lagged autocovariance / autocorrelation operators. center Boolean data centered. Default true.","code":""},{"path":"https://jrvanderdoes.github.io/fChange/reference/autocovariance.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Estimate the autocovariance function of the series — autocovariance","text":"Return list data.frame lagged autocovariance function(s) estimated data. function given \\((r x r)\\) matrix, \\(r\\) number points observed curve.","code":""},{"path":"https://jrvanderdoes.github.io/fChange/reference/autocovariance.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Estimate the autocovariance function of the series — autocovariance","text":"","code":"v <- seq(0,1,length.out=20) lagged_autocov <- autocovariance(   X = generate_brownian_bridge(100,v=v),   lags = 1) image(x = v, y = v, z = lagged_autocov)"},{"path":"https://jrvanderdoes.github.io/fChange/reference/average.html","id":null,"dir":"Reference","previous_headings":"","what":"Average Functions for dfts Objects — average","title":"Average Functions for dfts Objects — average","text":"Compute average values dfts objects","code":""},{"path":"https://jrvanderdoes.github.io/fChange/reference/average.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Average Functions for dfts Objects — average","text":"","code":"# S3 method for class 'dfts' mean(x, na.rm = TRUE, ...)  # S3 method for class 'dfts' median(x, na.rm = TRUE, ...)"},{"path":"https://jrvanderdoes.github.io/fChange/reference/average.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Average Functions for dfts Objects — average","text":"x dfts object data can automatically converted format. See dfts(). na.rm Boolean NA values removed. Defaults TRUE. ... Additional parameters stats function","code":""},{"path":"https://jrvanderdoes.github.io/fChange/reference/average.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Average Functions for dfts Objects — average","text":"Numeric vector","code":""},{"path":"https://jrvanderdoes.github.io/fChange/reference/average.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Average Functions for dfts Objects — average","text":"","code":"results <- mean(electricity) results <- median(electricity)"},{"path":"https://jrvanderdoes.github.io/fChange/reference/cancer.html","id":null,"dir":"Reference","previous_headings":"","what":"Breast Cancer — cancer","title":"Breast Cancer — cancer","text":"Percentage cause-specific deaths total deaths female breast cancer United States 1950 2021.","code":""},{"path":"https://jrvanderdoes.github.io/fChange/reference/cancer.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Breast Cancer — cancer","text":"","code":"cancer"},{"path":[]},{"path":"https://jrvanderdoes.github.io/fChange/reference/cancer.html","id":"cancer","dir":"Reference","previous_headings":"","what":"cancer","title":"Breast Cancer — cancer","text":"data.frame columns year rows age groups (5 years)","code":""},{"path":"https://jrvanderdoes.github.io/fChange/reference/center.html","id":null,"dir":"Reference","previous_headings":"","what":"Generic Centering of Data — center","title":"Generic Centering of Data — center","text":"Generic Centering Data","code":""},{"path":"https://jrvanderdoes.github.io/fChange/reference/center.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Generic Centering of Data — center","text":"","code":"center(object, changes = NULL, type = \"mean\", ...)  # Default S3 method center(object, changes = NULL, type = \"mean\", ...)  # S3 method for class 'data.frame' center(object, changes = NULL, type = \"mean\", ...)  # S3 method for class 'matrix' center(object, changes = NULL, type = \"mean\", ...)  # S3 method for class 'dfts' center(object, changes = NULL, type = \"mean\", ...)"},{"path":"https://jrvanderdoes.github.io/fChange/reference/center.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Generic Centering of Data — center","text":"object Object computation centering changes Change points centering individual sections. type String mean median method centering. ... Unused","code":""},{"path":"https://jrvanderdoes.github.io/fChange/reference/center.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Generic Centering of Data — center","text":"Centered data format given data","code":""},{"path":[]},{"path":"https://jrvanderdoes.github.io/fChange/reference/center.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Generic Centering of Data — center","text":"","code":"center(1:10) #>  [1] -4.5 -3.5 -2.5 -1.5 -0.5  0.5  1.5  2.5  3.5  4.5"},{"path":"https://jrvanderdoes.github.io/fChange/reference/change.html","id":null,"dir":"Reference","previous_headings":"","what":"Change Function for dfts Objects — change","title":"Change Function for dfts Objects — change","text":"Change Function dfts Objects","code":""},{"path":"https://jrvanderdoes.github.io/fChange/reference/change.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Change Function for dfts Objects — change","text":"","code":"change(   X,   method = c(\"characteristic\", \"mean\", \"robustmean\", \"eigenjoint\", \"eigensingle\",     \"trace\", \"covariance\", \"projmean\", \"projdistribution\"),   statistic = c(\"Tn\", \"Mn\"),   critical = c(\"simulation\", \"permutation\", \"welch\"),   type = c(\"single\", \"segmentation\", \"elbow\"),   perm_type = \"separate\",   replace = TRUE,   max_changes = min(ncol(X), 20),   changes = NULL,   blocksize = 1,   eigen_number = 3,   h = 3,   M = 1000,   J = 50,   W = space_measuring_vectors(X = X, M = 20, space = \"BM\"),   K = bartlett_kernel,   alpha = 0.05,   cov.res = 30,   weighting = 1/4,   TVE = 0.95,   trim_function = function(X) {      0  },   errors = \"L2\",   recommendation_change_points = 2,   recommendation_improvement = 0.15,   silent.binary = TRUE )"},{"path":"https://jrvanderdoes.github.io/fChange/reference/change.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Change Function for dfts Objects — change","text":"X dfts object data can automatically converted format. See dfts(). method Method compute change point. Options include: 'characteristic', 'mean', 'robustmean', 'eigenjoint', 'eigensingle', 'trace', 'covariance', 'projmean', 'projdistribution'. statistic String Statistic. integrated, Tn, maximal, Mn. critical String method computing threshold. Options 'simulation', 'permutation', 'welch'. However, Welch approximation implemented methods. type String type change point detection, single change ('single'), binary segmentation ('segmentation'), elbow plots ('elbow'). perm_type String indicating type permutation test use. Using 'separate' gives blocks separate 'overlapping' creates overlapping sliding windows. blocksize=1 identical. replace Boolean using permutation bootstrapped statistic critical='permutation'. max_changes Integer max number changes search using type elbow. changes Vector change points given eigen test data centered values first. blocksize Integer width blocks using permutation test. Can use adaptive_bandwidth() additional guidance desired. eigen_number eigenvalue number eigenvalues checked eigenvalue tests. h Number lags used computing long run covariance estimates. Used mean, characteristic, eigenvalue tests. M Number simulations permutations critical values J Resolution (J) characteristic method. number vectors defined W. W Space measuring vectors characteristic method K Kernel function use characteristic, mean, eigen, covariance projmean alpha Significance Welch approximation cov.res Resolution use computing covariance kernel changes weighting Weights used covariance kernel method pcadistribution TVE Total variance explained projmean projdistribution trim_function Trimming used elbow plot errors Type errors used elbow plot. Options L2 Trace recommendation_change_points Number lags forward examine deciding automated elbow plot recommendation recommendation_improvement Significant drop look deciding automated elbow plot recommendation silent.binary Boolean output printed running binary segmentation","code":""},{"path":"https://jrvanderdoes.github.io/fChange/reference/change.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Change Function for dfts Objects — change","text":"list pvalue: location: statistic: simulations: extra:","code":""},{"path":"https://jrvanderdoes.github.io/fChange/reference/change.html","id":"references","dir":"Reference","previous_headings":"","what":"References","title":"Change Function for dfts Objects — change","text":"Aue, ., Rice, G., & Sonmez, O. (2018). Detecting dating structural breaks functional data without dimension reduction. Journal Royal Statistical Society. Series B, Statistical Methodology, 80(3), 509-529. https://doi.org/10.1111/rssb.12257 Wegner, L., Wendler, M. Robust change-point detection functional time series based U-statistics dependent wild bootstrap. Stat Papers (2024). Aue, ., Rice, G., & Sonmez, O. (2020). Structural break analysis spectrum trace covariance operators. Environmetrics (London, Ont.), 31(1) Horvath, L., Rice, G., & Zhao, Y. (2022). Change point analysis covariance functions: weighted cumulative sum approach. Journal Multivariate Analysis, 189, 104877-. Berkes, ., Gabrys, R.,Horvath, L. & P. Kokoszka (2009)., Detecting changes mean functional observations Journal Royal Statistical Society, Series B 71, 927-946 Aue, ., Gabrys, R.,Horvath, L. & P. Kokoszka (2009)., Estimation change-point mean function functional data Journal Multivariate Analysis 100, 2254-2269. Huskova, M., & Meintanis, S.G. (2006). Change Point Analysis based Empirical Characteristic Functions. Metrika, 63, 145-168.","code":""},{"path":"https://jrvanderdoes.github.io/fChange/reference/change.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Change Function for dfts Objects — change","text":"","code":"res <- change(electricity$data[,1:20],method='characteristic',critical = 'welch')"},{"path":"https://jrvanderdoes.github.io/fChange/reference/confidence_interval.html","id":null,"dir":"Reference","previous_headings":"","what":"Change Point Confidence Intervals — confidence_interval","title":"Change Point Confidence Intervals — confidence_interval","text":"Change Point Confidence Intervals","code":""},{"path":"https://jrvanderdoes.github.io/fChange/reference/confidence_interval.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Change Point Confidence Intervals — confidence_interval","text":"","code":"confidence_interval(   X,   changes,   K = bartlett_kernel,   h = 3,   weighting = 0.5,   M = 5000,   alpha = 0.1,   method = \"distribution\" )"},{"path":"https://jrvanderdoes.github.io/fChange/reference/confidence_interval.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Change Point Confidence Intervals — confidence_interval","text":"X dfts object data can automatically converted format. See dfts(). changes Numeric vector detected change points. K Function Kernel. Default bartlett_kernel. h Numeric bandwidth computation long run variance. weighting Weighting interval computation, value [0,1]. Default 0.5. M Numeric number Brownian motion simulations computation confidence interval. Default 1000. alpha Numeric significance level, [0,1]. Default 0.05. method String indicate method computing confidence interval. options 'distribution' 'simulation'. Default 'distribution'.","code":""},{"path":"https://jrvanderdoes.github.io/fChange/reference/confidence_interval.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Change Point Confidence Intervals — confidence_interval","text":"Data.frame first column change, second lower confidence interval, third upper confidence interval.","code":""},{"path":"https://jrvanderdoes.github.io/fChange/reference/confidence_interval.html","id":"references","dir":"Reference","previous_headings":"","what":"References","title":"Change Point Confidence Intervals — confidence_interval","text":"Horvath, L., & Rice, G. (2024). Change Point Analysis Time Series (First edition.). Springer. https://doi.org/10.1007/978-3-031-51609-2 Aue, ., Rice, G., & Sonmez, O. (2018). Detecting dating structural breaks functional data without dimension reduction. Journal Royal Statistical Society. Series B, Statistical Methodology, 80(3), 509-529. https://doi.org/10.1111/rssb.12257","code":""},{"path":"https://jrvanderdoes.github.io/fChange/reference/confidence_interval.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Change Point Confidence Intervals — confidence_interval","text":"","code":"X <- cbind(generate_brownian_motion(100,v=seq(0,1,0.05))$data,            generate_brownian_motion(100,v=seq(0,1,0.05))$data+1000) confidence_interval(X,changes = 100) #>   change lower upper #> 1    100   100   100 confidence_interval(X,changes=100,method = 'simulation') #>   change lower upper #> 1    100   100   100  X <- cbind(generate_brownian_motion(100,v=seq(0,1,0.05))$data,            generate_brownian_motion(100,v=seq(0,1,0.05))$data+0.5) confidence_interval(X,100,alpha = 0.1) #>   change   lower    upper #> 1    100 93.9421 106.7964 confidence_interval(X,changes=100,alpha = 0.1,method = 'simulation') #>   change    lower   upper #> 1    100 93.91219 106.167  X <- generate_brownian_motion(200,v=seq(0,1,0.05)) confidence_interval(X,100) #>   change    lower    upper #> 1    100 -9.58948 222.9499 confidence_interval(X,100,method = 'simulation') #>   change    lower   upper #> 1    100 -19.1008 214.578  X <- cbind(generate_brownian_motion(200,v=seq(0,1,0.05))$data,            generate_brownian_motion(100,v=seq(0,1,0.05))$data+0.1,            generate_brownian_motion(150,v=seq(0,1,0.05))$data-0.05) confidence_interval(X,c(200,300)) #>   change     lower    upper #> 1    200 -184.4212 631.2872 #> 2    300  234.3720 373.6289  # set.seed(12345) # bs <- binary_segmentation(electricity,statistic = 'Tn',method = 'Boot') confidence_interval(X = electricity, changes = c(66, 144, 204, 243, 305),alpha = 0.1) #>   change     lower     upper #> 1     66  51.56018  82.20023 #> 2    144 139.69874 148.82565 #> 3    204 169.98304 242.16407 #> 4    243 239.68931 246.71431 #> 5    305 296.96530 314.01424"},{"path":"https://jrvanderdoes.github.io/fChange/reference/cumsum.dfts.html","id":null,"dir":"Reference","previous_headings":"","what":"Cumsum for dfts object — cumsum.dfts","title":"Cumsum for dfts object — cumsum.dfts","text":"Cumsum dfts object","code":""},{"path":"https://jrvanderdoes.github.io/fChange/reference/cumsum.dfts.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Cumsum for dfts object — cumsum.dfts","text":"","code":"# S3 method for class 'dfts' cumsum(x)"},{"path":"https://jrvanderdoes.github.io/fChange/reference/cumsum.dfts.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Cumsum for dfts object — cumsum.dfts","text":"x dfts object data can automatically converted format. See dfts().","code":""},{"path":"https://jrvanderdoes.github.io/fChange/reference/cumsum.dfts.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Cumsum for dfts object — cumsum.dfts","text":"dfts object data cumsum","code":""},{"path":"https://jrvanderdoes.github.io/fChange/reference/cumsum.dfts.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Cumsum for dfts object — cumsum.dfts","text":"","code":"cumsum(electricity) #> $data #>        [,1]  [,2]   [,3]   [,4]   [,5]   [,6]   [,7]   [,8]   [,9]  [,10] #>  [1,] 20.02 25.15  40.45  61.95  66.95  91.95 116.75 152.19 178.65 223.60 #>  [2,] 10.34 10.34  15.47  23.97  23.97  29.10  40.75  65.75  78.97 108.97 #>  [3,]  5.35  5.35   5.35   7.85   7.85  10.05  14.18  26.63  31.63  55.64 #>  [4,]  5.00  5.00   5.00   5.00   5.00   5.00   6.50  21.50  25.50  41.19 #>  [5,]  0.50  0.50   0.50   0.50   0.50   0.50   2.00  11.65  15.10  27.79 #>  [6,]  0.00  0.00   0.00   0.00   0.00   0.00   5.00  23.00  34.14  58.15 #>  [7,]  0.00  0.00   2.00   2.00   2.00   2.00  21.00  41.00  66.69  98.75 #>  [8,]  0.00 18.90  45.90  45.90  45.90  47.10  98.77 133.77 177.94 229.24 #>  [9,]  0.00 27.20  64.22  64.22  64.22  64.32 121.42 166.82 215.02 276.73 #> [10,]  0.00 36.00  78.00  78.00  78.00  82.00 142.00 192.00 243.25 318.23 #> [11,]  2.00 42.13  87.16  87.16  88.16  93.85 150.56 200.56 252.59 326.66 #> [12,]  4.75 45.63  90.63  90.63  93.63  99.73 154.93 203.63 255.64 323.14 #> [13,]  5.35 47.00  92.50  92.50  97.50 106.60 164.80 214.57 279.59 352.59 #> [14,]  4.90 44.08  86.48  86.48  89.68  95.78 150.99 198.76 254.74 319.87 #> [15,]  0.90 36.10  73.35  73.35  76.35  82.04 137.24 182.74 238.72 297.96 #> [16,]  0.00 34.87  71.89  71.89  72.89  78.58 124.08 166.48 222.45 278.42 #> [17,]  0.00 30.00  72.34  72.34  72.44  77.64 122.83 167.24 227.24 282.36 #> [18,]  0.00 37.12  87.54  87.54  89.04  99.14 159.14 208.91 279.91 339.12 #> [19,]  5.00 46.39 138.49 148.49 155.69 185.69 265.79 321.56 406.54 486.53 #> [20,]  7.80 48.68 144.98 160.08 170.08 207.21 292.90 352.91 439.71 525.40 #> [21,] 18.90 59.78 154.68 172.49 187.49 231.52 319.12 384.05 471.65 557.85 #> [22,] 20.00 57.12 151.72 170.72 193.72 238.04 326.54 395.78 482.58 567.98 #> [23,] 20.00 55.11 113.12 126.22 138.32 182.64 267.24 322.27 402.38 477.36 #> [24,]  8.60 33.70  82.56  94.86 102.96 137.96 193.16 232.90 282.57 338.54 #>        [,11]  [,12]  [,13]  [,14]  [,15]  [,16]  [,17]   [,18]   [,19]   [,20] #>  [1,] 279.29 326.02 363.52 370.92 415.78 444.90 472.83  526.47  580.47  607.09 #>  [2,] 150.09 189.69 220.38 224.38 259.90 284.90 302.68  338.18  380.28  394.97 #>  [3,]  93.14 128.26 151.46 151.46 180.58 194.63 200.63  229.13  262.78  262.88 #>  [4,]  79.19 106.79 132.42 132.42 160.09 174.09 180.09  207.16  237.48  237.58 #>  [5,]  62.79  88.47 114.13 114.13 143.25 156.25 162.25  187.25  214.94  215.04 #>  [6,]  92.84 116.98 146.08 146.08 179.73 199.73 209.72  235.66  262.34  263.34 #>  [7,] 133.44 158.44 196.44 200.44 238.94 265.65 283.40  311.10  338.10  354.88 #>  [8,] 267.24 294.24 344.45 369.45 424.64 473.86 520.86  549.26  581.76  617.26 #>  [9,] 321.68 347.44 403.40 444.66 501.35 551.35 598.35  632.18  660.18  705.95 #> [10,] 367.41 403.92 460.19 508.21 573.34 623.34 673.34  720.11  755.11  802.11 #> [11,] 378.07 419.33 470.62 518.64 584.17 632.86 679.86  733.86  775.86  822.26 #> [12,] 374.70 415.96 463.98 510.98 571.00 620.22 667.08  715.44  755.45  797.32 #> [13,] 402.80 444.06 492.08 543.08 603.10 655.13 702.13  749.13  790.63  834.48 #> [14,] 374.87 413.37 460.27 511.20 567.51 617.51 664.51  711.28  744.93  791.93 #> [15,] 353.44 391.44 432.73 482.71 537.99 586.00 632.57  679.57  706.70  753.70 #> [16,] 328.42 365.63 401.13 441.14 495.37 542.37 587.30  631.47  661.27  703.37 #> [17,] 327.31 364.52 394.52 430.71 484.71 531.71 578.71  617.00  644.53  690.30 #> [18,] 389.12 427.12 465.62 508.02 564.70 615.88 669.98  716.98  744.08  797.38 #> [19,] 552.03 596.20 637.46 687.47 752.47 808.78 868.78  924.29  958.79 1016.79 #> [20,] 600.40 645.40 689.40 744.39 802.12 861.73 946.33 1006.01 1039.66 1104.79 #> [21,] 632.85 679.87 721.14 776.13 832.44 891.64 951.05 1011.40 1046.90 1112.03 #> [22,] 636.70 686.62 727.88 782.84 838.12 893.12 950.24 1009.24 1045.01 1112.11 #> [23,] 532.36 579.38 611.57 660.60 709.10 756.20 809.13  862.77  898.27  952.98 #> [24,] 388.54 433.54 453.54 494.80 531.01 572.27 619.27  674.33  706.65  749.15 #>         [,21]   [,22]   [,23]   [,24]   [,25]   [,26]   [,27]   [,28]   [,29] #>  [1,]  654.59  699.59  745.28  789.45  814.45  851.14  855.83  859.33  860.33 #>  [2,]  437.95  473.80  511.80  551.20  566.20  599.30  600.80  600.90  600.90 #>  [3,]  297.88  328.40  356.34  387.84  392.59  418.59  418.59  418.59  418.59 #>  [4,]  268.36  298.49  324.56  352.77  356.99  375.99  375.99  375.99  375.99 #>  [5,]  245.04  275.82  301.81  329.33  332.33  352.33  352.33  352.33  352.33 #>  [6,]  298.84  333.84  361.36  390.02  391.27  411.47  411.47  411.47  412.47 #>  [7,]  398.92  443.09  473.09  504.59  506.28  528.14  528.14  528.14  538.33 #>  [8,]  670.95  721.95  768.95  811.05  815.05  843.05  857.05  862.15  899.21 #>  [9,]  763.98  817.48  863.27  907.27  912.02  932.02  951.80  959.90 1001.90 #> [10,]  864.21  922.51  972.51 1019.36 1023.58 1050.46 1082.72 1095.72 1141.72 #> [11,]  879.39  936.29  985.00 1030.08 1044.77 1080.48 1110.78 1119.56 1164.56 #> [12,]  852.35  905.38  953.78  997.78 1014.78 1050.98 1069.76 1074.76 1117.26 #> [13,]  891.61  946.74  997.05 1042.05 1060.83 1100.83 1125.83 1130.83 1176.83 #> [14,]  846.93  900.55  949.34  993.03 1014.06 1049.32 1064.32 1068.32 1110.11 #> [15,]  807.39  857.18  907.49  949.18  971.68 1004.88 1010.38 1012.07 1053.04 #> [16,]  754.37  802.99  851.18  892.44  913.44  930.44  934.45  935.95  968.58 #> [17,]  740.99  788.49  836.59  873.99  892.77  900.78  902.80  903.80  934.72 #> [18,]  850.79  899.30  949.51  990.77 1013.27 1021.77 1034.77 1039.77 1072.40 #> [19,] 1073.92 1123.92 1176.61 1221.61 1261.30 1279.80 1307.63 1314.39 1353.79 #> [20,] 1166.11 1219.39 1277.84 1324.84 1366.10 1392.99 1430.68 1446.68 1492.68 #> [21,] 1171.82 1224.16 1277.35 1324.35 1371.35 1402.21 1441.00 1454.30 1501.78 #> [22,] 1173.67 1224.36 1276.48 1323.48 1370.58 1403.47 1442.26 1455.26 1501.26 #> [23,] 1009.29 1057.91 1106.59 1152.28 1199.28 1228.22 1262.56 1269.56 1303.56 #> [24,]  797.34  843.03  888.03  928.43  976.23  996.23 1011.23 1012.13 1038.82 #>         [,30]   [,31]   [,32]   [,33]   [,34]   [,35]   [,36]   [,37]   [,38] #>  [1,]  890.02  920.02  942.71  967.40  995.76 1011.74 1011.84 1014.84 1015.34 #>  [2,]  620.90  640.90  652.90  666.90  680.90  688.90  688.90  689.90  689.90 #>  [3,]  431.09  445.59  450.59  460.28  461.28  466.12  466.12  466.12  466.12 #>  [4,]  388.49  406.68  411.68  419.87  420.17  430.17  430.17  430.17  430.17 #>  [5,]  362.33  381.83  385.83  393.33  393.48  403.48  403.48  403.48  403.48 #>  [6,]  426.97  449.27  450.27  459.96  460.26  475.24  475.24  475.24  475.24 #>  [7,]  558.02  586.71  587.71  597.40  604.00  620.98  620.98  621.18  621.18 #>  [8,]  936.10  982.10  984.10  996.79 1026.19 1058.29 1059.29 1064.30 1066.30 #>  [9,] 1040.40 1087.91 1089.91 1102.60 1136.63 1175.13 1178.13 1186.13 1189.13 #> [10,] 1180.22 1233.32 1238.32 1255.82 1292.62 1336.89 1345.02 1365.03 1370.90 #> [11,] 1197.56 1247.56 1259.56 1285.59 1320.09 1361.09 1366.10 1375.10 1380.10 #> [12,] 1146.95 1195.95 1205.95 1234.66 1266.76 1299.58 1304.58 1310.97 1313.97 #> [13,] 1205.74 1253.25 1257.25 1289.77 1321.87 1354.69 1361.37 1367.81 1370.81 #> [14,] 1136.40 1183.20 1188.20 1218.40 1248.20 1278.20 1283.20 1289.20 1292.20 #> [15,] 1077.57 1123.57 1127.57 1157.57 1186.86 1212.91 1216.51 1221.51 1222.91 #> [16,]  988.58 1030.68 1031.20 1059.87 1086.94 1109.82 1113.82 1116.82 1117.82 #> [17,]  957.22  997.22  997.32 1025.98 1050.98 1070.96 1075.96 1078.96 1079.96 #> [18,] 1101.01 1144.01 1148.01 1179.43 1209.03 1235.06 1248.06 1253.06 1256.06 #> [19,] 1384.48 1430.48 1448.98 1487.48 1523.91 1558.81 1591.51 1597.88 1604.14 #> [20,] 1534.41 1588.71 1616.46 1660.66 1706.66 1744.66 1788.86 1795.86 1805.86 #> [21,] 1547.61 1597.61 1628.66 1682.66 1728.66 1763.86 1815.96 1822.96 1832.46 #> [22,] 1547.09 1594.60 1624.90 1678.90 1723.10 1752.50 1802.63 1812.66 1822.66 #> [23,] 1338.56 1384.56 1414.07 1456.47 1495.47 1514.97 1551.27 1557.47 1563.62 #> [24,] 1068.82 1106.82 1131.51 1166.35 1195.75 1202.75 1216.75 1219.69 1222.69 #>         [,39]   [,40]   [,41]   [,42]   [,43]   [,44]   [,45]   [,46]   [,47] #>  [1,] 1018.34 1018.54 1018.54 1019.05 1033.05 1033.55 1034.05 1040.05 1080.15 #>  [2,]  689.90  689.90  689.90  689.90  694.03  694.03  694.03  697.03  722.03 #>  [3,]  466.12  466.12  466.12  466.12  469.12  469.12  469.12  469.62  481.62 #>  [4,]  430.17  430.17  430.17  430.17  432.17  432.17  432.17  432.27  437.27 #>  [5,]  403.48  403.48  403.48  403.48  405.48  405.48  405.48  405.55  408.55 #>  [6,]  475.24  475.24  475.24  475.24  477.24  477.24  477.24  477.31  480.31 #>  [7,]  621.18  621.18  621.18  621.18  624.68  624.68  624.68  624.88  627.88 #>  [8,] 1066.30 1066.30 1066.30 1067.30 1100.19 1100.69 1103.19 1104.19 1109.19 #>  [9,] 1189.13 1189.13 1191.13 1196.13 1235.17 1237.67 1241.17 1243.17 1246.17 #> [10,] 1370.90 1370.90 1373.90 1383.93 1439.03 1443.53 1450.14 1455.14 1464.14 #> [11,] 1380.10 1380.10 1383.10 1393.10 1441.10 1445.60 1450.61 1459.61 1475.61 #> [12,] 1313.97 1313.98 1315.98 1325.98 1370.67 1375.17 1379.67 1391.67 1411.17 #> [13,] 1370.81 1370.95 1373.95 1387.95 1432.08 1437.59 1442.09 1454.09 1480.10 #> [14,] 1292.20 1292.21 1294.21 1308.21 1346.31 1351.31 1354.81 1364.01 1384.77 #> [15,] 1222.91 1222.91 1224.91 1239.91 1269.91 1273.92 1276.92 1284.92 1302.92 #> [16,] 1117.82 1117.82 1118.32 1134.82 1154.82 1158.32 1160.32 1166.32 1179.32 #> [17,] 1079.96 1079.96 1081.96 1103.96 1110.05 1113.55 1114.55 1120.05 1132.55 #> [18,] 1256.06 1256.06 1259.06 1287.90 1294.08 1300.59 1303.59 1317.59 1331.59 #> [19,] 1606.94 1606.95 1613.95 1654.45 1669.58 1682.08 1686.08 1729.89 1749.39 #> [20,] 1809.06 1811.06 1821.06 1873.06 1899.06 1927.26 1934.26 2001.41 2043.41 #> [21,] 1837.46 1840.46 1853.46 1928.46 1950.24 1980.24 1987.45 2072.43 2132.43 #> [22,] 1828.66 1831.66 1845.66 1921.36 1940.05 1968.05 1976.05 2056.05 2129.18 #> [23,] 1567.02 1570.02 1576.92 1623.92 1630.22 1642.22 1648.38 1695.38 1763.22 #> [24,] 1225.69 1225.79 1228.79 1257.52 1260.02 1263.52 1266.52 1296.55 1338.55 #>         [,48]   [,49]   [,50]   [,51]   [,52]   [,53]   [,54]   [,55]   [,56] #>  [1,] 1105.15 1151.15 1169.15 1176.15 1181.65 1230.65 1252.15 1265.25 1281.55 #>  [2,]  725.03  761.43  769.43  774.43  777.48  793.49  809.29  820.09  825.09 #>  [3,]  481.62  502.41  505.71  506.71  506.72  519.02  525.52  526.02  529.32 #>  [4,]  437.27  458.02  461.02  461.22  461.22  473.32  477.82  478.42  481.42 #>  [5,]  408.55  425.85  428.85  428.95  428.95  438.96  440.46  441.46  443.47 #>  [6,]  480.31  501.21  504.31  504.51  504.58  514.58  516.08  523.08  526.08 #>  [7,]  628.33  667.11  672.11  674.11  677.11  687.11  688.61  706.67  712.67 #>  [8,] 1147.69 1202.69 1224.69 1231.69 1240.01 1252.51 1254.01 1290.33 1311.53 #>  [9,] 1285.45 1358.95 1393.95 1409.95 1423.38 1424.38 1424.88 1472.88 1495.18 #> [10,] 1511.14 1601.13 1641.08 1668.08 1700.21 1703.31 1704.81 1777.91 1803.04 #> [11,] 1519.25 1598.32 1635.62 1655.62 1690.09 1695.09 1697.09 1745.09 1769.09 #> [12,] 1449.67 1517.17 1549.30 1565.30 1595.30 1600.30 1601.80 1642.39 1664.69 #> [13,] 1522.27 1592.30 1629.60 1643.03 1667.03 1672.03 1673.53 1718.54 1741.04 #> [14,] 1425.17 1474.42 1508.42 1515.42 1533.58 1538.59 1539.09 1577.09 1598.39 #> [15,] 1341.42 1388.42 1417.91 1422.91 1432.94 1437.95 1438.02 1473.03 1494.23 #> [16,] 1217.30 1254.21 1283.55 1287.55 1295.87 1299.56 1299.56 1330.56 1350.16 #> [17,] 1169.65 1201.22 1230.55 1233.65 1242.00 1245.30 1245.30 1275.30 1294.09 #> [18,] 1382.40 1416.87 1451.34 1456.34 1471.45 1476.55 1476.55 1508.39 1529.69 #> [19,] 1817.97 1863.07 1905.07 1912.08 1946.55 1983.42 1989.46 2030.56 2053.06 #> [20,] 2142.41 2191.66 2249.13 2273.14 2312.89 2365.89 2379.89 2468.99 2497.79 #> [21,] 2231.43 2280.43 2328.43 2359.37 2397.37 2449.37 2464.47 2554.47 2584.47 #> [22,] 2239.18 2281.97 2328.97 2358.97 2393.97 2443.76 2463.76 2512.76 2542.76 #> [23,] 1826.74 1865.14 1902.44 1914.44 1934.44 1972.44 1991.88 2026.98 2048.39 #> [24,] 1380.95 1410.05 1430.05 1434.05 1449.16 1487.16 1501.66 1521.66 1540.45 #>         [,57]   [,58]   [,59]   [,60]   [,61]   [,62]   [,63]   [,64]   [,65] #>  [1,] 1291.55 1317.55 1323.33 1328.06 1329.25 1329.25 1330.25 1332.25 1367.35 #>  [2,]  830.09  847.29  851.42  855.55  856.55  856.55  856.55  857.05  890.05 #>  [3,]  532.32  545.82  547.82  549.82  549.82  549.82  549.82  549.82  573.14 #>  [4,]  483.92  496.02  496.52  498.02  498.02  498.02  498.02  498.02  522.12 #>  [5,]  446.47  457.47  457.48  458.48  458.48  458.48  458.48  458.48  480.93 #>  [6,]  530.58  544.27  544.77  544.87  544.87  544.87  544.87  544.97  569.07 #>  [7,]  723.67  738.87  740.37  740.97  740.97  740.97  740.97  742.23  773.23 #>  [8,] 1338.00 1365.00 1373.03 1374.03 1374.03 1374.53 1376.78 1386.38 1434.68 #>  [9,] 1523.19 1551.20 1560.20 1560.30 1560.30 1561.31 1564.72 1578.70 1628.80 #> [10,] 1833.84 1867.17 1875.37 1878.37 1878.37 1880.89 1884.89 1903.89 1953.99 #> [11,] 1799.89 1831.39 1838.62 1843.12 1844.12 1846.12 1849.02 1864.52 1911.52 #> [12,] 1693.60 1724.60 1730.61 1734.24 1735.74 1736.74 1738.99 1749.99 1796.39 #> [13,] 1771.04 1809.04 1814.82 1816.83 1818.84 1819.84 1822.63 1837.63 1884.63 #> [14,] 1627.33 1668.33 1672.67 1674.67 1676.03 1677.22 1679.85 1695.35 1742.10 #> [15,] 1520.23 1558.23 1561.13 1563.14 1564.14 1565.14 1566.83 1576.83 1619.16 #> [16,] 1372.56 1403.36 1407.70 1409.59 1409.69 1410.17 1411.17 1420.17 1459.29 #> [17,] 1317.09 1347.09 1351.43 1352.03 1352.03 1352.53 1353.53 1363.03 1402.15 #> [18,] 1556.65 1590.09 1595.09 1595.19 1595.19 1596.19 1598.71 1618.61 1662.32 #> [19,] 2083.06 2123.16 2128.94 2130.94 2130.94 2131.94 2136.28 2169.28 2224.28 #> [20,] 2535.79 2583.79 2592.79 2596.55 2598.05 2602.55 2611.23 2661.23 2741.22 #> [21,] 2633.47 2674.77 2685.77 2689.30 2691.80 2696.80 2705.50 2760.50 2850.50 #> [22,] 2590.76 2627.57 2640.57 2645.57 2648.10 2652.60 2661.98 2709.98 2793.68 #> [23,] 2085.69 2115.69 2124.99 2128.52 2130.52 2132.77 2139.27 2176.92 2225.22 #> [24,] 1567.48 1589.88 1599.02 1601.03 1602.03 1603.03 1606.17 1632.97 1679.28 #>         [,66]   [,67]   [,68]   [,69]   [,70]   [,71]   [,72]   [,73]   [,74] #>  [1,] 1403.75 1437.45 1448.45 1471.14 1491.14 1520.84 1557.84 1596.84 1632.54 #>  [2,]  920.97  941.66  947.66  962.76  977.66 1007.21 1041.81 1076.41 1112.44 #>  [3,]  600.82  615.92  617.92  626.72  633.52  662.92  692.49  721.71  754.71 #>  [4,]  548.42  561.43  561.93  571.83  578.83  608.37  637.92  667.92  699.92 #>  [5,]  506.93  512.06  512.06  522.06  529.20  558.71  588.23  618.23  647.83 #>  [6,]  598.17  601.07  601.07  612.57  623.57  655.47  689.16  722.16  751.28 #>  [7,]  804.96  809.86  809.86  829.35  847.75  883.44  921.34  961.84  990.85 #>  [8,] 1485.19 1500.09 1500.19 1546.29 1582.59 1622.59 1668.13 1714.13 1743.14 #>  [9,] 1678.90 1684.80 1684.80 1731.82 1771.12 1813.12 1859.31 1906.21 1933.11 #> [10,] 2005.61 2021.11 2021.12 2067.22 2107.02 2148.71 2194.51 2240.51 2269.51 #> [11,] 1958.53 1974.22 1975.22 2015.22 2052.22 2091.82 2133.84 2178.34 2207.54 #> [12,] 1840.62 1856.31 1857.31 1895.31 1931.61 1968.71 2008.71 2050.81 2080.01 #> [13,] 1930.32 1945.42 1947.32 1984.92 2021.22 2058.62 2099.13 2144.16 2173.17 #> [14,] 1785.10 1800.10 1802.10 1839.40 1875.60 1911.29 1951.29 1995.46 2022.36 #> [15,] 1659.26 1674.16 1676.16 1710.36 1744.03 1780.03 1819.33 1861.35 1889.35 #> [16,] 1495.69 1501.59 1503.60 1535.29 1566.19 1601.19 1638.88 1679.88 1704.18 #> [17,] 1437.28 1442.28 1445.18 1479.38 1510.28 1545.97 1583.66 1624.17 1644.17 #> [18,] 1704.32 1714.32 1719.32 1757.72 1790.92 1829.77 1869.37 1911.27 1935.57 #> [19,] 2273.28 2291.45 2309.49 2355.18 2394.48 2437.48 2483.48 2529.02 2559.02 #> [20,] 2801.35 2831.35 2864.05 2914.59 2960.49 3020.49 3080.62 3128.06 3162.06 #> [21,] 2911.30 2937.30 2970.31 3016.41 3056.21 3109.34 3169.34 3217.36 3250.37 #> [22,] 2852.16 2873.39 2907.59 2947.49 2984.69 3033.69 3088.71 3134.71 3167.71 #> [23,] 2272.22 2291.19 2324.21 2359.21 2392.41 2436.27 2482.27 2526.44 2557.45 #> [24,] 1719.54 1735.54 1764.54 1792.23 1821.68 1861.18 1901.08 1941.59 1970.80 #>         [,75]   [,76]   [,77]   [,78]   [,79]   [,80]   [,81]   [,82]   [,83] #>  [1,] 1655.74 1690.75 1734.31 1756.31 1798.61 1829.76 1865.86 1882.86 1918.86 #>  [2,] 1130.45 1164.95 1203.95 1219.95 1260.55 1286.24 1312.54 1326.04 1355.54 #>  [3,]  761.71  788.41  822.91  828.91  864.92  884.92  900.92  910.09  932.39 #>  [4,]  706.32  736.36  770.96  778.96  814.36  834.36  851.49  858.53  880.63 #>  [5,]  654.23  685.27  718.67  726.67  760.07  782.07  798.07  805.11  825.91 #>  [6,]  758.28  793.28  826.41  836.81  871.01  896.70  914.70  922.70  946.10 #>  [7,]  998.95 1037.35 1076.35 1096.44 1136.44 1165.65 1186.85 1195.86 1224.97 #>  [8,] 1753.14 1798.16 1842.33 1872.33 1915.35 1956.04 1978.04 1986.29 2020.31 #>  [9,] 1941.21 1988.90 2034.90 2070.90 2116.59 2159.59 2181.69 2188.73 2226.23 #> [10,] 2276.51 2323.70 2369.70 2409.70 2455.48 2496.74 2518.84 2524.85 2561.88 #> [11,] 2215.54 2260.54 2304.10 2344.10 2387.44 2428.34 2451.74 2459.74 2495.84 #> [12,] 2094.02 2138.71 2179.97 2219.38 2262.38 2302.38 2320.38 2329.39 2365.39 #> [13,] 2188.17 2233.19 2276.19 2317.88 2361.91 2401.91 2415.11 2426.11 2461.45 #> [14,] 2032.36 2077.36 2118.62 2159.88 2203.44 2242.44 2253.44 2264.44 2295.44 #> [15,] 1899.35 1943.52 1982.52 2023.78 2065.88 2103.89 2110.93 2122.93 2152.53 #> [16,] 1712.28 1755.28 1790.28 1830.28 1870.98 1901.08 1906.08 1918.08 1945.08 #> [17,] 1652.27 1695.27 1729.77 1770.17 1810.61 1840.61 1843.61 1856.61 1878.63 #> [18,] 1950.56 1994.56 2029.56 2071.25 2112.75 2148.25 2153.25 2168.75 2192.15 #> [19,] 2580.02 2626.61 2665.61 2710.21 2752.90 2793.59 2804.59 2830.89 2859.89 #> [20,] 3195.06 3257.86 3300.39 3350.39 3395.40 3440.53 3461.89 3499.29 3529.29 #> [21,] 3289.77 3379.77 3421.46 3472.36 3518.36 3561.92 3585.35 3628.91 3661.92 #> [22,] 3207.71 3283.40 3321.92 3381.92 3427.92 3469.18 3499.05 3545.05 3575.45 #> [23,] 2596.85 2648.54 2684.55 2731.24 2772.50 2813.29 2837.30 2882.31 2911.47 #> [24,] 2003.84 2047.34 2077.34 2119.72 2153.92 2191.42 2213.54 2252.54 2269.55 #>         [,84]   [,85]   [,86]   [,87]   [,88]   [,89]   [,90]   [,91]   [,92] #>  [1,] 1928.89 1934.89 1972.89 2011.77 2042.17 2075.37 2104.01 2132.01 2154.11 #>  [2,] 1364.69 1369.69 1407.09 1437.22 1463.43 1494.53 1523.01 1543.81 1560.06 #>  [3,]  938.39  940.89  976.99 1005.46 1026.36 1057.46 1078.26 1090.96 1103.66 #>  [4,]  885.63  887.63  923.73  952.09  977.09  997.99 1019.91 1030.04 1046.04 #>  [5,]  830.01  832.01  868.99  895.00  917.30  935.74  957.66  967.66  981.67 #>  [6,]  952.10  955.10  994.60 1023.03 1045.93 1062.13 1087.13 1097.13 1117.93 #>  [7,] 1232.01 1238.01 1280.51 1310.51 1334.52 1354.62 1389.72 1407.12 1436.92 #>  [8,] 2034.31 2045.31 2093.65 2129.75 2154.65 2175.55 2215.56 2236.46 2270.46 #>  [9,] 2242.98 2256.98 2311.78 2351.90 2376.90 2397.80 2439.80 2467.80 2507.30 #> [10,] 2577.88 2594.13 2650.23 2691.23 2719.56 2742.46 2784.48 2815.48 2857.50 #> [11,] 2505.19 2521.20 2573.81 2614.39 2642.80 2671.81 2713.81 2747.01 2789.41 #> [12,] 2372.93 2388.43 2440.22 2480.44 2505.67 2533.23 2574.49 2604.49 2646.50 #> [13,] 2469.48 2485.49 2537.59 2578.68 2602.69 2631.64 2671.84 2696.84 2736.66 #> [14,] 2302.48 2318.08 2367.47 2407.67 2430.70 2455.71 2495.81 2522.81 2562.31 #> [15,] 2159.53 2172.53 2219.99 2259.49 2284.60 2309.50 2346.97 2368.89 2405.29 #> [16,] 1951.08 1962.08 2007.08 2043.01 2065.67 2086.47 2121.87 2142.00 2178.69 #> [17,] 1884.63 1898.63 1943.76 1979.64 2001.77 2015.80 2049.90 2064.90 2101.17 #> [18,] 2199.15 2215.42 2264.35 2300.75 2325.86 2341.86 2377.26 2394.66 2432.21 #> [19,] 2869.79 2893.19 2948.32 2988.42 3020.82 3043.11 3078.51 3092.51 3130.27 #> [20,] 3543.30 3577.10 3691.02 3734.02 3769.04 3797.04 3838.30 3858.30 3899.15 #> [21,] 3679.92 3720.12 3815.12 3860.12 3898.41 3935.10 3976.62 4001.62 4045.79 #> [22,] 3592.95 3633.15 3703.15 3746.81 3786.81 3826.31 3865.81 3891.84 3941.84 #> [23,] 2923.60 2962.60 3008.62 3048.96 3085.94 3125.04 3161.73 3184.76 3226.78 #> [24,] 2277.55 2311.56 2350.25 2389.75 2424.63 2458.73 2487.80 2511.20 2550.70 #>         [,93]   [,94]   [,95]   [,96]   [,97]   [,98]   [,99]  [,100]  [,101] #>  [1,] 2188.21 2197.21 2215.11 2248.11 2283.80 2321.49 2349.49 2383.22 2411.91 #>  [2,] 1589.56 1595.56 1613.91 1643.60 1668.60 1702.00 1719.90 1749.90 1776.44 #>  [3,] 1131.02 1136.02 1151.22 1170.70 1184.26 1214.26 1230.16 1255.25 1278.35 #>  [4,] 1073.17 1078.07 1089.07 1111.67 1118.67 1148.68 1164.88 1190.37 1216.88 #>  [5,] 1004.12 1007.10 1018.10 1038.10 1044.10 1070.60 1085.59 1110.59 1135.59 #>  [6,] 1138.83 1141.82 1152.82 1172.82 1189.62 1216.17 1231.17 1256.86 1281.86 #>  [7,] 1466.91 1473.95 1486.15 1502.95 1537.05 1571.85 1597.54 1630.40 1659.09 #>  [8,] 2310.76 2322.76 2338.66 2355.46 2392.96 2432.30 2466.40 2501.00 2531.01 #>  [9,] 2552.45 2564.45 2577.45 2593.35 2634.64 2675.93 2712.24 2749.93 2781.74 #> [10,] 2902.67 2918.67 2938.36 2955.16 2999.22 3040.57 3078.83 3117.52 3152.30 #> [11,] 2834.46 2844.46 2868.15 2890.15 2931.41 2972.68 3010.93 3047.93 3080.33 #> [12,] 2687.50 2696.30 2719.14 2739.64 2778.65 2817.34 2854.84 2889.34 2920.24 #> [13,] 2776.34 2785.14 2807.98 2827.47 2866.03 2904.04 2942.24 2976.84 3007.55 #> [14,] 2600.19 2610.54 2634.23 2653.73 2691.93 2729.62 2769.02 2804.05 2834.74 #> [15,] 2436.19 2443.23 2461.13 2479.13 2515.93 2550.93 2589.03 2623.13 2652.13 #> [16,] 2205.82 2213.32 2228.42 2244.32 2281.12 2316.12 2353.92 2388.92 2417.21 #> [17,] 2124.07 2131.07 2142.07 2154.47 2191.16 2225.26 2262.38 2296.75 2323.01 #> [18,] 2448.21 2455.25 2466.25 2481.25 2518.70 2552.80 2590.30 2625.00 2651.16 #> [19,] 3140.40 3147.40 3162.40 3182.90 3220.40 3254.50 3292.00 3326.01 3352.11 #> [20,] 3922.05 3931.05 3955.20 3983.00 4022.35 4059.85 4097.35 4132.05 4160.73 #> [21,] 4078.59 4100.49 4134.59 4170.22 4214.39 4253.73 4294.99 4332.99 4362.99 #> [22,] 3975.94 4000.95 4039.96 4080.36 4125.53 4165.93 4207.42 4248.11 4279.87 #> [23,] 3257.28 3277.78 3315.08 3355.28 3399.45 3436.95 3477.64 3515.64 3545.64 #> [24,] 2572.60 2587.60 2621.70 2658.90 2697.59 2729.69 2766.81 2801.81 2830.49 #>        [,102]  [,103]  [,104]  [,105]  [,106]  [,107]  [,108]  [,109]  [,110] #>  [1,] 2436.91 2459.20 2480.89 2513.99 2552.00 2583.69 2617.47 2641.03 2656.75 #>  [2,] 1790.64 1799.64 1810.64 1841.94 1879.04 1905.58 1936.27 1959.31 1971.21 #>  [3,] 1288.35 1296.35 1301.35 1331.04 1363.74 1389.74 1416.45 1436.45 1446.39 #>  [4,] 1225.68 1234.68 1239.68 1269.68 1303.08 1329.16 1355.74 1373.74 1383.93 #>  [5,] 1145.59 1154.28 1159.28 1188.18 1219.08 1244.08 1270.77 1288.37 1297.17 #>  [6,] 1291.86 1299.86 1305.86 1336.86 1369.90 1395.95 1420.95 1437.39 1446.19 #>  [7,] 1669.78 1676.47 1698.47 1734.97 1773.17 1802.17 1824.17 1842.87 1853.43 #>  [8,] 2543.01 2549.01 2574.70 2613.04 2653.25 2681.26 2699.62 2717.62 2726.42 #>  [9,] 2792.23 2797.23 2831.22 2872.48 2913.74 2943.34 2961.34 2979.34 2988.14 #> [10,] 3166.50 3171.50 3207.90 3249.40 3290.90 3320.90 3339.90 3361.90 3373.80 #> [11,] 3093.03 3101.28 3137.62 3178.88 3220.14 3250.14 3273.27 3301.57 3316.59 #> [12,] 2932.84 2941.53 2974.53 3014.93 3054.14 3082.15 3105.95 3134.64 3151.64 #> [13,] 3020.95 3029.95 3062.95 3102.95 3141.35 3167.65 3191.45 3221.05 3236.05 #> [14,] 2848.09 2858.09 2891.09 2930.16 2968.56 2994.86 3018.75 3049.44 3065.13 #> [15,] 2664.13 2674.10 2702.60 2740.10 2777.70 2800.80 2822.80 2853.49 2867.50 #> [16,] 2429.21 2436.21 2464.23 2501.73 2537.85 2559.65 2579.68 2606.70 2618.70 #> [17,] 2333.70 2339.39 2367.41 2404.14 2440.14 2455.27 2473.27 2496.83 2508.33 #> [18,] 2661.16 2666.85 2696.85 2734.14 2769.83 2783.23 2799.92 2821.27 2833.27 #> [19,] 3362.11 3368.31 3396.97 3434.47 3470.16 3486.28 3503.28 3524.28 3540.31 #> [20,] 4169.53 4184.18 4214.38 4252.39 4289.06 4309.15 4329.15 4348.83 4367.83 #> [21,] 4376.34 4406.34 4439.36 4480.71 4519.11 4544.14 4569.14 4591.14 4619.24 #> [22,] 4304.87 4340.27 4381.53 4425.87 4467.13 4497.13 4531.03 4560.84 4598.18 #> [23,] 3562.74 3595.84 3634.64 3676.14 3714.54 3743.50 3778.19 3807.75 3846.95 #> [24,] 2843.84 2869.62 2902.63 2941.40 2977.09 2999.09 3029.78 3054.88 3089.98 #>        [,111]  [,112]  [,113]  [,114]  [,115]  [,116]  [,117]  [,118]  [,119] #>  [1,] 2686.83 2713.67 2744.67 2786.17 2800.07 2817.17 2833.86 2864.86 2902.36 #>  [2,] 2001.21 2022.21 2049.44 2089.34 2097.59 2112.59 2123.59 2153.70 2188.70 #>  [3,] 1473.10 1493.10 1520.12 1558.80 1565.49 1576.49 1584.79 1614.29 1644.29 #>  [4,] 1408.63 1429.63 1456.80 1496.30 1502.30 1510.18 1518.48 1543.48 1572.18 #>  [5,] 1318.17 1337.17 1364.27 1400.42 1406.42 1413.46 1421.86 1446.55 1473.15 #>  [6,] 1471.19 1491.19 1518.44 1553.74 1559.74 1566.78 1577.78 1603.47 1631.47 #>  [7,] 1881.43 1910.23 1945.23 1984.73 1994.42 2002.67 2014.67 2044.69 2079.95 #>  [8,] 2756.11 2788.81 2827.01 2868.51 2883.41 2892.41 2904.41 2941.42 2982.68 #>  [9,] 3019.00 3055.69 3096.09 3140.65 3160.65 3168.90 3180.23 3221.43 3262.93 #> [10,] 3409.20 3447.23 3488.73 3535.29 3555.29 3565.29 3580.06 3621.46 3663.47 #> [11,] 3353.28 3390.62 3432.12 3476.12 3491.80 3504.80 3525.90 3567.20 3608.88 #> [12,] 3186.33 3220.34 3261.60 3302.86 3313.86 3325.76 3346.45 3387.34 3428.84 #> [13,] 3271.45 3304.51 3345.77 3384.17 3394.86 3407.86 3428.55 3468.35 3509.85 #> [14,] 3101.43 3134.13 3175.02 3208.12 3220.81 3233.81 3254.91 3295.91 3336.91 #> [15,] 2900.64 2929.74 2968.84 2993.00 3002.19 3011.09 3027.52 3063.86 3101.36 #> [16,] 2649.39 2676.15 2714.55 2737.05 2747.05 2753.05 2765.55 2800.55 2835.55 #> [17,] 2537.13 2561.87 2599.56 2616.56 2624.12 2629.12 2636.16 2669.64 2700.04 #> [18,] 2860.27 2884.96 2923.16 2938.16 2946.04 2951.04 2957.04 2990.52 3020.53 #> [19,] 3567.07 3591.07 3629.47 3644.47 3652.47 3657.57 3663.57 3696.39 3726.39 #> [20,] 4396.83 4423.51 4463.01 4483.01 4491.26 4497.26 4505.56 4540.58 4571.24 #> [21,] 4652.93 4682.93 4724.43 4751.54 4766.44 4774.69 4796.70 4836.70 4872.70 #> [22,] 4637.38 4673.33 4720.35 4750.51 4772.51 4788.82 4818.32 4860.18 4901.44 #> [23,] 3885.15 3919.32 3963.72 3989.41 4008.41 4023.27 4053.27 4094.53 4134.03 #> [24,] 3123.88 3153.88 3195.38 3213.38 3230.07 3242.07 3271.07 3309.57 3347.07 #>        [,120]  [,121]  [,122]  [,123]  [,124]  [,125]  [,126]  [,127]  [,128] #>  [1,] 2935.76 2972.51 2992.55 3023.55 3061.05 3107.06 3151.33 3197.33 3242.73 #>  [2,] 2222.30 2255.70 2271.44 2301.44 2336.44 2379.34 2419.84 2463.41 2507.14 #>  [3,] 1677.69 1708.69 1723.69 1748.89 1778.89 1818.29 1857.86 1896.76 1935.66 #>  [4,] 1604.86 1636.86 1652.01 1673.66 1703.66 1743.06 1781.46 1820.36 1859.26 #>  [5,] 1505.15 1536.02 1548.02 1566.70 1596.70 1634.70 1672.92 1711.82 1750.71 #>  [6,] 1664.87 1695.57 1709.38 1729.41 1759.43 1798.83 1838.40 1877.97 1916.97 #>  [7,] 2120.96 2150.96 2171.80 2195.50 2225.55 2269.00 2313.27 2359.27 2404.99 #>  [8,] 3024.73 3053.43 3080.13 3104.13 3135.56 3181.11 3227.52 3278.55 3330.56 #>  [9,] 3307.10 3334.10 3364.12 3385.77 3415.77 3465.78 3516.98 3571.99 3625.47 #> [10,] 3707.64 3736.24 3766.34 3790.09 3822.84 3873.77 3926.08 3982.04 4037.05 #> [11,] 3652.08 3682.08 3712.11 3737.12 3774.02 3824.25 3875.65 3931.61 3985.62 #> [12,] 3470.64 3500.64 3530.08 3555.28 3593.28 3641.45 3690.99 3746.95 3799.96 #> [13,] 3551.35 3581.35 3609.35 3635.65 3674.65 3722.63 3772.63 3829.52 3884.39 #> [14,] 3378.17 3408.17 3436.17 3466.17 3506.17 3552.87 3601.34 3657.35 3710.75 #> [15,] 3140.20 3168.17 3192.67 3222.67 3262.67 3307.67 3353.56 3407.96 3458.65 #> [16,] 2872.05 2898.50 2920.51 2949.20 2987.60 3031.87 3077.70 3132.10 3181.51 #> [17,] 2734.39 2755.39 2776.61 2802.91 2840.91 2885.18 2930.79 2985.19 3032.91 #> [18,] 3054.14 3072.14 3093.30 3119.60 3157.71 3201.98 3248.31 3302.51 3350.01 #> [19,] 3759.12 3778.12 3799.28 3825.97 3865.99 3910.26 3956.76 4008.77 4056.27 #> [20,] 4606.24 4631.05 4652.44 4682.45 4723.93 4768.20 4816.21 4866.21 4913.66 #> [21,] 4911.39 4941.39 4965.59 5001.29 5047.50 5093.00 5145.98 5195.98 5245.98 #> [22,] 4942.94 4976.34 5006.34 5047.84 5107.84 5158.04 5214.00 5266.36 5321.37 #> [23,] 4172.87 4206.27 4231.57 4271.37 4344.27 4390.40 4442.42 4490.44 4541.13 #> [24,] 3382.57 3412.57 3435.27 3472.97 3523.09 3568.09 3616.10 3662.25 3707.65 #>        [,129]  [,130]  [,131]  [,132]  [,133]  [,134]  [,135]  [,136]  [,137] #>  [1,] 3288.56 3340.71 3386.11 3428.61 3465.11 3495.51 3528.52 3561.02 3591.12 #>  [2,] 2548.64 2598.67 2642.27 2683.53 2715.43 2742.17 2772.38 2798.79 2828.49 #>  [3,] 1974.55 2020.55 2061.81 2101.14 2131.14 2154.31 2182.48 2208.03 2235.99 #>  [4,] 1898.16 1943.56 1984.82 2023.82 2053.82 2074.33 2100.98 2125.00 2151.82 #>  [5,] 1789.61 1835.01 1875.56 1915.06 1945.06 1967.03 1995.34 2020.87 2046.41 #>  [6,] 1956.97 2002.37 2042.27 2083.53 2113.63 2139.12 2169.67 2196.48 2222.52 #>  [7,] 2450.69 2496.59 2534.69 2578.86 2615.86 2649.57 2688.21 2721.21 2749.69 #>  [8,] 3383.56 3429.89 3466.99 3515.49 3559.66 3603.93 3651.35 3694.13 3723.14 #>  [9,] 3680.49 3725.89 3762.09 3816.96 3861.96 3907.96 3957.96 4002.92 4032.43 #> [10,] 4093.03 4139.61 4177.71 4233.67 4279.07 4324.07 4375.76 4419.75 4450.25 #> [11,] 4041.60 4089.77 4131.17 4187.13 4232.53 4278.43 4326.53 4370.53 4402.93 #> [12,] 3855.94 3904.04 3945.30 4000.30 4044.47 4090.60 4138.90 4182.43 4212.93 #> [13,] 3940.66 3989.16 4030.42 4086.31 4131.28 4179.78 4227.88 4271.87 4304.87 #> [14,] 3767.95 3817.96 3859.22 3914.22 3958.39 4006.74 4054.84 4098.31 4132.00 #> [15,] 3513.52 3561.69 3601.59 3651.61 3693.11 3740.13 3786.53 3827.79 3860.29 #> [16,] 3236.38 3282.96 3319.96 3367.56 3408.82 3456.65 3502.64 3542.64 3574.11 #> [17,] 3087.47 3132.87 3168.00 3214.35 3254.75 3301.75 3347.72 3387.72 3417.86 #> [18,] 3404.70 3450.05 3484.74 3528.91 3568.59 3615.59 3660.59 3701.29 3732.00 #> [19,] 4110.47 4154.47 4191.47 4235.64 4275.32 4322.32 4367.93 4408.63 4441.13 #> [20,] 4968.06 5013.46 5052.50 5096.67 5136.67 5183.68 5229.27 5270.53 5307.53 #> [21,] 5300.85 5348.25 5392.94 5437.11 5477.36 5527.47 5574.48 5618.01 5659.54 #> [22,] 5378.77 5433.60 5487.62 5534.63 5576.65 5630.90 5679.60 5723.87 5770.27 #> [23,] 4597.01 4647.27 4702.77 4746.94 4783.44 4831.94 4876.94 4918.94 4963.21 #> [24,] 3759.65 3806.23 3852.43 3893.69 3923.79 3968.06 4009.06 4042.75 4084.15 #>        [,138]  [,139]  [,140]  [,141]  [,142]  [,143]  [,144]  [,145]  [,146] #>  [1,] 3635.31 3680.42 3729.52 3775.41 3803.66 3837.78 3891.64 3941.54 3985.71 #>  [2,] 2871.49 2913.54 2959.67 3000.93 3024.93 3053.98 3107.11 3151.91 3189.40 #>  [3,] 2276.09 2307.59 2349.09 2383.71 2404.12 2431.25 2479.65 2523.82 2558.82 #>  [4,] 2193.22 2225.22 2261.08 2295.20 2310.33 2334.35 2382.07 2426.24 2459.23 #>  [5,] 2089.41 2121.41 2155.36 2188.96 2204.70 2224.75 2271.64 2315.81 2348.80 #>  [6,] 2266.41 2304.42 2341.59 2374.93 2394.96 2420.18 2467.07 2511.24 2544.24 #>  [7,] 2794.69 2840.58 2885.61 2924.64 2953.89 2985.89 3032.69 3076.71 3117.40 #>  [8,] 3768.03 3820.03 3865.92 3909.95 3944.57 3985.83 4032.63 4073.89 4120.47 #>  [9,] 4075.43 4128.95 4178.05 4223.52 4263.18 4307.35 4354.05 4395.31 4447.00 #> [10,] 4493.25 4547.31 4598.51 4644.51 4683.09 4729.44 4777.06 4821.23 4873.53 #> [11,] 4447.93 4501.06 4550.66 4594.66 4635.16 4682.83 4731.84 4776.95 4829.15 #> [12,] 4256.82 4304.02 4349.91 4390.42 4431.68 4479.09 4528.09 4574.64 4625.54 #> [13,] 4349.06 4395.06 4440.55 4477.21 4518.47 4566.45 4615.76 4660.87 4712.56 #> [14,] 4177.00 4221.17 4265.50 4299.62 4340.88 4387.23 4437.23 4482.03 4534.03 #> [15,] 3904.18 3945.18 3987.18 4017.13 4057.38 4101.55 4149.39 4193.56 4241.56 #> [16,] 3617.11 3654.55 3696.05 3725.22 3765.22 3809.52 3856.02 3897.28 3944.88 #> [17,] 3458.36 3496.28 3537.78 3566.92 3605.65 3650.67 3693.72 3728.91 3775.46 #> [18,] 3772.30 3813.30 3855.30 3887.73 3928.99 3975.49 4016.41 4050.66 4097.16 #> [19,] 4484.08 4526.13 4571.24 4605.24 4649.17 4696.06 4733.87 4768.97 4815.47 #> [20,] 5350.53 5394.03 5440.55 5478.55 5523.25 5571.02 5611.12 5652.13 5699.13 #> [21,] 5707.91 5752.08 5803.22 5843.13 5888.16 5940.16 5985.63 6029.80 6080.27 #> [22,] 5827.67 5878.30 5932.60 5973.86 6024.17 6080.40 6128.80 6177.83 6232.20 #> [23,] 5023.18 5072.89 5125.02 5164.17 5215.37 5271.35 5319.17 5371.59 5425.59 #> [24,] 4135.80 4183.80 4230.30 4264.41 4311.42 4364.28 4411.08 4457.62 4509.09 #>        [,147]  [,148]  [,149]  [,150]  [,151]  [,152]  [,153]  [,154]  [,155] #>  [1,] 4031.91 4083.07 4128.47 4183.17 4231.77 4268.27 4313.77 4364.57 4412.05 #>  [2,] 3234.00 3282.00 3326.23 3375.32 3423.80 3455.80 3500.01 3548.61 3593.56 #>  [3,] 2597.25 2642.25 2686.42 2733.00 2777.25 2807.05 2846.05 2892.60 2936.81 #>  [4,] 2495.83 2540.78 2584.95 2630.35 2674.56 2704.56 2743.56 2789.79 2834.00 #>  [5,] 2385.23 2430.18 2474.08 2518.33 2559.59 2589.59 2628.69 2674.09 2717.85 #>  [6,] 2582.67 2627.62 2671.79 2716.04 2757.30 2787.70 2831.91 2878.46 2922.67 #>  [7,] 3163.70 3211.66 3255.93 3301.33 3343.33 3373.46 3420.69 3473.69 3520.27 #>  [8,] 4170.77 4222.04 4271.11 4320.71 4364.91 4392.41 4438.99 4493.49 4542.09 #>  [9,] 4501.55 4556.10 4608.90 4663.90 4708.10 4740.10 4790.90 4846.86 4900.06 #> [10,] 4929.48 4984.22 5038.24 5094.20 5138.42 5172.32 5226.42 5283.16 5336.39 #> [11,] 4885.11 4939.85 4991.25 5045.99 5090.24 5128.74 5183.29 5241.29 5294.52 #> [12,] 4680.09 4734.09 4785.49 4840.23 4885.23 4929.43 4984.17 5040.51 5093.74 #> [13,] 4767.30 4821.85 4872.57 4928.53 4976.33 5020.54 5075.56 5132.24 5185.72 #> [14,] 4588.14 4640.83 4690.03 4746.16 4796.68 4840.92 4895.79 4951.75 5004.75 #> [15,] 4292.96 4343.89 4390.43 4443.12 4490.28 4534.49 4588.79 4641.79 4690.39 #> [16,] 3995.58 4042.16 4087.11 4138.15 4182.39 4222.39 4275.09 4325.39 4373.50 #> [17,] 3824.81 3869.81 3914.56 3964.09 4006.04 4041.38 4093.98 4142.98 4192.21 #> [18,] 4147.16 4192.02 4237.42 4285.35 4326.61 4361.61 4413.09 4462.03 4513.60 #> [19,] 4864.04 4908.29 4954.28 5000.86 5039.98 5074.98 5125.28 5173.75 5225.02 #> [20,] 5748.81 5793.76 5843.16 5890.27 5931.53 5974.53 6024.80 6073.77 6126.42 #> [21,] 6131.17 6179.34 6231.20 6280.29 6324.51 6368.76 6419.03 6468.10 6521.58 #> [22,] 6286.70 6338.10 6394.23 6445.16 6489.39 6544.13 6598.68 6651.68 6707.80 #> [23,] 5479.59 5530.61 5586.95 5637.25 5681.47 5738.33 5791.33 5842.33 5899.07 #> [24,] 4557.78 4604.88 4658.88 4706.38 4750.59 4803.59 4852.65 4898.65 4953.52 #>        [,156]  [,157]  [,158]  [,159]  [,160]  [,161]  [,162]  [,163]  [,164] #>  [1,] 4466.75 4516.23 4560.43 4609.91 4661.14 4708.14 4758.20 4813.07 4870.67 #>  [2,] 3646.86 3692.26 3732.51 3779.09 3827.39 3872.79 3919.37 3970.88 4021.88 #>  [3,] 2986.82 3031.03 3071.28 3115.52 3161.05 3203.91 3243.29 3288.40 3333.65 #>  [4,] 2883.48 2927.68 2971.85 3018.43 3062.68 3099.83 3139.93 3186.51 3231.76 #>  [5,] 2766.45 2807.85 2852.02 2898.60 2942.83 2979.83 3019.21 3064.19 3108.88 #>  [6,] 2971.27 3012.79 3056.98 3103.56 3147.81 3190.72 3232.25 3278.83 3324.08 #>  [7,] 3573.76 3618.71 3657.71 3703.57 3751.87 3799.67 3850.87 3906.10 3963.60 #>  [8,] 4595.19 4641.77 4680.93 4725.14 4773.14 4827.94 4882.81 4941.38 5001.63 #>  [9,] 4955.56 5006.79 5048.26 5092.47 5143.95 5200.25 5258.31 5320.27 5383.96 #> [10,] 5391.89 5443.46 5487.66 5531.87 5586.35 5644.05 5704.17 5766.37 5831.37 #> [11,] 5350.48 5400.28 5445.68 5489.93 5545.23 5605.36 5668.05 5730.79 5796.38 #> [12,] 5150.74 5194.98 5239.20 5285.06 5339.61 5400.49 5463.18 5526.28 5592.78 #> [13,] 5242.72 5286.92 5331.09 5375.51 5429.31 5492.70 5555.62 5619.78 5685.87 #> [14,] 5060.05 5097.55 5135.65 5179.86 5230.06 5294.06 5356.93 5420.93 5485.43 #> [15,] 4740.99 4775.99 4810.09 4853.34 4898.74 4958.74 5017.44 5080.13 5141.82 #> [16,] 4420.08 4454.58 4482.58 4517.58 4561.79 4620.32 4679.02 4741.22 4801.36 #> [17,] 4239.69 4275.19 4301.83 4335.83 4380.03 4437.58 4496.28 4558.48 4617.89 #> [18,] 4563.60 4601.73 4632.23 4666.53 4710.77 4769.30 4828.20 4890.94 4949.94 #> [19,] 5274.50 5316.45 5349.45 5384.45 5428.70 5484.18 5544.08 5606.28 5663.97 #> [20,] 6177.44 6221.68 6258.68 6302.68 6348.02 6403.03 6463.03 6524.59 6580.55 #> [21,] 6574.88 6619.88 6664.08 6710.66 6760.86 6816.06 6876.19 6938.15 6995.49 #> [22,] 6763.30 6814.53 6864.53 6920.53 6976.63 7032.59 7095.28 7158.30 7216.83 #> [23,] 5955.03 6006.26 6062.22 6123.12 6179.81 6234.68 6294.58 6356.88 6409.68 #> [24,] 5005.52 5052.10 5106.65 5162.73 5212.93 5260.93 5316.62 5375.15 5420.10 #>        [,165]  [,166]  [,167]  [,168]  [,169]  [,170]  [,171]  [,172]  [,173] #>  [1,] 4914.84 4945.38 4972.25 5011.75 5068.05 5125.85 5187.98 5249.88 5310.41 #>  [2,] 4066.05 4084.17 4108.67 4147.07 4193.65 4242.66 4302.16 4362.69 4418.38 #>  [3,] 3373.92 3388.83 3408.83 3443.83 3488.94 3535.52 3591.20 3643.30 3689.79 #>  [4,] 3273.02 3286.05 3298.41 3333.51 3378.46 3427.15 3482.28 3536.41 3582.90 #>  [5,] 3149.98 3162.37 3174.17 3208.37 3253.32 3299.90 3354.77 3404.77 3450.86 #>  [6,] 3363.58 3374.53 3397.56 3432.66 3477.79 3526.40 3582.70 3631.73 3677.73 #>  [7,] 4002.60 4009.60 4039.10 4079.10 4132.84 4189.14 4250.14 4296.72 4341.85 #>  [8,] 5040.63 5048.51 5087.01 5132.41 5192.01 5252.13 5314.63 5361.21 5406.16 #>  [9,] 5425.27 5437.31 5481.48 5536.18 5599.44 5661.57 5726.81 5779.27 5824.27 #> [10,] 5875.54 5888.62 5932.79 5991.39 6058.42 6122.48 6189.48 6246.14 6291.54 #> [11,] 5841.38 5854.86 5899.29 5959.41 6026.57 6091.31 6158.47 6219.00 6271.00 #> [12,] 5639.36 5653.64 5698.59 5758.62 5826.31 5891.41 5958.07 6017.78 6072.65 #> [13,] 5730.82 5747.92 5800.09 5861.22 5930.55 5995.79 6062.48 6122.08 6177.77 #> [14,] 5530.38 5556.48 5611.35 5672.48 5741.81 5806.81 5873.23 5932.83 5988.79 #> [15,] 5185.99 5211.89 5262.94 5322.47 5389.63 5451.63 5514.68 5566.78 5619.89 #> [16,] 4843.36 4856.54 4909.61 4968.71 5035.21 5097.27 5158.27 5206.87 5252.27 #> [17,] 4656.58 4668.48 4723.28 4782.48 4849.36 4911.26 4972.03 5018.61 5063.56 #> [18,] 4986.94 4999.12 5053.99 5113.44 5180.60 5243.15 5304.45 5351.03 5395.98 #> [19,] 5697.02 5714.40 5768.60 5824.67 5889.41 5951.31 6013.00 6062.00 6106.95 #> [20,] 6615.65 6640.87 6690.24 6745.11 6809.31 6871.21 6933.11 6989.41 7035.90 #> [21,] 7034.37 7066.18 7116.21 7172.17 7236.37 7299.62 7363.56 7425.66 7481.35 #> [22,] 7261.00 7302.47 7358.43 7416.68 7481.86 7547.05 7613.70 7678.69 7741.19 #> [23,] 6453.85 6498.02 6547.42 6603.38 6667.07 6732.31 6799.31 6865.81 6932.31 #> [24,] 5459.60 5498.60 5542.77 5591.80 5652.25 5714.75 5781.25 5845.19 5908.19 #>        [,174]  [,175]  [,176]  [,177]  [,178]  [,179]  [,180]  [,181]  [,182] #>  [1,] 5372.38 5437.32 5485.45 5545.05 5609.92 5670.92 5712.18 5762.40 5807.80 #>  [2,] 4474.68 4538.24 4583.24 4637.47 4699.60 4758.90 4795.24 4840.19 4882.63 #>  [3,] 3741.96 3801.96 3844.46 3891.04 3950.64 4005.81 4036.35 4079.85 4117.85 #>  [4,] 3633.01 3694.01 3736.01 3782.59 3842.19 3894.46 3923.15 3966.35 4003.03 #>  [5,] 3501.92 3561.92 3601.92 3648.03 3707.13 3754.00 3779.95 3823.45 3859.45 #>  [6,] 3732.60 3793.70 3834.20 3880.78 3940.78 3986.18 4011.86 4056.81 4096.81 #>  [7,] 4404.54 4469.27 4514.22 4569.09 4633.96 4678.91 4704.03 4759.03 4804.43 #>  [8,] 5471.10 5535.80 5581.91 5641.22 5706.92 5750.92 5776.80 5835.20 5883.13 #>  [9,] 5891.35 5957.39 6016.75 6080.12 6147.16 6192.11 6221.43 6281.63 6336.50 #> [10,] 6358.75 6426.55 6488.70 6554.01 6621.51 6666.46 6696.52 6759.97 6816.47 #> [11,] 6340.33 6408.83 6471.52 6538.68 6606.58 6651.98 6687.98 6752.52 6812.49 #> [12,] 6141.98 6210.18 6272.87 6340.03 6407.53 6452.53 6493.79 6558.29 6617.93 #> [13,] 6247.76 6316.26 6379.86 6447.02 6514.18 6558.87 6600.13 6664.13 6722.74 #> [14,] 6057.53 6125.66 6189.26 6255.76 6321.46 6365.59 6407.05 6470.25 6526.45 #> [15,] 5687.05 5753.05 5814.85 5878.41 5940.54 5977.54 6018.80 6076.60 6130.70 #> [16,] 5317.21 5383.01 5443.54 5505.69 5565.39 5596.15 5632.15 5687.02 5734.02 #> [17,] 5128.55 5193.65 5255.45 5317.60 5375.70 5404.12 5434.12 5481.06 5528.06 #> [18,] 5460.97 5525.96 5588.43 5650.58 5708.94 5738.22 5766.01 5813.12 5861.73 #> [19,] 6171.89 6235.83 6296.77 6359.46 6419.06 6452.95 6480.22 6526.80 6577.13 #> [20,] 7100.89 7165.13 7227.28 7290.65 7351.18 7387.27 7423.76 7472.37 7521.59 #> [21,] 7547.04 7611.98 7676.32 7741.26 7803.39 7845.41 7888.46 7943.33 7997.43 #> [22,] 7808.35 7873.45 7939.95 8006.96 8071.65 8118.52 8166.52 8224.52 8280.21 #> [23,] 6999.04 7064.04 7129.98 7196.92 7261.61 7315.32 7376.02 7433.82 7491.62 #> [24,] 5971.75 6030.61 6092.61 6156.21 6217.21 6263.57 6319.53 6366.11 6421.80 #>        [,183]  [,184]  [,185]  [,186]  [,187]  [,188]  [,189]  [,190]  [,191] #>  [1,] 5858.90 5904.30 5962.53 6013.78 6052.18 6094.40 6139.80 6173.90 6204.10 #>  [2,] 4928.49 4969.59 5025.69 5071.35 5106.67 5143.17 5185.07 5215.25 5242.87 #>  [3,] 4162.80 4198.30 4249.85 4295.87 4329.36 4362.76 4400.19 4429.19 4454.25 #>  [4,] 4047.98 4083.86 4133.86 4180.36 4213.86 4246.26 4285.06 4314.66 4340.15 #>  [5,] 3904.40 3939.40 3985.98 4031.38 4064.59 4096.69 4135.74 4164.74 4188.32 #>  [6,] 4143.39 4179.39 4226.56 4271.51 4304.72 4339.12 4382.80 4412.39 4437.82 #>  [7,] 4859.30 4901.09 4954.77 4996.89 5030.10 5071.50 5118.40 5148.60 5177.60 #>  [8,] 5937.43 5982.83 6036.09 6077.49 6109.59 6154.54 6205.41 6238.01 6270.94 #>  [9,] 6392.80 6444.09 6500.10 6545.05 6578.26 6628.17 6683.04 6726.26 6767.52 #> [10,] 6877.49 6932.36 6990.36 7039.33 7074.33 7129.20 7187.30 7231.47 7275.64 #> [11,] 6874.04 6931.28 6990.41 7043.41 7080.84 7136.80 7197.49 7242.44 7287.39 #> [12,] 6679.06 6737.16 6796.29 6850.49 6890.18 6945.98 7006.67 7051.47 7095.64 #> [13,] 6783.87 6843.00 6902.13 6956.10 6997.36 7053.32 7114.01 7158.96 7203.91 #> [14,] 6583.96 6643.09 6702.22 6753.64 6796.37 6851.37 6910.37 6954.93 7000.33 #> [15,] 6185.80 6241.80 6299.98 6345.38 6387.13 6439.23 6494.10 6538.27 6582.44 #> [16,] 5784.02 5840.12 5897.92 5938.02 5977.11 6023.69 6075.88 6119.30 6163.47 #> [17,] 5576.16 5634.21 5690.69 5727.19 5763.19 5808.59 5858.67 5902.84 5947.01 #> [18,] 5908.35 5967.48 6023.78 6058.78 6093.40 6138.80 6188.83 6233.00 6277.60 #> [19,] 6624.77 6684.97 6742.87 6779.37 6812.58 6857.98 6905.98 6949.58 6993.75 #> [20,] 7568.59 7628.79 7687.81 7724.25 7759.25 7804.30 7849.70 7893.30 7937.47 #> [21,] 8045.53 8105.73 8164.90 8205.00 8242.93 8289.63 8335.03 8379.20 8423.37 #> [22,] 8332.06 8392.92 8453.61 8500.19 8544.36 8596.55 8643.07 8688.02 8734.60 #> [23,] 7545.62 7606.48 7667.28 7719.70 7773.67 7828.43 7873.91 7918.86 7966.05 #> [24,] 6468.38 6527.51 6585.81 6632.39 6681.49 6728.01 6765.94 6807.20 6851.37 #>        [,192]  [,193]  [,194]  [,195]  [,196]  [,197]  [,198]  [,199]  [,200] #>  [1,] 6240.10 6290.79 6343.98 6398.59 6453.46 6508.33 6562.33 6621.45 6666.87 #>  [2,] 5270.87 5312.97 5357.24 5399.34 5445.86 5492.38 5537.78 5593.74 5639.14 #>  [3,] 4480.13 4515.13 4556.39 4595.79 4639.64 4684.21 4726.76 4775.99 4820.26 #>  [4,] 4365.75 4401.68 4442.94 4482.48 4527.06 4571.64 4614.29 4661.98 4706.25 #>  [5,] 4212.88 4245.98 4285.86 4325.06 4369.64 4414.14 4455.91 4502.45 4546.14 #>  [6,] 4463.67 4496.67 4537.93 4577.77 4623.79 4668.54 4710.69 4758.38 4798.13 #>  [7,] 5208.14 5241.24 5282.50 5330.50 5385.37 5433.35 5477.93 5533.89 5574.53 #>  [8,] 6310.10 6340.45 6378.85 6431.93 6490.93 6543.29 6588.69 6647.71 6689.11 #>  [9,] 6811.69 6848.14 6889.40 6948.41 7007.53 7063.53 7114.12 7174.55 7218.82 #> [10,] 7321.04 7369.07 7412.78 7473.12 7533.68 7592.80 7645.26 7705.95 7750.53 #> [11,] 7333.97 7385.11 7429.38 7490.05 7551.05 7610.30 7665.17 7725.77 7771.17 #> [12,] 7142.22 7194.40 7240.40 7301.09 7361.65 7421.55 7476.06 7536.66 7581.24 #> [13,] 7252.47 7306.81 7356.50 7418.01 7478.81 7538.81 7589.81 7649.37 7693.64 #> [14,] 7050.74 7105.87 7158.06 7219.66 7280.46 7340.87 7387.90 7442.77 7487.04 #> [15,] 6632.62 6687.75 6737.44 6798.11 6854.64 6910.64 6955.21 7001.08 7044.70 #> [16,] 6210.68 6256.70 6300.97 6359.98 6415.98 6471.54 6513.26 6557.84 6597.46 #> [17,] 5996.19 6036.88 6076.88 6136.68 6195.38 6254.07 6296.19 6339.29 6377.94 #> [18,] 6327.78 6367.28 6405.68 6466.11 6526.11 6585.23 6629.81 6674.39 6712.59 #> [19,] 7041.25 7081.75 7120.40 7180.20 7240.20 7299.32 7345.34 7391.25 7429.90 #> [20,] 7984.39 8028.39 8069.08 8128.98 8188.10 8247.12 8295.12 8341.66 8381.28 #> [21,] 8469.95 8520.64 8564.91 8625.15 8685.58 8744.70 8799.57 8846.26 8890.53 #> [22,] 8783.74 8839.70 8892.96 8953.63 9014.73 9073.85 9133.54 9182.57 9227.15 #> [23,] 8015.61 8074.30 8134.10 8194.53 8255.09 8313.99 8374.42 8424.42 8476.62 #> [24,] 6896.32 6952.28 7008.24 7064.53 7120.53 7176.26 7232.22 7278.76 7324.16 #>        [,201]  [,202]  [,203]  [,204]  [,205]  [,206]  [,207]  [,208]  [,209] #>  [1,] 6708.37 6766.28 6812.82 6868.82 6924.78 6970.18 7015.58 7063.27 7104.74 #>  [2,] 5678.76 5731.86 5774.56 5821.10 5866.50 5906.50 5948.97 5993.24 6032.84 #>  [3,] 4855.46 4900.04 4939.65 4982.87 5027.37 5065.37 5105.97 5147.37 5186.07 #>  [4,] 4741.85 4785.90 4825.92 4869.14 4913.64 4952.04 4992.54 5033.80 5072.60 #>  [5,] 4580.24 4620.12 4659.73 4701.90 4746.40 4783.53 4823.36 4863.86 4902.56 #>  [6,] 4832.23 4873.49 4913.23 4956.16 5000.66 5039.16 5079.66 5120.16 5159.76 #>  [7,] 5608.63 5653.21 5697.01 5743.85 5790.39 5832.86 5873.55 5913.55 5956.77 #>  [8,] 6722.25 6768.79 6815.33 6870.22 6924.52 6970.15 7010.65 7049.05 7097.07 #>  [9,] 7251.46 7308.58 7363.45 7422.86 7477.73 7529.82 7574.40 7613.90 7669.90 #> [10,] 7783.13 7841.47 7898.33 7960.34 8020.02 8074.02 8120.07 8159.57 8216.07 #> [11,] 7804.27 7862.61 7921.64 7984.82 8045.39 8100.31 8146.01 8186.30 8244.40 #> [12,] 7614.74 7672.51 7732.03 7795.33 7856.02 7911.04 7960.04 8001.54 8058.88 #> [13,] 7727.30 7785.41 7846.29 7910.31 7972.21 8028.39 8078.66 8122.93 8181.03 #> [14,] 7522.04 7580.05 7640.94 7704.54 7766.44 7822.40 7873.50 7917.77 7975.77 #> [15,] 7078.52 7135.79 7195.79 7258.89 7319.29 7374.16 7423.16 7467.43 7517.93 #> [16,] 6629.97 6687.24 6746.33 6807.72 6867.42 6919.87 6965.91 7008.38 7054.29 #> [17,] 6409.54 6467.54 6526.98 6588.17 6647.17 6700.86 6746.26 6787.39 6832.39 #> [18,] 6743.09 6801.10 6861.51 6923.11 6979.81 7033.09 7077.95 7117.95 7162.53 #> [19,] 7462.30 7520.40 7580.81 7641.70 7696.57 7748.77 7794.17 7835.43 7877.23 #> [20,] 8414.78 8472.69 8530.80 8591.21 8643.71 8695.21 8740.61 8783.38 8822.98 #> [21,] 8928.93 8986.47 9043.46 9103.06 9157.93 9209.43 9255.97 9300.24 9342.14 #> [22,] 9271.73 9329.83 9390.10 9450.67 9508.58 9562.13 9612.99 9667.09 9710.90 #> [23,] 8532.62 8590.72 8650.99 8710.99 8768.90 8821.37 8873.39 8931.36 8974.32 #> [24,] 7373.90 7428.89 7486.01 7543.92 7594.13 7642.79 7689.33 7741.21 7779.91 #>        [,210]  [,211]  [,212]  [,213]   [,214]   [,215]   [,216]   [,217] #>  [1,] 7140.24 7179.68 7235.64 7291.60  7337.00  7392.97  7445.76  7490.71 #>  [2,] 6068.84 6106.34 6151.74 6199.25  6243.56  6292.69  6337.38  6381.96 #>  [3,] 5220.39 5255.89 5297.79 5342.93  5382.59  5427.94  5472.47  5516.74 #>  [4,] 5107.95 5144.75 5189.33 5235.79  5279.03  5324.43  5368.96  5413.49 #>  [5,] 4935.76 4971.86 5016.44 5061.02  5100.68  5145.26  5189.79  5234.06 #>  [6,] 5195.26 5232.16 5276.74 5322.14  5361.23  5405.79  5450.37  5494.95 #>  [7,] 5994.03 6033.36 6082.90 6137.64  6176.74  6221.30  6271.30  6317.84 #>  [8,] 7135.77 7175.77 7231.73 7286.60  7325.39  7369.70  7424.57  7477.57 #>  [9,] 7708.92 7754.32 7811.44 7867.64  7910.04  7954.35  8012.00  8065.70 #> [10,] 8257.87 8307.70 8366.02 8424.12  8468.68  8513.01  8571.01  8627.00 #> [11,] 8287.09 8341.37 8399.61 8460.08  8505.22  8549.55  8609.23  8667.23 #> [12,] 8102.88 8157.10 8215.80 8276.37  8321.77  8366.35  8427.71  8486.51 #> [13,] 8226.54 8282.50 8341.70 8402.05  8451.18  8496.53  8557.89  8618.49 #> [14,] 8030.80 8087.80 8146.62 8204.62  8254.82  8300.22  8361.58  8422.18 #> [15,] 7567.93 7623.36 7679.89 7735.86  7781.26  7826.61  7884.61  7942.58 #> [16,] 7101.89 7156.76 7213.29 7262.09  7306.40  7350.73  7405.60  7463.46 #> [17,] 6880.27 6936.23 6992.76 7038.16  7082.13  7126.40  7179.37  7236.58 #> [18,] 7217.11 7273.38 7329.91 7374.49  7418.36  7462.23  7513.33  7570.33 #> [19,] 7931.45 7987.72 8044.25 8088.54  8132.81  8177.08  8228.18  8283.05 #> [20,] 8876.09 8932.36 8989.08 9033.35  9077.73  9122.00  9171.83  9226.70 #> [21,] 9396.57 9454.54 9512.25 9558.08  9603.43  9647.76  9699.26  9754.13 #> [22,] 9768.83 9829.33 9888.33 9943.20 10001.60 10053.10 10109.07 10166.07 #> [23,] 9031.32 9090.91 9149.34 9204.21  9265.46  9321.45  9377.45  9433.48 #> [24,] 7826.51 7884.18 7940.71 7987.72  8046.51  8095.15  8144.48  8192.85 #>         [,218]   [,219]   [,220]   [,221]   [,222]   [,223]   [,224]   [,225] #>  [1,]  7536.11  7581.06  7628.36  7683.23  7727.81  7774.59  7819.54  7864.54 #>  [2,]  6426.54  6471.07  6515.76  6565.76  6610.03  6654.61  6699.19  6743.46 #>  [3,]  5561.01  5605.01  5649.28  5694.68  5737.58  5780.58  5824.84  5863.89 #>  [4,]  5458.02  5502.29  5546.63  5593.17  5635.97  5680.03  5724.37  5762.77 #>  [5,]  5278.33  5322.59  5366.72  5412.12  5452.22  5495.72  5538.62  5570.75 #>  [6,]  5539.48  5584.01  5628.35  5673.75  5713.85  5758.38  5802.72  5836.22 #>  [7,]  6362.79  6407.74  6452.57  6500.08  6540.18  6585.01  6629.84  6668.89 #>  [8,]  7527.34  7577.34  7623.88  7671.41  7710.58  7755.98  7801.38  7843.40 #>  [9,]  8120.57  8175.44  8225.44  8274.17  8314.72  8366.39  8421.39  8465.97 #> [10,]  8683.02  8737.89  8794.51  8846.71  8887.26  8943.23  8999.00  9044.40 #> [11,]  8725.20  8782.38  8840.35  8891.65  8934.35  8990.30  9045.32  9090.72 #> [12,]  8544.51  8602.48  8660.47  8713.27  8757.54  8814.51  8869.72  8915.22 #> [13,]  8678.09  8737.11  8795.08  8844.81  8889.15  8947.18  9003.14  9048.54 #> [14,]  8481.58  8541.26  8597.94  8645.61  8690.19  8750.06  8805.27  8854.47 #> [15,]  7999.58  8057.18  8109.79  8154.74  8199.32  8256.29  8305.29  8351.29 #> [16,]  7518.21  7574.80  7623.44  7668.27  7712.61  7763.61  7808.56  7853.96 #> [17,]  7290.73  7347.13  7394.13  7438.66  7482.93  7532.70  7577.39  7622.34 #> [18,]  7622.44  7679.62  7726.92  7771.26  7814.62  7869.74  7914.43  7959.83 #> [19,]  8333.05  8389.85  8437.57  8482.10  8526.37  8581.02  8625.71  8671.11 #> [20,]  9276.34  9332.60  9380.10  9424.79  9469.13  9517.13  9561.96  9607.36 #> [21,]  9805.13  9862.31  9912.91  9958.31 10002.84 10051.84 10098.38 10145.38 #> [22,] 10222.44 10282.04 10341.03 10395.90 10443.86 10499.83 10554.95 10610.71 #> [23,]  9489.45  9549.13  9609.98  9665.98  9719.78  9775.80  9830.92  9886.68 #> [24,]  8239.80  8295.42  8352.47  8403.47  8448.42  8495.95  8542.49  8590.49 #>         [,226]   [,227]   [,228]   [,229]   [,230]   [,231]   [,232]   [,233] #>  [1,]  7909.23  7954.06  7998.33  8039.02  8085.80  8135.42  8189.22  8242.02 #>  [2,]  6786.55  6830.89  6870.89  6909.29  6954.12  6998.95  7045.55  7090.55 #>  [3,]  5904.44  5948.78  5985.53  6022.53  6066.87  6111.31  6156.14  6200.88 #>  [4,]  5801.87  5846.70  5883.75  5922.75  5967.09  6011.47  6056.30  6101.13 #>  [5,]  5608.05  5652.63  5687.63  5726.89  5770.29  5814.56  5859.14  5903.78 #>  [6,]  5875.32  5919.85  5951.85  5991.34  6035.68  6080.02  6124.85  6169.68 #>  [7,]  6713.16  6757.74  6792.74  6832.94  6878.34  6923.29  6970.99  7019.39 #>  [8,]  7887.98  7932.32  7967.82  8007.81  8057.81  8106.41  8161.53  8217.29 #>  [9,]  8511.98  8556.32  8594.87  8634.87  8689.99  8743.96  8800.46  8857.51 #> [10,]  9097.52  9142.10  9182.30  9226.64  9283.32  9338.82  9398.82  9459.82 #> [11,]  9145.84  9190.67  9231.07  9275.45  9332.05  9388.15  9449.15  9510.25 #> [12,]  8968.25  9013.20  9054.70  9099.53  9156.13  9213.23  9274.40  9336.20 #> [13,]  9101.34  9146.29  9190.83  9235.66  9292.16  9352.65  9415.65  9477.45 #> [14,]  8910.43  8955.83  9000.66  9045.49  9104.11  9165.11  9228.08  9290.66 #> [15,]  8404.08  8449.03  8493.86  8538.69  8594.79  8653.25  8712.65  8772.25 #> [16,]  7908.98  7953.93  7998.31  8040.27  8095.39  8151.35  8207.45  8264.05 #> [17,]  7677.00  7721.69  7765.96  7805.96  7861.06  7916.18  7971.30  8027.26 #> [18,]  8014.95  8059.48  8103.75  8142.75  8197.87  8252.74  8307.61  8362.73 #> [19,]  8726.13  8770.47  8814.74  8854.74  8909.86  8964.27  9016.48  9071.35 #> [20,]  9660.64  9705.17  9749.51  9793.85  9848.65  9901.25  9952.21 10006.87 #> [21,] 10200.50 10245.45 10290.40 10335.23 10390.35 10445.11 10499.98 10555.94 #> [22,] 10666.67 10716.13 10763.12 10816.92 10874.70 10931.64 10989.98 11049.92 #> [23,]  9941.80  9995.20 10046.40 10104.18 10160.28 10215.98 10272.58 10330.18 #> [24,]  8637.03  8682.03  8728.57  8783.69  8837.34  8886.16  8940.76  8995.63 #>         [,234]   [,235]   [,236]   [,237]   [,238]   [,239]   [,240]   [,241] #>  [1,]  8291.68  8336.63  8382.73  8438.85  8483.43  8533.67  8591.43  8647.55 #>  [2,]  7135.50  7179.94  7224.89  7274.55  7318.82  7363.77  7414.77  7462.97 #>  [3,]  6245.26  6286.69  6331.23  6376.18  6416.18  6460.52  6505.92  6550.92 #>  [4,]  6145.57  6188.57  6233.21  6278.16  6319.36  6363.46  6408.86  6453.86 #>  [5,]  5948.12  5991.22  6035.76  6080.59  6116.94  6158.74  6203.69  6248.64 #>  [6,]  6214.26  6258.39  6302.83  6347.66  6388.06  6432.40  6478.00  6523.30 #>  [7,]  7064.34  7108.88  7153.52  7203.36  7247.80  7293.20  7348.07  7401.27 #>  [8,]  8270.07  8314.90  8359.54  8417.30  8462.25  8514.25  8572.94  8630.94 #>  [9,]  8913.01  8958.41  9003.24  9063.54  9112.06  9169.40  9230.60  9291.70 #> [10,]  9517.42  9567.99  9612.94  9675.45  9730.32  9789.32  9851.72  9915.32 #> [11,]  9567.85  9617.95  9662.78  9724.98  9779.14  9838.34  9900.85  9964.89 #> [12,]  9393.80  9448.67  9493.62  9556.41  9611.78  9670.81  9733.32  9797.40 #> [13,]  9534.75  9589.62  9634.57  9697.08  9751.95  9811.71  9874.81  9939.84 #> [14,]  9347.86  9401.86  9446.81  9508.61  9562.21  9621.97  9685.02  9750.02 #> [15,]  8828.05  8880.49  8925.44  8985.44  9036.40  9094.16  9155.36  9219.36 #> [16,]  8318.67  8366.17  8410.71  8465.58  8512.12  8569.13  8628.13  8690.14 #> [17,]  8077.36  8122.76  8167.10  8217.91  8263.51  8319.51  8376.43  8437.61 #> [18,]  8411.77  8456.72  8500.99  8551.56  8598.10  8654.22  8711.98  8772.56 #> [19,]  9119.05  9164.00  9208.44  9258.71  9305.67  9362.22  9421.02  9479.02 #> [20,] 10053.94 10099.34 10143.98 10193.98 10241.23 10298.96 10357.96 10415.72 #> [21,] 10607.84 10658.41 10707.49 10762.36 10817.23 10876.99 10936.99 10994.29 #> [22,] 11106.52 11164.02 11225.02 11286.82 11348.82 11411.92 11474.43 11535.96 #> [23,] 10385.05 10440.81 10502.21 10560.31 10619.11 10680.11 10740.11 10797.87 #> [24,]  9042.23  9092.80  9149.93  9199.50  9252.30  9310.40  9365.36  9420.23 #>         [,242]   [,243]   [,244]   [,245]   [,246]   [,247]   [,248]   [,249] #>  [1,]  8697.55  8746.38  8791.78  8847.74  8905.22  8969.30  9029.30  9093.38 #>  [2,]  7508.37  7552.49  7590.49  7638.59  7692.79  7752.89  7809.45  7869.55 #>  [3,]  6594.32  6637.26  6672.36  6718.90  6767.10  6824.69  6875.88  6932.93 #>  [4,]  6497.26  6540.38  6577.08  6624.68  6673.78  6731.37  6784.22  6840.32 #>  [5,]  6291.04  6333.99  6369.49  6416.59  6464.52  6521.69  6574.54  6629.58 #>  [6,]  6563.40  6605.67  6643.67  6691.67  6741.17  6799.67  6855.17  6910.27 #>  [7,]  7441.84  7484.74  7529.15  7586.03  7643.65  7707.65  7768.65  7824.61 #>  [8,]  8674.03  8715.43  8766.53  8825.63  8888.13  8956.35  9021.05  9077.15 #>  [9,]  9336.05  9378.85  9434.87  9494.87  9558.62  9627.85  9693.35  9750.52 #> [10,]  9961.86 10005.15 10065.15 10128.65 10193.33 10264.89 10333.99 10393.99 #> [11,] 10012.92 10057.04 10118.73 10182.73 10247.76 10319.77 10388.22 10449.22 #> [12,]  9848.48  9893.88  9957.32 10021.32 10086.35 10158.53 10227.51 10287.52 #> [13,]  9994.71 10041.56 10105.64 10169.94 10235.84 10308.14 10377.37 10437.47 #> [14,]  9804.97  9852.06  9916.17  9980.67 10047.17 10119.35 10188.58 10248.68 #> [15,]  9274.23  9320.77  9382.87  9444.49  9508.57  9579.37  9645.55  9701.51 #> [16,]  8742.16  8787.56  8847.63  8907.31  8968.49  9037.49  9101.68  9153.49 #> [17,]  8487.15  8531.23  8592.23  8652.23  8713.23  8782.46  8846.54  8897.54 #> [18,]  8820.78  8864.86  8926.96  8987.44  9049.47  9119.47  9183.64  9234.64 #> [19,]  9527.84  9573.24  9635.27  9696.27  9758.03  9827.72  9891.75  9946.75 #> [20,] 10466.72 10515.55 10577.82 10639.99 10701.73 10771.73 10835.81 10895.31 #> [21,] 11046.39 11101.26 11165.34 11229.42 11293.66 11364.76 11431.86 11495.94 #> [22,] 11593.72 11655.82 11721.47 11788.57 11855.72 11928.82 11998.12 12067.61 #> [23,] 10852.82 10914.32 10974.32 11036.35 11099.75 11168.98 11233.66 11298.69 #> [24,]  9471.32  9527.44  9583.94  9642.94  9702.44  9767.63  9829.66  9891.70 #>         [,250]   [,251]   [,252]   [,253]   [,254]   [,255]   [,256]   [,257] #>  [1,]  9153.38  9213.38  9277.98  9342.09  9399.08  9449.65  9507.42  9570.52 #>  [2,]  7924.85  7976.61  8036.74  8096.84  8143.38  8189.88  8245.38  8303.48 #>  [3,]  6981.83  7029.93  7087.45  7142.32  7186.90  7231.90  7281.49  7335.63 #>  [4,]  6890.57  6937.11  6993.11  7047.43  7092.30  7137.10  7186.79  7239.79 #>  [5,]  6678.68  6725.22  6780.09  6831.69  6875.74  6920.32  6969.91  7020.54 #>  [6,]  6959.27  7008.24  7065.29  7118.40  7162.40  7207.40  7256.90  7307.47 #>  [7,]  7873.61  7932.73  7995.03  8057.63  8104.17  8153.17  8205.19  8259.33 #>  [8,]  9125.65  9189.66  9256.18  9323.40  9380.50  9442.10  9497.70  9551.84 #>  [9,]  9797.27  9861.35  9928.76  9994.34 10051.44 10114.33 10170.60 10221.10 #> [10,] 10442.99 10508.09 10576.46 10642.98 10702.63 10767.13 10827.13 10882.00 #> [11,] 10503.47 10569.99 10639.09 10705.61 10766.21 10830.70 10893.00 10947.87 #> [12,] 10342.82 10409.34 10478.44 10544.55 10606.55 10671.53 10734.63 10790.13 #> [13,] 10493.43 10560.79 10629.89 10696.00 10759.02 10824.05 10885.65 10940.52 #> [14,] 10304.64 10372.64 10441.74 10507.39 10569.99 10635.02 10697.12 10751.99 #> [15,]  9752.51  9818.61  9886.44  9949.54 10010.14 10074.25 10132.24 10182.24 #> [16,]  9201.99  9266.99  9334.09  9392.29  9449.89  9513.99  9568.86  9615.36 #> [17,]  8942.94  9007.94  9075.38  9134.58  9193.08  9257.19  9307.74  9352.14 #> [18,]  9280.04  9347.14  9415.24  9476.34  9536.61  9601.59  9652.19  9696.99 #> [19,]  9995.15 10062.65 10130.75 10191.75 10251.41 10316.39 10371.26 10418.28 #> [20,] 10944.38 11011.53 11078.98 11140.71 11200.71 11265.74 11321.57 11372.20 #> [21,] 11555.06 11624.08 11693.18 11757.68 11822.37 11888.89 11952.49 12015.59 #> [22,] 12135.71 12206.51 12276.81 12343.46 12410.63 12479.93 12548.13 12617.13 #> [23,] 11365.21 11433.31 11501.41 11565.49 11629.59 11694.62 11758.65 11824.73 #> [24,]  9951.80 10016.80 10081.48 10138.53 10197.03 10260.87 10319.40 10381.58 #>         [,258]   [,259]   [,260]   [,261]   [,262]   [,263]   [,264]   [,265] #>  [1,]  9625.42  9688.02  9732.33  9777.73  9823.23  9879.10  9943.53  9987.73 #>  [2,]  8351.68  8409.12  8453.39  8495.89  8538.69  8586.16  8646.47  8686.97 #>  [3,]  7380.53  7430.03  7473.03  7512.58  7554.68  7599.87  7651.87  7689.87 #>  [4,]  7284.29  7331.56  7373.96  7413.50  7455.90  7501.09  7554.52  7592.92 #>  [5,]  7064.04  7109.44  7151.09  7189.49  7231.39  7276.47  7324.40  7359.68 #>  [6,]  7352.37  7397.24  7439.24  7478.34  7520.74  7565.82  7613.75  7652.25 #>  [7,]  8310.53  8357.07  8401.36  8445.36  8490.97  8536.66  8584.59  8629.88 #>  [8,]  9614.32  9669.32  9714.72  9767.72  9827.41  9874.98  9924.69  9988.89 #>  [9,] 10286.02 10342.86 10391.29 10450.82 10514.46 10569.33 10618.04 10684.04 #> [10,] 10948.59 11010.62 11065.49 11129.52 11195.13 11256.35 11309.75 11378.66 #> [11,] 11014.46 11078.26 11133.36 11197.76 11264.64 11327.89 11383.39 11452.69 #> [12,] 10856.23 10918.23 10975.33 11039.43 11105.72 11169.75 11231.85 11301.45 #> [13,] 11007.23 11067.23 11124.92 11188.95 11255.55 11319.49 11382.59 11452.50 #> [14,] 10818.15 10876.13 10933.23 10995.33 11060.94 11124.97 11188.77 11258.68 #> [15,] 10247.24 10296.24 10351.11 10407.07 10470.17 10531.15 10594.03 10663.08 #> [16,]  9679.56  9724.96  9775.59  9830.46  9890.66  9946.62 10001.93 10069.93 #> [17,]  9417.14  9462.04  9514.54  9569.41  9629.49  9684.37  9736.31  9804.16 #> [18,]  9763.58  9809.30  9866.70  9924.43  9988.46 10045.06 10095.42 10163.64 #> [19,] 10485.88 10532.47 10592.00 10650.10 10714.66 10775.59 10830.72 10897.72 #> [20,] 11441.23 11488.74 11546.98 11606.71 11672.06 11736.09 11791.96 11858.06 #> [21,] 12086.09 12140.09 12205.76 12272.37 12341.47 12407.49 12471.84 12540.75 #> [22,] 12690.33 12748.31 12816.31 12885.36 12956.46 13025.41 13090.51 13160.39 #> [23,] 11893.76 11940.96 12002.99 12067.02 12134.02 12199.82 12263.07 12327.96 #> [24,] 10446.50 10490.00 10542.10 10598.06 10662.09 10726.65 10786.66 10849.66 #>         [,266]   [,267]   [,268]   [,269]   [,270]   [,271]   [,272]   [,273] #>  [1,] 10046.97 10102.25 10148.48 10196.77 10251.64 10309.01 10373.90 10442.29 #>  [2,]  8734.37  8781.37  8821.87  8868.37  8915.97  8962.22  9017.09  9079.93 #>  [3,]  7734.87  7780.44  7818.84  7864.04  7909.44  7954.54  8003.64  8058.51 #>  [4,]  7637.42  7683.27  7722.77  7768.17  7813.57  7858.97  7906.32  7961.19 #>  [5,]  7403.68  7448.18  7487.18  7532.31  7577.31  7622.41  7669.29  7719.86 #>  [6,]  7696.65  7741.15  7780.65  7826.15  7870.26  7915.66  7962.71  8016.71 #>  [7,]  8679.88  8727.60  8773.28  8823.46  8868.86  8914.26  8977.10  9041.99 #>  [8,] 10053.89 10116.73 10172.73 10239.33 10285.33 10330.83 10399.88 10469.79 #>  [9,] 10751.97 10817.07 10879.17 10947.07 10995.80 11041.75 11112.10 11184.11 #> [10,] 11447.67 11515.78 11580.67 11648.69 11703.56 11752.66 11825.76 11898.87 #> [11,] 11521.74 11590.79 11655.96 11723.88 11784.68 11839.55 11912.65 11985.75 #> [12,] 11370.50 11439.41 11506.41 11574.34 11636.44 11692.94 11766.17 11838.57 #> [13,] 11521.70 11590.61 11658.72 11726.65 11788.19 11844.69 11917.79 11990.90 #> [14,] 11327.78 11396.02 11465.03 11532.63 11594.17 11655.71 11728.71 11803.25 #> [15,] 10731.19 10796.70 10864.70 10929.72 10985.68 11042.18 11112.30 11183.20 #> [16,] 10137.95 10202.30 10269.30 10332.93 10382.85 10432.95 10502.86 10572.80 #> [17,]  9872.40  9936.75 10004.65 10068.81 10116.41 10163.21 10232.72 10302.63 #> [18,] 10232.69 10297.79 10365.90 10430.64 10481.01 10527.49 10597.49 10667.60 #> [19,] 10966.77 11031.87 11099.80 11164.75 11217.75 11269.75 11339.69 11409.63 #> [20,] 11927.36 11992.36 12060.36 12126.93 12183.43 12246.27 12316.21 12386.15 #> [21,] 12612.75 12680.68 12749.60 12817.57 12882.87 12951.92 13026.92 13101.03 #> [22,] 13234.39 13302.32 13371.33 13439.44 13507.64 13579.89 13656.85 13728.96 #> [23,] 12396.87 12461.17 12528.18 12592.53 12656.87 12726.99 12796.99 12864.24 #> [24,] 10914.55 10964.68 11024.35 11079.33 11138.86 11207.25 11275.02 11329.65 #>         [,274]   [,275]   [,276]   [,277]   [,278]   [,279]   [,280]   [,281] #>  [1,] 10490.19 10536.19 10600.35 10668.28 10712.55 10756.07 10786.07 10825.06 #>  [2,]  9125.33  9167.99  9222.86  9287.75  9327.96  9365.23  9390.23  9425.23 #>  [3,]  8101.56  8141.60  8193.70  8252.50  8278.61  8307.07  8317.10  8345.85 #>  [4,]  8003.99  8044.49  8099.05  8153.92  8186.92  8213.87  8228.95  8249.30 #>  [5,]  7762.26  7802.75  7857.62  7909.72  7939.74  7965.53  7978.29  7994.85 #>  [6,]  8061.20  8103.19  8162.44  8214.04  8244.07  8272.53  8295.47  8320.73 #>  [7,]  9090.10  9138.10  9205.10  9259.97  9290.01  9333.25  9372.24  9409.64 #>  [8,] 10536.20 10600.55 10673.76 10737.36 10777.49 10830.27 10887.06 10939.02 #>  [9,] 11254.02 11323.02 11399.62 11463.97 11504.18 11567.58 11627.76 11687.29 #> [10,] 11969.77 12039.71 12119.65 12188.61 12231.41 12299.32 12361.42 12421.95 #> [11,] 12056.15 12126.27 12204.12 12273.17 12317.44 12385.37 12447.37 12509.37 #> [12,] 11908.69 11978.79 12054.98 12122.91 12168.32 12232.67 12293.73 12354.02 #> [13,] 12061.01 12131.21 12206.13 12274.06 12319.71 12384.05 12445.17 12505.17 #> [14,] 11873.35 11944.12 12018.42 12086.42 12135.24 12197.84 12258.84 12316.21 #> [15,] 11252.71 11322.62 11396.62 11461.72 11511.02 11570.02 11620.66 11669.10 #> [16,] 10640.73 10709.78 10780.79 10843.63 10891.33 10945.94 10995.94 11041.52 #> [17,] 10371.68 10441.68 10514.71 10575.71 10623.11 10677.11 10729.99 10777.83 #> [18,] 10737.51 10808.21 10881.94 10941.94 10990.34 11049.87 11109.40 11162.90 #> [19,] 11479.14 11549.74 11622.14 11681.67 11731.25 11792.53 11854.63 11912.63 #> [20,] 12456.06 12526.56 12601.16 12665.50 12729.84 12797.89 12862.90 12924.24 #> [21,] 13172.01 13246.11 13325.14 13394.15 13465.15 13535.27 13605.39 13675.30 #> [22,] 13799.07 13873.07 13949.26 14017.40 14092.40 14162.03 14231.66 14299.19 #> [23,] 12928.58 12998.52 13072.52 13135.67 13209.39 13270.04 13332.04 13391.91 #> [24,] 11377.65 11443.15 11513.09 11564.09 11633.14 11682.29 11730.98 11774.86 #>         [,282]   [,283]   [,284]   [,285]   [,286]   [,287]   [,288]   [,289] #>  [1,] 10857.59 10924.79 10994.70 11058.97 11100.11 11140.11 11170.11 11199.98 #>  [2,]  9454.73  9519.33  9588.03  9629.29  9656.71  9695.42  9722.70  9743.71 #>  [3,]  8370.85  8433.53  8493.06  8528.19  8552.19  8590.00  8609.61  8620.61 #>  [4,]  8269.30  8331.10  8381.07  8420.27  8446.78  8484.89  8504.14  8515.14 #>  [5,]  8009.01  8070.91  8120.86  8150.86  8175.85  8213.66  8228.79  8238.79 #>  [6,]  8345.77  8407.95  8457.91  8486.51  8510.51  8549.81  8567.85  8583.86 #>  [7,]  9445.44  9512.44  9566.96  9593.68  9632.26  9681.65  9713.14  9745.25 #>  [8,] 10990.76 11061.56 11124.15 11151.40 11204.40 11269.40 11313.67 11366.65 #>  [9,] 11748.13 11822.95 11887.95 11916.00 11976.98 12045.58 12099.73 12154.93 #> [10,] 12486.09 12564.65 12634.56 12667.18 12732.12 12802.03 12857.85 12915.85 #> [11,] 12573.72 12653.72 12725.72 12762.28 12827.40 12897.42 12954.37 13014.47 #> [12,] 12418.17 12498.17 12570.36 12605.03 12669.38 12739.38 12795.54 12853.19 #> [13,] 12569.51 12649.61 12721.71 12760.01 12824.01 12893.92 12948.92 13005.02 #> [14,] 12379.71 12458.81 12529.50 12567.90 12628.02 12696.95 12751.23 12802.59 #> [15,] 11731.10 11804.12 11873.17 11906.30 11952.71 12017.43 12065.21 12111.13 #> [16,] 11101.52 11171.64 11235.84 11263.56 11309.22 11369.59 11414.51 11459.54 #> [17,] 10839.93 10909.84 10964.84 10992.87 11038.53 11097.58 11143.42 11185.32 #> [18,] 11227.24 11297.28 11351.93 11383.50 11429.91 11490.28 11538.86 11583.84 #> [19,] 11977.64 12047.64 12105.85 12147.11 12198.91 12259.03 12310.97 12360.90 #> [20,] 12993.29 13063.98 13128.25 13192.59 13255.06 13322.86 13384.49 13442.47 #> [21,] 13757.54 13836.37 13905.42 13979.62 14048.56 14117.26 14181.81 14245.82 #> [22,] 14378.94 14453.68 14522.65 14600.58 14667.72 14732.61 14792.61 14854.61 #> [23,] 13461.84 13531.31 13593.31 13670.28 13730.59 13779.06 13822.56 13878.56 #> [24,] 11839.56 11907.48 11956.88 12028.58 12075.26 12114.66 12150.24 12193.18 #>         [,290]   [,291]   [,292]   [,293]   [,294]   [,295]   [,296]   [,297] #>  [1,] 11230.00 11271.26 11320.27 11353.77 11421.03 11457.15 11517.09 11562.01 #>  [2,]  9772.13  9806.33  9849.65  9877.09  9941.69  9970.38 10020.17 10057.57 #>  [3,]  8647.87  8676.49  8709.99  8726.36  8788.37  8810.80  8854.72  8888.22 #>  [4,]  8537.25  8566.06  8599.56  8618.67  8679.65  8699.65  8743.34  8775.04 #>  [5,]  8258.80  8286.30  8318.80  8341.61  8401.14  8416.14  8456.27  8487.77 #>  [6,]  8604.87  8633.15  8665.96  8694.02  8753.96  8773.95  8816.89  8848.39 #>  [7,]  9775.36  9805.36  9838.86  9879.78  9946.36  9977.45 10032.32 10076.90 #>  [8,] 11419.13 11457.69 11496.20 11556.14 11626.05 11680.57 11744.92 11809.81 #>  [9,] 12208.80 12250.06 12288.10 12353.50 12429.26 12488.79 12558.79 12629.19 #> [10,] 12972.99 13017.99 13061.31 13129.46 13204.67 13265.69 13336.49 13407.49 #> [11,] 13072.66 13113.92 13159.57 13228.08 13302.48 13363.50 13434.19 13505.88 #> [12,] 12907.39 12948.65 12995.78 13062.44 13132.84 13192.96 13262.98 13333.98 #> [13,] 13058.18 13099.44 13145.44 13212.87 13282.44 13342.60 13412.51 13483.51 #> [14,] 12853.51 12896.72 12944.17 13011.68 13080.34 13140.52 13209.21 13280.83 #> [15,] 12154.93 12193.33 12238.98 12304.18 12370.84 12430.78 12495.13 12565.25 #> [16,] 11498.55 11528.95 11571.69 11636.69 11699.84 11759.37 11821.87 11889.88 #> [17,] 11223.45 11253.45 11291.02 11357.68 11419.22 11479.34 11541.74 11610.43 #> [18,] 11626.24 11661.20 11698.77 11767.27 11828.81 11888.93 11953.03 12022.61 #> [19,] 12406.84 12448.10 12490.69 12560.69 12621.79 12685.72 12749.77 12819.68 #> [20,] 13494.76 13543.65 13589.30 13668.33 13732.33 13798.73 13867.73 13939.42 #> [21,] 14307.12 14371.70 14433.70 14533.47 14600.90 14672.84 14742.74 14820.14 #> [22,] 14914.09 14978.14 15042.08 15132.08 15197.89 15267.99 15335.04 15407.36 #> [23,] 13926.36 13986.24 14046.18 14118.98 14178.86 14243.20 14306.50 14376.62 #> [24,] 12230.92 12289.85 12338.00 12405.43 12449.26 12508.79 12563.79 12632.84 #>         [,298]   [,299]   [,300]   [,301]   [,302]   [,303]   [,304]   [,305] #>  [1,] 11625.70 11680.57 11740.69 11793.97 11840.95 11900.89 11944.00 12000.71 #>  [2,] 10117.10 10160.16 10209.29 10253.87 10298.45 10346.16 10382.01 10436.88 #>  [3,]  8934.52  8976.15  9022.18  9062.28  9102.28  9147.78  9177.91  9226.89 #>  [4,]  8820.24  8860.29  8906.32  8944.72  8983.72  9028.72  9057.77  9110.14 #>  [5,]  8532.35  8572.35  8618.38  8655.88  8695.28  8739.86  8768.31  8819.60 #>  [6,]  8892.47  8932.86  8979.16  9019.16  9062.18  9106.76  9136.74  9183.28 #>  [7,] 10121.48 10161.87 10221.87 10268.37 10316.21 10363.54 10400.99 10450.99 #>  [8,] 11856.79 11896.84 11966.75 12031.09 12100.47 12168.67 12221.59 12274.82 #>  [9,] 12688.07 12727.47 12797.38 12864.20 12934.32 13004.32 13062.88 13116.88 #> [10,] 13467.44 13507.83 13579.46 13648.15 13719.14 13789.34 13848.27 13907.08 #> [11,] 13566.39 13611.24 13681.24 13749.93 13820.05 13890.17 13948.17 14007.70 #> [12,] 13393.93 13440.91 13510.82 13580.17 13650.18 13720.18 13778.24 13837.41 #> [13,] 13543.45 13596.45 13666.57 13736.27 13806.47 13876.59 13935.52 13994.45 #> [14,] 13340.95 13395.82 13465.73 13534.78 13604.90 13675.02 13733.87 13792.80 #> [15,] 12624.97 12671.27 12739.96 12808.65 12877.70 12945.70 13001.66 13058.37 #> [16,] 11944.88 11989.88 12056.98 12125.10 12193.73 12258.08 12310.45 12365.32 #> [17,] 11660.56 11705.76 11774.44 11843.12 11912.50 11980.01 12034.88 12089.18 #> [18,] 12077.61 12132.48 12201.98 12269.99 12340.98 12410.98 12468.98 12524.94 #> [19,] 12879.21 12943.20 13013.00 13082.70 13156.69 13227.85 13287.79 13348.81 #> [20,] 14002.40 14066.74 14136.86 14206.86 14282.88 14355.88 14420.22 14488.42 #> [21,] 14889.98 14955.08 15035.09 15108.67 15193.67 15271.35 15338.86 15408.77 #> [22,] 15476.41 15541.30 15612.99 15683.11 15760.15 15831.14 15895.49 15963.66 #> [23,] 14440.97 14505.86 14573.86 14638.21 14710.89 14779.17 14838.70 14901.80 #> [24,] 12692.37 12754.47 12814.96 12874.06 12943.44 13002.97 13061.70 13120.63 #>         [,306]   [,307]   [,308]   [,309]   [,310]   [,311]   [,312]   [,313] #>  [1,] 12055.58 12102.12 12131.30 12167.11 12226.64 12254.85 12314.79 12359.62 #>  [2,] 10483.42 10523.88 10551.82 10582.98 10635.08 10660.07 10717.37 10754.37 #>  [3,]  9266.99  9296.73  9322.73  9352.00  9395.71  9407.41  9463.37  9498.37 #>  [4,]  9148.27  9177.90  9203.09  9229.52  9268.52  9277.82  9332.69  9367.69 #>  [5,]  8850.70  8879.77  8904.77  8931.96  8968.96  8978.26  9026.82  9061.82 #>  [6,]  9213.41  9242.43  9269.52  9300.23  9340.63  9357.88  9402.71  9437.81 #>  [7,] 10481.89 10521.52 10550.70 10594.06 10645.42 10673.22 10718.05 10753.25 #>  [8,] 12305.47 12353.48 12398.88 12453.75 12517.70 12566.74 12611.01 12646.21 #>  [9,] 13146.98 13201.85 13256.54 13315.23 13380.22 13437.41 13482.24 13517.34 #> [10,] 13945.98 14002.18 14061.08 14121.54 14189.34 14249.09 14303.96 14348.01 #> [11,] 14051.97 14106.84 14162.80 14222.96 14288.96 14349.27 14404.27 14454.86 #> [12,] 13882.41 13930.50 13984.70 14044.23 14110.03 14169.56 14214.39 14268.60 #> [13,] 14040.99 14088.63 14140.63 14201.09 14266.89 14327.06 14371.81 14425.83 #> [14,] 13839.88 13886.42 13935.94 13995.47 14058.47 14118.22 14159.99 14214.96 #> [15,] 13105.45 13145.91 13187.91 13245.61 13305.14 13364.23 13401.93 13454.94 #> [16,] 12410.32 12450.78 12491.24 12548.03 12606.96 12665.97 12697.83 12742.66 #> [17,] 12133.45 12173.91 12220.06 12278.95 12338.23 12398.73 12431.50 12476.33 #> [18,] 12572.02 12616.76 12670.96 12733.78 12797.50 12861.30 12903.49 12955.03 #> [19,] 13405.52 13460.39 13522.58 13597.63 13667.20 13738.00 13791.60 13851.54 #> [20,] 14551.02 14609.05 14673.00 14755.10 14823.09 14898.09 14954.86 15018.02 #> [21,] 15473.90 15528.77 15589.90 15679.90 15746.07 15823.17 15881.27 15947.07 #> [22,] 16027.68 16082.37 16141.30 16219.30 16281.50 16353.31 16410.61 16476.00 #> [23,] 14962.83 15009.37 15059.47 15128.97 15185.74 15253.54 15309.54 15372.14 #> [24,] 13176.33 13215.96 13258.96 13321.56 13364.86 13429.29 13477.51 13537.52 #>         [,314]   [,315]   [,316]   [,317]   [,318]   [,319]   [,320]   [,321] #>  [1,] 12417.21 12457.01 12482.15 12521.15 12550.73 12585.87 12601.17 12625.66 #>  [2,] 10805.13 10833.94 10856.09 10884.25 10912.18 10940.86 10950.16 10970.15 #>  [3,]  9542.25  9569.50  9587.78  9614.66  9641.00  9666.56  9673.76  9683.90 #>  [4,]  9412.69  9438.29  9452.89  9477.84  9498.37  9520.32  9527.52  9540.32 #>  [5,]  9105.62  9125.61  9140.50  9165.00  9178.86  9198.86  9206.06  9218.86 #>  [6,]  9482.81  9506.88  9526.90  9555.05  9581.13  9601.09  9608.29  9624.39 #>  [7,] 10809.82 10841.11 10873.49 10908.49 10943.62 10962.62 10969.82 10995.12 #>  [8,] 12707.19 12748.32 12793.15 12846.17 12893.47 12913.43 12920.93 12966.00 #>  [9,] 13581.44 13625.71 13672.85 13726.75 13780.76 13800.71 13807.91 13862.20 #> [10,] 14413.81 14468.58 14520.16 14575.16 14632.46 14652.46 14661.76 14717.96 #> [11,] 14519.66 14575.16 14627.26 14681.53 14739.53 14759.54 14772.04 14830.97 #> [12,] 14332.54 14387.41 14440.43 14495.30 14551.71 14561.81 14575.71 14634.64 #> [13,] 14488.73 14543.83 14598.70 14652.80 14708.76 14718.76 14731.26 14790.26 #> [14,] 14275.94 14329.55 14384.42 14436.57 14491.44 14503.14 14517.04 14575.54 #> [15,] 13513.87 13558.70 13611.72 13659.14 13710.83 13720.83 13733.83 13790.08 #> [16,] 12800.05 12841.79 12893.89 12940.16 12990.85 13000.15 13010.15 13066.92 #> [17,] 12534.34 12576.35 12632.31 12680.36 12732.36 12744.06 12756.56 12816.50 #> [18,] 13014.97 13061.29 13121.99 13176.02 13230.68 13255.68 13271.38 13335.38 #> [19,] 13915.49 13969.10 14035.11 14094.04 14152.54 14192.64 14222.66 14290.69 #> [20,] 15083.82 15139.32 15203.32 15259.92 15319.22 15362.33 15402.33 15479.33 #> [21,] 16012.06 16066.93 16129.03 16185.16 16244.09 16284.39 16322.79 16402.49 #> [22,] 16538.60 16588.60 16648.35 16702.45 16758.41 16794.79 16830.26 16903.26 #> [23,] 15429.94 15473.34 15528.21 15575.54 15627.54 15659.44 15692.48 15756.58 #> [24,] 13579.52 13614.90 13659.09 13698.09 13740.11 13769.30 13798.04 13859.16 #>         [,322]   [,323]   [,324]   [,325]   [,326]   [,327]   [,328]   [,329] #>  [1,] 12687.36 12732.36 12770.76 12810.10 12855.70 12893.20 12937.02 13000.71 #>  [2,] 11028.94 11068.84 11100.24 11132.74 11175.09 11202.66 11242.66 11301.59 #>  [3,]  9732.64  9770.84  9800.83  9830.43  9871.69  9891.69  9926.67  9982.77 #>  [4,]  9583.32  9621.72  9650.46  9679.27  9720.53  9736.53  9768.93  9823.93 #>  [5,]  9259.36  9298.06  9326.58  9355.10  9396.31  9411.50  9446.50  9498.60 #>  [6,]  9664.09  9704.19  9732.92  9762.42  9803.02  9818.01  9856.26  9909.36 #>  [7,] 11038.42 11086.11 11118.61 11158.71 11199.97 11214.28 11260.82 11319.75 #>  [8,] 13024.50 13083.44 13128.27 13180.68 13221.94 13238.57 13299.57 13364.36 #>  [9,] 13922.90 13982.84 14029.38 14082.58 14124.93 14146.68 14209.68 14274.68 #> [10,] 14779.97 14842.04 14890.73 14945.60 14991.70 15018.70 15083.18 15150.97 #> [11,] 14892.57 14953.57 15003.45 15057.83 15109.93 15140.13 15205.86 15275.55 #> [12,] 14694.58 14754.59 14802.42 14855.72 14905.72 14941.32 15006.95 15076.64 #> [13,] 14850.26 14910.86 14958.97 15012.91 15061.71 15097.31 15162.94 15233.14 #> [14,] 14634.47 14694.57 14743.07 14796.17 14846.18 14884.28 14949.91 15020.31 #> [15,] 13847.10 13906.00 13954.69 14007.69 14053.79 14092.19 14156.67 14224.37 #> [16,] 13121.67 13179.67 13227.00 13279.00 13320.73 13358.27 13422.27 13488.64 #> [17,] 12873.52 12929.48 12979.06 13031.11 13072.37 13111.96 13176.44 13242.81 #> [18,] 13396.90 13457.26 13512.13 13567.00 13609.54 13651.64 13716.12 13785.56 #> [19,] 14353.99 14415.56 14474.49 14529.86 14576.86 14626.83 14694.53 14764.53 #> [20,] 15540.93 15600.38 15658.72 15714.69 15764.69 15821.99 15890.48 15961.68 #> [21,] 16463.79 16522.29 16577.29 16632.16 16681.73 16742.83 16811.04 16882.23 #> [22,] 16962.28 17017.28 17066.47 17119.57 17167.26 17229.06 17294.79 17363.00 #> [23,] 15811.45 15860.01 15905.11 15957.43 16002.56 16063.06 16127.73 16194.42 #> [24,] 13904.39 13944.99 13989.26 14035.80 14077.06 14129.54 14191.54 14255.74 #>         [,330]   [,331]   [,332]   [,333]   [,334]   [,335]   [,336]   [,337] #>  [1,] 13066.44 13116.08 13138.08 13184.58 13214.56 13240.77 13270.27 13313.77 #>  [2,] 11364.18 11407.19 11417.33 11457.33 11484.53 11505.32 11530.32 11568.79 #>  [3,] 10042.71 10082.84 10088.83 10120.73 10143.31 10155.91 10175.91 10210.91 #>  [4,]  9881.02  9919.39  9927.27  9959.28  9972.44  9986.71 10007.52 10038.09 #>  [5,]  9554.29  9589.77  9595.76  9625.86  9638.97  9653.02  9677.07  9707.64 #>  [6,]  9967.77 10004.30 10013.60 10043.60 10055.18 10075.18 10104.16 10140.01 #>  [7,] 11381.95 11428.49 11448.49 11478.59 11492.71 11521.39 11552.94 11595.20 #>  [8,] 13432.06 13489.67 13519.88 13554.08 13569.08 13619.08 13668.58 13727.51 #>  [9,] 14342.95 14400.42 14442.46 14483.06 14502.21 14553.85 14607.15 14667.84 #> [10,] 15222.48 15281.41 15328.11 15376.80 15401.71 15454.81 15508.83 15570.47 #> [11,] 15345.82 15403.82 15453.39 15503.99 15533.72 15586.01 15640.26 15702.46 #> [12,] 15146.64 15204.74 15252.06 15302.66 15332.33 15383.92 15437.94 15500.04 #> [13,] 15303.14 15361.06 15411.07 15462.36 15492.27 15543.36 15597.38 15659.39 #> [14,] 15088.52 15143.22 15192.79 15244.43 15274.17 15324.76 15378.83 15441.03 #> [15,] 14291.04 14343.14 14391.64 14443.65 14468.76 14517.75 14569.00 14631.20 #> [16,] 13554.37 13602.87 13652.47 13702.52 13720.85 13769.35 13822.35 13885.35 #> [17,] 13308.50 13355.04 13407.18 13455.68 13476.07 13525.07 13579.09 13642.66 #> [18,] 13851.29 13898.74 13953.76 14003.41 14028.88 14079.98 14134.25 14200.35 #> [19,] 14834.27 14888.37 14953.04 15005.19 15039.19 15094.20 15152.30 15224.99 #> [20,] 16032.29 16086.74 16152.37 16203.46 16243.72 16302.65 16361.58 16431.49 #> [21,] 16951.42 17001.90 17066.57 17117.26 17155.33 17209.79 17264.66 17332.36 #> [22,] 17431.21 17472.92 17532.94 17581.63 17614.12 17666.12 17717.65 17782.32 #> [23,] 16260.03 16295.77 16351.87 16398.37 16430.68 16482.97 16536.84 16599.04 #> [24,] 14318.43 14348.43 14401.12 14438.14 14465.62 14512.72 14558.59 14620.16 #>         [,338]   [,339]   [,340]   [,341]   [,342]   [,343]   [,344]   [,345] #>  [1,] 13371.77 13429.78 13479.88 13515.88 13565.57 13595.57 13641.58 13691.08 #>  [2,] 11621.89 11675.89 11722.38 11750.68 11797.50 11826.02 11869.22 11914.56 #>  [3,] 10260.41 10308.40 10348.40 10367.81 10409.81 10431.33 10472.54 10513.60 #>  [4,] 10083.26 10128.43 10167.57 10182.56 10221.70 10241.70 10277.97 10314.50 #>  [5,]  9752.49  9795.85  9829.76  9839.90  9876.06  9895.23  9926.32  9959.52 #>  [6,] 10187.55 10234.71 10268.70 10278.84 10319.62 10344.19 10383.68 10421.80 #>  [7,] 11646.63 11697.54 11734.56 11751.56 11797.15 11826.54 11870.93 11916.10 #>  [8,] 13792.18 13855.75 13895.75 13917.27 13964.96 14011.00 14063.78 14118.94 #>  [9,] 14731.84 14795.94 14835.90 14857.42 14903.42 14953.11 15011.82 15070.11 #> [10,] 15638.11 15706.21 15747.47 15776.88 15826.42 15877.72 15936.97 15996.66 #> [11,] 15770.16 15835.16 15883.85 15918.95 15968.95 16020.64 16080.33 16140.24 #> [12,] 15567.74 15629.74 15677.43 15715.50 15765.70 15815.39 15874.08 15933.08 #> [13,] 15725.38 15785.39 15830.08 15867.98 15917.98 15967.48 16025.17 16083.32 #> [14,] 15506.76 15565.86 15610.13 15648.53 15698.54 15747.23 15804.53 15863.07 #> [15,] 14695.87 14752.88 14798.95 14834.94 14884.94 14934.44 14990.37 15048.36 #> [16,] 13948.14 14003.14 14044.40 14073.46 14118.48 14167.49 14223.42 14282.11 #> [17,] 13705.36 13761.89 13804.39 13834.39 13875.65 13924.66 13979.53 14039.22 #> [18,] 14264.73 14323.83 14372.33 14413.02 14454.28 14504.28 14564.00 14624.75 #> [19,] 15292.69 15354.89 15404.58 15453.59 15497.88 15552.88 15614.13 15680.38 #> [20,] 16496.16 16559.56 16610.25 16661.94 16707.65 16764.65 16824.59 16891.69 #> [21,] 17397.03 17456.03 17507.39 17560.96 17608.65 17664.52 17724.52 17793.62 #> [22,] 17846.70 17902.00 17950.69 18002.09 18047.09 18101.96 18161.65 18227.67 #> [23,] 16662.81 16719.34 16768.79 16822.79 16871.29 16926.16 16983.46 17046.42 #> [24,] 14680.13 14732.57 14778.55 14828.55 14869.81 14919.31 14970.04 15029.98 #>         [,346]   [,347]   [,348]   [,349]   [,350]   [,351]   [,352]   [,353] #>  [1,] 13747.77 13792.91 13840.91 13888.42 13936.84 13978.91 14023.93 14083.03 #>  [2,] 11968.25 12008.55 12052.24 12093.54 12137.04 12173.90 12214.70 12265.15 #>  [3,] 10559.08 10590.48 10630.61 10664.99 10706.36 10737.88 10771.88 10813.88 #>  [4,] 10357.71 10387.40 10426.16 10456.58 10490.33 10518.33 10552.33 10594.33 #>  [5,] 10000.32 10025.33 10060.23 10090.57 10122.58 10148.93 10178.64 10220.62 #>  [6,] 10462.60 10491.01 10526.01 10562.51 10598.51 10627.49 10663.62 10705.62 #>  [7,] 11962.79 11993.77 12030.67 12077.84 12119.91 12158.97 12200.87 12248.33 #>  [8,] 14174.93 14216.69 14256.68 14312.22 14366.97 14417.47 14473.40 14535.39 #>  [9,] 15126.47 15171.79 15212.43 15272.37 15327.24 15382.38 15442.09 15506.28 #> [10,] 16055.64 16103.63 16148.62 16210.07 16266.03 16321.99 16382.70 16449.70 #> [11,] 16197.84 16248.71 16297.28 16358.88 16414.84 16471.53 16533.19 16599.86 #> [12,] 15989.11 16041.08 16092.77 16154.43 16210.07 16266.03 16327.69 16393.38 #> [13,] 16139.31 16191.41 16243.76 16305.32 16359.41 16415.37 16477.05 16542.15 #> [14,] 15919.00 15970.97 16024.66 16085.76 16139.50 16195.43 16257.12 16321.62 #> [15,] 15102.45 15154.55 15207.47 15267.68 15318.70 15373.80 15435.29 15498.29 #> [16,] 14333.70 14385.00 14435.20 14495.30 14545.50 14600.50 14661.99 14724.19 #> [17,] 14089.42 14139.55 14189.97 14250.07 14300.27 14355.14 14416.61 14478.81 #> [18,] 14679.62 14730.57 14783.38 14845.48 14899.17 14954.86 15016.86 15080.86 #> [19,] 15736.41 15792.10 15849.79 15917.99 15977.65 16035.80 16100.70 16164.70 #> [20,] 16947.72 17002.91 17060.35 17128.35 17186.42 17245.42 17311.15 17375.34 #> [21,] 17849.65 17904.84 17961.03 18025.03 18080.96 18139.11 18206.62 18270.82 #> [22,] 18283.52 18338.21 18394.86 18456.96 18511.83 18567.84 18633.32 18696.31 #> [23,] 17100.51 17154.20 17210.05 17270.74 17325.92 17381.61 17443.33 17505.53 #> [24,] 15079.48 15130.35 15181.65 15239.26 15286.77 15338.07 15399.76 15459.73 #>         [,354]   [,355]   [,356]   [,357]   [,358]   [,359]   [,360]   [,361] #>  [1,] 14137.90 14185.31 14234.89 14283.90 14334.10 14388.20 14418.20 14467.20 #>  [2,] 12314.16 12354.41 12395.93 12440.78 12484.78 12536.02 12564.30 12607.70 #>  [3,] 10857.38 10889.38 10927.78 10969.00 11008.95 11055.95 11082.00 11115.51 #>  [4,] 10636.58 10667.98 10706.47 10747.49 10787.43 10826.03 10849.81 10881.82 #>  [5,] 10262.37 10291.12 10329.61 10370.63 10410.55 10444.54 10468.24 10500.25 #>  [6,] 10746.54 10775.69 10815.69 10857.79 10897.73 10933.93 10958.93 10989.95 #>  [7,] 12290.58 12322.98 12364.57 12411.52 12453.12 12489.22 12516.23 12546.21 #>  [8,] 14580.53 14618.78 14674.74 14730.70 14780.90 14818.00 14855.10 14885.23 #>  [9,] 15555.29 15593.78 15652.98 15712.67 15765.36 15798.56 15840.16 15871.18 #> [10,] 16501.72 16543.31 16603.28 16663.97 16717.84 16754.94 16803.94 16843.72 #> [11,] 16654.96 16704.97 16764.94 16825.63 16879.80 16921.30 16970.49 17014.64 #> [12,] 16448.68 16501.78 16560.98 16620.95 16674.32 16715.82 16764.82 16808.80 #> [13,] 16597.15 16650.84 16710.03 16769.78 16821.78 16865.81 16914.81 16950.91 #> [14,] 16376.74 16431.61 16489.76 16549.16 16599.36 16641.86 16690.86 16723.64 #> [15,] 15551.39 15606.26 15664.26 15722.26 15771.27 15813.26 15861.95 15893.90 #> [16,] 14775.49 14828.50 14885.58 14943.58 14991.66 15025.16 15072.35 15102.41 #> [17,] 14529.74 14583.43 14640.73 14699.83 14748.85 14781.60 14829.29 14857.30 #> [18,] 15134.86 15190.31 15250.28 15310.97 15362.84 15401.86 15453.96 15484.98 #> [19,] 16220.66 16278.35 16342.35 16406.35 16460.92 16504.49 16563.50 16603.60 #> [20,] 17431.79 17489.94 17555.63 17622.30 17677.17 17724.17 17783.39 17825.39 #> [21,] 18327.27 18387.07 18451.97 18519.00 18572.57 18621.76 18681.76 18719.12 #> [22,] 18752.27 18812.23 18874.48 18939.37 18990.67 19040.77 19100.37 19134.61 #> [23,] 17560.63 17618.63 17678.56 17742.57 17792.18 17841.37 17899.62 17932.40 #> [24,] 15509.93 15565.89 15622.97 15682.22 15730.32 15775.47 15828.66 15855.96 #>         [,362]   [,363]   [,364]   [,365] #>  [1,] 14475.45 14488.70 14513.83 14562.59 #>  [2,] 12612.50 12620.38 12638.59 12682.02 #>  [3,] 11119.51 11123.51 11136.74 11174.72 #>  [4,] 10884.12 10888.12 10901.94 10936.88 #>  [5,] 10502.55 10506.55 10516.78 10548.78 #>  [6,] 10992.25 10996.25 11010.76 11043.76 #>  [7,] 12549.51 12556.55 12576.48 12612.23 #>  [8,] 14889.23 14914.23 14947.73 14994.04 #>  [9,] 15875.98 15906.11 15951.80 15999.19 #> [10,] 16851.60 16899.01 16949.31 16999.70 #> [11,] 17034.64 17085.14 17136.44 17189.83 #> [12,] 16832.55 16882.75 16933.75 16985.20 #> [13,] 16972.08 17022.83 17073.67 17125.44 #> [14,] 16747.39 16798.69 16849.69 16899.89 #> [15,] 15917.36 15967.96 16018.71 16066.72 #> [16,] 15118.57 15164.55 15214.75 15260.93 #> [17,] 14874.47 14923.47 14973.97 15017.37 #> [18,] 15512.11 15566.98 15621.13 15669.89 #> [19,] 16646.29 16704.29 16762.44 16815.36 #> [20,] 17871.57 17928.54 17988.05 18043.05 #> [21,] 18766.08 18819.88 18878.03 18931.38 #> [22,] 19182.30 19232.44 19289.31 19339.70 #> [23,] 17978.38 18028.50 18085.13 18133.89 #> [24,] 15892.06 15937.20 15987.23 16036.87 #>  #> $name #> [1] \"t(apply(x$data, MARGIN = 1, cumsum))\" #>  #> $labels #>   [1] \"2014-01-01\" \"2014-01-02\" \"2014-01-03\" \"2014-01-04\" \"2014-01-05\" #>   [6] \"2014-01-06\" \"2014-01-07\" \"2014-01-08\" \"2014-01-09\" \"2014-01-10\" #>  [11] \"2014-01-11\" \"2014-01-12\" \"2014-01-13\" \"2014-01-14\" \"2014-01-15\" #>  [16] \"2014-01-16\" \"2014-01-17\" \"2014-01-18\" \"2014-01-19\" \"2014-01-20\" #>  [21] \"2014-01-21\" \"2014-01-22\" \"2014-01-23\" \"2014-01-24\" \"2014-01-25\" #>  [26] \"2014-01-26\" \"2014-01-27\" \"2014-01-28\" \"2014-01-29\" \"2014-01-30\" #>  [31] \"2014-01-31\" \"2014-02-01\" \"2014-02-02\" \"2014-02-03\" \"2014-02-04\" #>  [36] \"2014-02-05\" \"2014-02-06\" \"2014-02-07\" \"2014-02-08\" \"2014-02-09\" #>  [41] \"2014-02-10\" \"2014-02-11\" \"2014-02-12\" \"2014-02-13\" \"2014-02-14\" #>  [46] \"2014-02-15\" \"2014-02-16\" \"2014-02-17\" \"2014-02-18\" \"2014-02-19\" #>  [51] \"2014-02-20\" \"2014-02-21\" \"2014-02-22\" \"2014-02-23\" \"2014-02-24\" #>  [56] \"2014-02-25\" \"2014-02-26\" \"2014-02-27\" \"2014-02-28\" \"2014-03-01\" #>  [61] \"2014-03-02\" \"2014-03-03\" \"2014-03-04\" \"2014-03-05\" \"2014-03-06\" #>  [66] \"2014-03-07\" \"2014-03-08\" \"2014-03-09\" \"2014-03-10\" \"2014-03-11\" #>  [71] \"2014-03-12\" \"2014-03-13\" \"2014-03-14\" \"2014-03-15\" \"2014-03-16\" #>  [76] \"2014-03-17\" \"2014-03-18\" \"2014-03-19\" \"2014-03-20\" \"2014-03-21\" #>  [81] \"2014-03-22\" \"2014-03-23\" \"2014-03-24\" \"2014-03-25\" \"2014-03-26\" #>  [86] \"2014-03-27\" \"2014-03-28\" \"2014-03-29\" \"2014-03-30\" \"2014-03-31\" #>  [91] \"2014-04-01\" \"2014-04-02\" \"2014-04-03\" \"2014-04-04\" \"2014-04-05\" #>  [96] \"2014-04-06\" \"2014-04-07\" \"2014-04-08\" \"2014-04-09\" \"2014-04-10\" #> [101] \"2014-04-11\" \"2014-04-12\" \"2014-04-13\" \"2014-04-14\" \"2014-04-15\" #> [106] \"2014-04-16\" \"2014-04-17\" \"2014-04-18\" \"2014-04-19\" \"2014-04-20\" #> [111] \"2014-04-21\" \"2014-04-22\" \"2014-04-23\" \"2014-04-24\" \"2014-04-25\" #> [116] \"2014-04-26\" \"2014-04-27\" \"2014-04-28\" \"2014-04-29\" \"2014-04-30\" #> [121] \"2014-05-01\" \"2014-05-02\" \"2014-05-03\" \"2014-05-04\" \"2014-05-05\" #> [126] \"2014-05-06\" \"2014-05-07\" \"2014-05-08\" \"2014-05-09\" \"2014-05-10\" #> [131] \"2014-05-11\" \"2014-05-12\" \"2014-05-13\" \"2014-05-14\" \"2014-05-15\" #> [136] \"2014-05-16\" \"2014-05-17\" \"2014-05-18\" \"2014-05-19\" \"2014-05-20\" #> [141] \"2014-05-21\" \"2014-05-22\" \"2014-05-23\" \"2014-05-24\" \"2014-05-25\" #> [146] \"2014-05-26\" \"2014-05-27\" \"2014-05-28\" \"2014-05-29\" \"2014-05-30\" #> [151] \"2014-05-31\" \"2014-06-01\" \"2014-06-02\" \"2014-06-03\" \"2014-06-04\" #> [156] \"2014-06-05\" \"2014-06-06\" \"2014-06-07\" \"2014-06-08\" \"2014-06-09\" #> [161] \"2014-06-10\" \"2014-06-11\" \"2014-06-12\" \"2014-06-13\" \"2014-06-14\" #> [166] \"2014-06-15\" \"2014-06-16\" \"2014-06-17\" \"2014-06-18\" \"2014-06-19\" #> [171] \"2014-06-20\" \"2014-06-21\" \"2014-06-22\" \"2014-06-23\" \"2014-06-24\" #> [176] \"2014-06-25\" \"2014-06-26\" \"2014-06-27\" \"2014-06-28\" \"2014-06-29\" #> [181] \"2014-06-30\" \"2014-07-01\" \"2014-07-02\" \"2014-07-03\" \"2014-07-04\" #> [186] \"2014-07-05\" \"2014-07-06\" \"2014-07-07\" \"2014-07-08\" \"2014-07-09\" #> [191] \"2014-07-10\" \"2014-07-11\" \"2014-07-12\" \"2014-07-13\" \"2014-07-14\" #> [196] \"2014-07-15\" \"2014-07-16\" \"2014-07-17\" \"2014-07-18\" \"2014-07-19\" #> [201] \"2014-07-20\" \"2014-07-21\" \"2014-07-22\" \"2014-07-23\" \"2014-07-24\" #> [206] \"2014-07-25\" \"2014-07-26\" \"2014-07-27\" \"2014-07-28\" \"2014-07-29\" #> [211] \"2014-07-30\" \"2014-07-31\" \"2014-08-01\" \"2014-08-02\" \"2014-08-03\" #> [216] \"2014-08-04\" \"2014-08-05\" \"2014-08-06\" \"2014-08-07\" \"2014-08-08\" #> [221] \"2014-08-09\" \"2014-08-10\" \"2014-08-11\" \"2014-08-12\" \"2014-08-13\" #> [226] \"2014-08-14\" \"2014-08-15\" \"2014-08-16\" \"2014-08-17\" \"2014-08-18\" #> [231] \"2014-08-19\" \"2014-08-20\" \"2014-08-21\" \"2014-08-22\" \"2014-08-23\" #> [236] \"2014-08-24\" \"2014-08-25\" \"2014-08-26\" \"2014-08-27\" \"2014-08-28\" #> [241] \"2014-08-29\" \"2014-08-30\" \"2014-08-31\" \"2014-09-01\" \"2014-09-02\" #> [246] \"2014-09-03\" \"2014-09-04\" \"2014-09-05\" \"2014-09-06\" \"2014-09-07\" #> [251] \"2014-09-08\" \"2014-09-09\" \"2014-09-10\" \"2014-09-11\" \"2014-09-12\" #> [256] \"2014-09-13\" \"2014-09-14\" \"2014-09-15\" \"2014-09-16\" \"2014-09-17\" #> [261] \"2014-09-18\" \"2014-09-19\" \"2014-09-20\" \"2014-09-21\" \"2014-09-22\" #> [266] \"2014-09-23\" \"2014-09-24\" \"2014-09-25\" \"2014-09-26\" \"2014-09-27\" #> [271] \"2014-09-28\" \"2014-09-29\" \"2014-09-30\" \"2014-10-01\" \"2014-10-02\" #> [276] \"2014-10-03\" \"2014-10-04\" \"2014-10-05\" \"2014-10-06\" \"2014-10-07\" #> [281] \"2014-10-08\" \"2014-10-09\" \"2014-10-10\" \"2014-10-11\" \"2014-10-12\" #> [286] \"2014-10-13\" \"2014-10-14\" \"2014-10-15\" \"2014-10-16\" \"2014-10-17\" #> [291] \"2014-10-18\" \"2014-10-19\" \"2014-10-20\" \"2014-10-21\" \"2014-10-22\" #> [296] \"2014-10-23\" \"2014-10-24\" \"2014-10-25\" \"2014-10-26\" \"2014-10-27\" #> [301] \"2014-10-28\" \"2014-10-29\" \"2014-10-30\" \"2014-10-31\" \"2014-11-01\" #> [306] \"2014-11-02\" \"2014-11-03\" \"2014-11-04\" \"2014-11-05\" \"2014-11-06\" #> [311] \"2014-11-07\" \"2014-11-08\" \"2014-11-09\" \"2014-11-10\" \"2014-11-11\" #> [316] \"2014-11-12\" \"2014-11-13\" \"2014-11-14\" \"2014-11-15\" \"2014-11-16\" #> [321] \"2014-11-17\" \"2014-11-18\" \"2014-11-19\" \"2014-11-20\" \"2014-11-21\" #> [326] \"2014-11-22\" \"2014-11-23\" \"2014-11-24\" \"2014-11-25\" \"2014-11-26\" #> [331] \"2014-11-27\" \"2014-11-28\" \"2014-11-29\" \"2014-11-30\" \"2014-12-01\" #> [336] \"2014-12-02\" \"2014-12-03\" \"2014-12-04\" \"2014-12-05\" \"2014-12-06\" #> [341] \"2014-12-07\" \"2014-12-08\" \"2014-12-09\" \"2014-12-10\" \"2014-12-11\" #> [346] \"2014-12-12\" \"2014-12-13\" \"2014-12-14\" \"2014-12-15\" \"2014-12-16\" #> [351] \"2014-12-17\" \"2014-12-18\" \"2014-12-19\" \"2014-12-20\" \"2014-12-21\" #> [356] \"2014-12-22\" \"2014-12-23\" \"2014-12-24\" \"2014-12-25\" \"2014-12-26\" #> [361] \"2014-12-27\" \"2014-12-28\" \"2014-12-29\" \"2014-12-30\" \"2014-12-31\" #>  #> $intratime #>  [1] 0.00000000 0.04347826 0.08695652 0.13043478 0.17391304 0.21739130 #>  [7] 0.26086957 0.30434783 0.34782609 0.39130435 0.43478261 0.47826087 #> [13] 0.52173913 0.56521739 0.60869565 0.65217391 0.69565217 0.73913043 #> [19] 0.78260870 0.82608696 0.86956522 0.91304348 0.95652174 1.00000000 #>  #> attr(,\"class\") #> [1] \"dfts\""},{"path":"https://jrvanderdoes.github.io/fChange/reference/dfts.html","id":null,"dir":"Reference","previous_headings":"","what":"dfts Objects — dfts","title":"dfts Objects — dfts","text":"Define data , check data , convert data dfts object. data may another popular implementation.","code":""},{"path":"https://jrvanderdoes.github.io/fChange/reference/dfts.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"dfts Objects — dfts","text":"","code":"dfts(X, name = NULL, labels = NULL, intratime = NULL, inc.warnings = TRUE)  as.dfts(X)  is.dfts(X)"},{"path":"https://jrvanderdoes.github.io/fChange/reference/dfts.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"dfts Objects — dfts","text":"X Data convert dfts object. Options include: data.frame, matrix, array, fda::fd, fda.usc::fdata, rainbow::fts (used ftsa), rainbow::fds (used ftsa), funData::funData, fChange::dfts. matrix, column unique observation, rows observed intra-observation (.e. resolution) points. name String name object. Defaults name input variable. labels Labels observations. Defaults column names names inside object X. intratime Vector numerics indicating points observation. Defaults even spacing [0,1], included object. may unevenly spaced. inc.warnings Boolean warnings given. Defaults TRUE,","code":""},{"path":"https://jrvanderdoes.github.io/fChange/reference/dfts.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"dfts Objects — dfts","text":"dfts / .dfts: dfts object .dfts: Boolean indicating x dfts object ","code":""},{"path":"https://jrvanderdoes.github.io/fChange/reference/dfts.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"dfts Objects — dfts","text":"","code":"bm <- dfts(generate_brownian_motion(100, c(0,0.1,0.25,0.5,1)))  # Electricity result <- dfts(electricity) result <- as.dfts(electricity) result <- is.dfts(electricity)"},{"path":"https://jrvanderdoes.github.io/fChange/reference/dfts_group.html","id":null,"dir":"Reference","previous_headings":"","what":"Group Generic Functions — dfts_group","title":"Group Generic Functions — dfts_group","text":"Group generic methods defined things like Math, Ops, forth.","code":""},{"path":"https://jrvanderdoes.github.io/fChange/reference/dfts_group.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Group Generic Functions — dfts_group","text":"","code":"# S3 method for class 'dfts' Math(x, ...)  # S3 method for class 'dfts' Ops(e1, e2)"},{"path":"https://jrvanderdoes.github.io/fChange/reference/dfts_group.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Group Generic Functions — dfts_group","text":"x, e1, e2 dfts object ... arguments passed methods","code":""},{"path":"https://jrvanderdoes.github.io/fChange/reference/dfts_group.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Group Generic Functions — dfts_group","text":"dfts object","code":""},{"path":"https://jrvanderdoes.github.io/fChange/reference/dfts_group.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Group Generic Functions — dfts_group","text":"","code":"result <- sqrt( electricity ) result <- electricity + electricity result1 <- electricity * electricity"},{"path":"https://jrvanderdoes.github.io/fChange/reference/diff.dfts.html","id":null,"dir":"Reference","previous_headings":"","what":"Difference dfts — diff.dfts","title":"Difference dfts — diff.dfts","text":"Difference functional data lag / degree.","code":""},{"path":"https://jrvanderdoes.github.io/fChange/reference/diff.dfts.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Difference dfts — diff.dfts","text":"","code":"# S3 method for class 'dfts' diff(x, lag = 1L, differences = 1L, ...)"},{"path":"https://jrvanderdoes.github.io/fChange/reference/diff.dfts.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Difference dfts — diff.dfts","text":"x dfts object data can automatically converted format. See dfts(). lag integer indicating lag use. differences integer indicating order difference. ... arguments passed methods.","code":""},{"path":"https://jrvanderdoes.github.io/fChange/reference/diff.dfts.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Difference dfts — diff.dfts","text":"dfts object differenced values","code":""},{"path":"https://jrvanderdoes.github.io/fChange/reference/diff.dfts.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Difference dfts — diff.dfts","text":"","code":"result <- diff(electricity, lag=1) result1 <- diff(electricity, differences=2)"},{"path":"https://jrvanderdoes.github.io/fChange/reference/dim.dfts.html","id":null,"dir":"Reference","previous_headings":"","what":"Dimension of dfts Object — dim.dfts","title":"Dimension of dfts Object — dim.dfts","text":"Retrieve dimension dfts object.","code":""},{"path":"https://jrvanderdoes.github.io/fChange/reference/dim.dfts.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Dimension of dfts Object — dim.dfts","text":"","code":"# S3 method for class 'dfts' dim(x, ...)"},{"path":"https://jrvanderdoes.github.io/fChange/reference/dim.dfts.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Dimension of dfts Object — dim.dfts","text":"x dfts object data can automatically converted format. See dfts(). ... Additional parameters stats function","code":""},{"path":"https://jrvanderdoes.github.io/fChange/reference/dim.dfts.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Dimension of dfts Object — dim.dfts","text":"Numerics indicating dimension dfts object","code":""},{"path":"https://jrvanderdoes.github.io/fChange/reference/dim.dfts.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Dimension of dfts Object — dim.dfts","text":"","code":"results <- dim(electricity)"},{"path":"https://jrvanderdoes.github.io/fChange/reference/electricity.html","id":null,"dir":"Reference","previous_headings":"","what":"Spanish Spot Electricity Data — electricity","title":"Spanish Spot Electricity Data — electricity","text":"hourly electricity spot prices Spain 2014.","code":""},{"path":"https://jrvanderdoes.github.io/fChange/reference/electricity.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Spanish Spot Electricity Data — electricity","text":"","code":"electricity"},{"path":[]},{"path":"https://jrvanderdoes.github.io/fChange/reference/electricity.html","id":"electricity","dir":"Reference","previous_headings":"","what":"electricity","title":"Spanish Spot Electricity Data — electricity","text":"dfts object","code":""},{"path":"https://jrvanderdoes.github.io/fChange/reference/electricity.html","id":"source","dir":"Reference","previous_headings":"","what":"Source","title":"Spanish Spot Electricity Data — electricity","text":"<www.omie.es>","code":""},{"path":"https://jrvanderdoes.github.io/fChange/reference/fChange-package.html","id":null,"dir":"Reference","previous_headings":"","what":"General Information for fChange — fChange-package","title":"General Information for fChange — fChange-package","text":"Change point detection discretely observed, yet innately functional data. Includes methods process investigate data, including functional ACF, smoothing, change point detection, plotting, forth.","code":""},{"path":[]},{"path":"https://jrvanderdoes.github.io/fChange/reference/fChange-package.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"General Information for fChange — fChange-package","text":"Maintainer: Jeremy VanderDoes jeremy.vanderdoes@gmail.com (ORCID) Authors: Gregory Rice Martin Wendler","code":""},{"path":"https://jrvanderdoes.github.io/fChange/reference/generate_brownian_bridge.html","id":null,"dir":"Reference","previous_headings":"","what":"Generate a Brownian Bridge Process — generate_brownian_bridge","title":"Generate a Brownian Bridge Process — generate_brownian_bridge","text":"Generate functional time series iid Brownian Bridge process. \\(W(t)\\) Wiener process, Brownian Bridge defined \\(W(t) - tW(1)\\). functional observation discretized points indicated v.","code":""},{"path":"https://jrvanderdoes.github.io/fChange/reference/generate_brownian_bridge.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Generate a Brownian Bridge Process — generate_brownian_bridge","text":"","code":"generate_brownian_bridge(   N,   v = seq(from = 0, to = 1, length.out = 100),   sd = 1 )"},{"path":"https://jrvanderdoes.github.io/fChange/reference/generate_brownian_bridge.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Generate a Brownian Bridge Process — generate_brownian_bridge","text":"N Numeric. number observations generated data. v Numeric (vector). Discretization points curves.can evaluated points number evenly spaced points [0,1]. default evenly spaced [0,1] 20 points. sd Numeric. Standard deviation Brownian Motion process. default 1.","code":""},{"path":"https://jrvanderdoes.github.io/fChange/reference/generate_brownian_bridge.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Generate a Brownian Bridge Process — generate_brownian_bridge","text":"Functional time series (dfts) object","code":""},{"path":"https://jrvanderdoes.github.io/fChange/reference/generate_brownian_bridge.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Generate a Brownian Bridge Process — generate_brownian_bridge","text":"","code":"bbridge <- generate_brownian_bridge(N=100, v=c(0,0.2,0.6,1,1.3), sd=2) bbridge <- generate_brownian_bridge(N=100, v=10, sd=1)"},{"path":"https://jrvanderdoes.github.io/fChange/reference/generate_brownian_motion.html","id":null,"dir":"Reference","previous_headings":"","what":"Generate a Brownian Motion Process — generate_brownian_motion","title":"Generate a Brownian Motion Process — generate_brownian_motion","text":"Generate functional time series according iid Brownian Motion process. observation discretized points indicated v.","code":""},{"path":"https://jrvanderdoes.github.io/fChange/reference/generate_brownian_motion.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Generate a Brownian Motion Process — generate_brownian_motion","text":"","code":"generate_brownian_motion(N, v = seq(from = 0, to = 1, length.out = 20), sd = 1)"},{"path":"https://jrvanderdoes.github.io/fChange/reference/generate_brownian_motion.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Generate a Brownian Motion Process — generate_brownian_motion","text":"N Numeric. number observations generated data. v Numeric (vector). Discretization points curves.can evaluated points number evenly spaced points [0,1]. default evenly spaced [0,1] 20 points. sd Numeric. Standard deviation Brownian Motion process. default 1.","code":""},{"path":"https://jrvanderdoes.github.io/fChange/reference/generate_brownian_motion.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Generate a Brownian Motion Process — generate_brownian_motion","text":"Functional time series (dfts) object","code":""},{"path":"https://jrvanderdoes.github.io/fChange/reference/generate_brownian_motion.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Generate a Brownian Motion Process — generate_brownian_motion","text":"","code":"bmotion <- generate_brownian_motion(N=100,   v=c(0,0.25,0.4,0.7, 1, 1.5), sd = 1) bmotion1 <- generate_brownian_motion(N=100,   v=10, sd = 2)"},{"path":"https://jrvanderdoes.github.io/fChange/reference/generate_data.html","id":null,"dir":"Reference","previous_headings":"","what":"Generate Functional Data — generate_data","title":"Generate Functional Data — generate_data","text":"function allows generation functional data according several approaches: bbridge, bmotion, kl, ou, far1.","code":""},{"path":"https://jrvanderdoes.github.io/fChange/reference/generate_data.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Generate Functional Data — generate_data","text":"","code":"generate_data(intratime, data_details, burnin = 100)"},{"path":"https://jrvanderdoes.github.io/fChange/reference/generate_data.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Generate Functional Data — generate_data","text":"intratime intratime data (resolution equally spaced [0,1\\). data_details List named lists indicating parameters data group. process can use different parameters, given . bmotion: Brownian motion contains: N: Numeric indicating number observations. sd: Numeric standard deviation observations. bbridge: Brownian bridge contains: N: Numeric indicating number observations. sd: Numeric standard deviation observations. kl: Karhunen-Loeve expansion contains: N: Numeric indicating number observations. distribution: Distribution errors. Options include: binomial, exponential, laplace, normal, t (add dof argument), gamma (add shape argument), cauchy. eigenvalues: Numerics eigenvalues given distribution (value basis). mean: Numeric mean group. dependence: Strength dependence observation. basis: fda basisfd object. dof: (Optional) Numeric degrees freedom using t distribution. shape: (Optional) Numeric shape using gamma distribution. ou: Ornstein-Uhlenbeck process requires: N: Numeric indicating number observations. dependence: Strength dependence observation. far1: Functional autoregressive process order 1 contains: N: Numeric indicating number observations. dependence: Strength dependence observation. sd: Numeric standard deviation observations. vary: Boolean starting value observation 0 vary. dropping first value. intratime given number, can adjust length . intratime vector, intratime one smaller. burnin Numeric amount burnin data","code":""},{"path":"https://jrvanderdoes.github.io/fChange/reference/generate_data.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Generate Functional Data — generate_data","text":"dfts object generated data","code":""},{"path":"https://jrvanderdoes.github.io/fChange/reference/generate_data.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Generate Functional Data — generate_data","text":"","code":"result <- generate_data(   intratime=15,   data_details =list('bmotion'=list('N'=100, 'sd'=1),                      'bbridge'=list('N'=100, 'sd'=1),                      'bbridge'=list('N'=100, 'sd'=1),                      'kl'=list('N'=100,                                'distribution'='Normal',                                'eigenvalues'=1/1:4,                                'mean'=0, 'dependence'=0,                                'basis'=fda::create.bspline.basis(),                                'sd'=1),                      'ou'=list('N'=100, 'dependence'=0 ) ,                      'far1'=list('N'=100, 'dependence'=0,                                  'sd'=1,'vary'=FALSE) ) )"},{"path":"https://jrvanderdoes.github.io/fChange/reference/generate_far1.html","id":null,"dir":"Reference","previous_headings":"","what":"Generate FAR(1) Data — generate_far1","title":"Generate FAR(1) Data — generate_far1","text":"Function generate date according FAR(1) process.","code":""},{"path":"https://jrvanderdoes.github.io/fChange/reference/generate_far1.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Generate FAR(1) Data — generate_far1","text":"","code":"generate_far1(N, resolution, sd = 1, dependence = 1/2, dropFirst = TRUE)"},{"path":"https://jrvanderdoes.github.io/fChange/reference/generate_far1.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Generate FAR(1) Data — generate_far1","text":"N Numeric number observations resolution Numeric resolution data vector specifying observation points sd Numeric standard deviation Brownian Motion dependence Numeric indicates dependence previous curve. dropFirst Booolean first values dropped data varies first rather starting 0 (given observed first point)","code":""},{"path":"https://jrvanderdoes.github.io/fChange/reference/generate_far1.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Generate FAR(1) Data — generate_far1","text":"dfts object data","code":""},{"path":"https://jrvanderdoes.github.io/fChange/reference/generate_far1.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Generate FAR(1) Data — generate_far1","text":"","code":"res <- generate_far1(20,10)"},{"path":"https://jrvanderdoes.github.io/fChange/reference/generate_karhunen_loeve.html","id":null,"dir":"Reference","previous_headings":"","what":"Generate functional data — generate_karhunen_loeve","title":"Generate functional data — generate_karhunen_loeve","text":"generate_karhunen_loeve generates functional data via KL expansion. can include change points combination following: Mean Distribution Eigenvalue(s) Eigenvector(s) sense, function creates m 'groups' discretely observed functions similar properties.","code":""},{"path":"https://jrvanderdoes.github.io/fChange/reference/generate_karhunen_loeve.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Generate functional data — generate_karhunen_loeve","text":"","code":"generate_karhunen_loeve(   N,   eigenvalues,   basis,   means,   distribution,   intratime,   dependence = 0,   burnin = 100,   silent = TRUE,   dof = NULL,   shape = NULL,   prev_eps = NULL )"},{"path":"https://jrvanderdoes.github.io/fChange/reference/generate_karhunen_loeve.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Generate functional data — generate_karhunen_loeve","text":"N Vector Numerics. value N number observations given group. eigenvalues Vector eigenvalues. Length 1 m. basis list bases (eigenfunctions), length m. means vector means, length 1 N. distribution vector distributions, length 1 m. intratime vector points indicating points evaluate functions . dependence Numeric [0,1] indicating strength VAR(1) process. burnin numeric value indicating number burnin trials. silent Boolean toggles running output. dof Numeric shape gamma distribution (rate set 1) shape Numeric degrees freedom t-distribution prev_eps previous epsilon dependence across groups.","code":""},{"path":"https://jrvanderdoes.github.io/fChange/reference/generate_karhunen_loeve.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Generate functional data — generate_karhunen_loeve","text":"List (1) data (N--m) (2) previous errors.","code":""},{"path":"https://jrvanderdoes.github.io/fChange/reference/generate_karhunen_loeve.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Generate functional data — generate_karhunen_loeve","text":"","code":"dat1 <- generate_karhunen_loeve(   N=100, eigenvalues=c(1/(1:3)), basis=fda::create.bspline.basis(nbasis=3,norder=3),   means=0, distribution='Normal',   intratime=seq(0,1,0.1), dependence=0, burnin=100, silent=TRUE, dof=NULL, shape=NULL,   prev_eps=NULL) dat2 <- generate_karhunen_loeve(   N=50, eigenvalues=c(1/(1:4)), basis=fda::create.bspline.basis(nbasis=4),   means=5, distribution='exponential',   intratime=seq(0,1,0.1), dependence=0, burnin=100, silent=TRUE, dof=NULL, shape=NULL,   prev_eps=dat1$prev_eps)  dat <- dfts(cbind(dat1$data$data, dat2$data$data),intratime = dat1$data$intratime)"},{"path":"https://jrvanderdoes.github.io/fChange/reference/generate_ornstein_uhlenbeck.html","id":null,"dir":"Reference","previous_headings":"","what":"Generate Data via Ornstein-Uhlenbeck Process — generate_ornstein_uhlenbeck","title":"Generate Data via Ornstein-Uhlenbeck Process — generate_ornstein_uhlenbeck","text":"Generate Data via Ornstein-Uhlenbeck Process","code":""},{"path":"https://jrvanderdoes.github.io/fChange/reference/generate_ornstein_uhlenbeck.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Generate Data via Ornstein-Uhlenbeck Process — generate_ornstein_uhlenbeck","text":"","code":"generate_ornstein_uhlenbeck(N, resolution, rho = 0)"},{"path":"https://jrvanderdoes.github.io/fChange/reference/generate_ornstein_uhlenbeck.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Generate Data via Ornstein-Uhlenbeck Process — generate_ornstein_uhlenbeck","text":"N Numeric data length resolution Numeric data resolution specific observed intratime rho Numeric amount dependence","code":""},{"path":"https://jrvanderdoes.github.io/fChange/reference/generate_ornstein_uhlenbeck.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Generate Data via Ornstein-Uhlenbeck Process — generate_ornstein_uhlenbeck","text":"dfts object generated OU data","code":""},{"path":"https://jrvanderdoes.github.io/fChange/reference/generate_ornstein_uhlenbeck.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Generate Data via Ornstein-Uhlenbeck Process — generate_ornstein_uhlenbeck","text":"","code":"generate_ornstein_uhlenbeck(N=100,resolution=20) #> $data #>              [,1]        [,2]         [,3]        [,4]      [,5]      [,6] #>  [1,]  0.18715346 -0.89075426 -0.298899929 -0.12562045 0.6325929 0.8036005 #>  [2,] -0.00939679 -0.59659317 -0.375444052 -0.03053673 1.0480680 0.6114430 #>  [3,] -0.10982519 -0.67821621 -0.602044013  0.26130736 1.2579065 0.5476825 #>  [4,] -0.24018521 -0.40027436  0.007020140  0.65352269 1.1475122 0.9011769 #>  [5,] -0.48266781 -0.39771799  0.279608556  0.86159333 1.2275513 0.8258842 #>  [6,] -0.34915141 -0.16699938 -0.140052560  1.05086215 1.0003386 1.0881070 #>  [7,] -0.14299233  0.19659369 -0.229998000  1.07745720 1.0461244 0.6814328 #>  [8,] -0.54908569  0.52521599 -0.120364733  0.63311119 1.4031411 0.4375274 #>  [9,] -0.37813226 -0.16908769 -0.283845714  0.82230761 1.5827615 0.4106649 #> [10,] -0.82352692 -0.28155020 -0.635521558  0.69244201 1.3620702 0.6032495 #> [11,] -0.71767681 -0.15430187 -0.695962168  0.39757759 1.3948827 0.6561719 #> [12,] -0.64592619 -0.02556284 -0.733831505  0.58840229 1.0438491 0.4693476 #> [13,] -0.77623026 -0.01911993 -0.652340875  0.55647944 1.0969489 0.3291142 #> [14,] -0.80516306  0.09755479 -0.406735153  0.36859277 0.7536310 0.4446485 #> [15,] -0.91355092  0.06151608 -0.552425009  0.43628561 1.0442136 0.2933280 #> [16,] -0.87310102  0.31259379 -0.482586287  0.35225264 1.1898810 0.2847671 #> [17,] -0.76967071  0.34051112 -0.091980894  0.33344266 1.0571580 0.3211480 #> [18,] -0.37199764  0.25765738 -0.096102649  0.32352719 1.1626714 0.2150343 #> [19,] -0.48880192  0.58418378  0.017762098  0.50520829 1.3820792 0.4237264 #> [20,] -0.39045037  0.68299744 -0.004473072  0.36714421 1.4383525 0.3698671 #>            [,7]       [,8]      [,9]       [,10]      [,11]        [,12] #>  [1,] 1.9592038 -0.4573301 1.1960324 -0.35290381 -0.1163624  0.151100186 #>  [2,] 1.9325752 -0.6330352 1.5051951 -0.01252066 -0.4263615 -0.002285115 #>  [3,] 2.0073235 -0.9212010 1.1117763 -0.07357908 -0.5634020  0.063945616 #>  [4,] 1.9930255 -0.6937874 1.2425211 -0.23658224 -0.7953938  0.066634294 #>  [5,] 1.8259251 -0.7911010 1.3741945 -0.26748460 -0.8774415 -0.246375303 #>  [6,] 1.4121799 -0.9485324 1.0535429  0.04272220 -1.0000677 -0.072638378 #>  [7,] 1.1539914 -0.8655668 0.8335075 -0.31145434 -0.9973111 -0.069189344 #>  [8,] 0.7870888 -1.2006503 0.9950182 -0.69776762 -1.0602086  0.054634316 #>  [9,] 1.1055359 -1.4319229 0.9816622 -0.79392875 -1.4229244  0.326928608 #> [10,] 0.8521464 -1.4531909 1.1731964 -0.58184429 -1.2913831  0.329773970 #> [11,] 0.9458831 -1.4304795 1.1208057 -0.76852794 -1.1932158  0.133997208 #> [12,] 0.3273275 -1.1827322 1.8153607 -1.02168379 -1.4263460 -0.050185372 #> [13,] 0.4519294 -1.0818775 1.7111361 -1.32556999 -1.5265657 -0.130382086 #> [14,] 0.8593154 -1.1520214 1.3880734 -1.27854494 -1.6694385  0.143195979 #> [15,] 1.1095131 -0.8858339 1.2557494 -1.40050227 -1.3163647  0.378658585 #> [16,] 1.2642606 -0.8196852 1.3157982 -1.45614650 -1.3380407  0.191913918 #> [17,] 1.2085010 -0.4335713 1.5578216 -1.31332581 -1.3837646  0.321510674 #> [18,] 1.1973561 -0.3235391 1.2947588 -1.12335676 -0.9332582 -0.082288894 #> [19,] 0.8904190 -0.4975649 1.3578849 -1.53791613 -0.6222064 -0.004139497 #> [20,] 0.8474870 -0.8151784 0.9895994 -1.77170447 -0.6890689 -0.250120053 #>            [,13]      [,14]     [,15]      [,16]     [,17]     [,18] #>  [1,] -0.4800503 -1.1626059 -2.651670 -0.9443640 0.4474261 2.2155192 #>  [2,] -0.7296153 -1.3682774 -2.860513 -0.8586840 0.5260678 2.1209167 #>  [3,] -0.7120922 -1.0079971 -2.651905 -0.8182309 0.5537970 2.5186263 #>  [4,] -0.4329165 -1.0414645 -2.355729 -0.7066981 0.5070095 2.3685834 #>  [5,] -0.8741291 -1.2622667 -1.907068 -0.9502576 0.9511118 2.4215894 #>  [6,] -1.1279841 -1.3293235 -1.892286 -0.8608723 1.4528391 2.2877647 #>  [7,] -1.0379201 -0.9717176 -1.792589 -1.1156417 1.2291638 2.3401522 #>  [8,] -0.6605305 -0.9625831 -1.762324 -1.4350949 1.0781155 2.2675640 #>  [9,] -0.5600941 -0.9678355 -1.632378 -1.2988299 0.8421263 2.1823363 #> [10,] -0.5999568 -0.9235954 -1.412720 -1.3262598 0.7944651 2.3351303 #> [11,] -0.7159755 -0.5866324 -1.356006 -1.4607175 0.6556323 2.3483360 #> [12,] -0.5672176 -0.4406449 -1.244066 -1.2559695 0.7165309 2.4157542 #> [13,] -0.1923092 -1.0224714 -1.326155 -1.7118118 0.8587718 2.1582315 #> [14,] -0.1756478 -0.6359573 -1.707299 -1.6420577 0.8093034 1.9457274 #> [15,] -0.4190585 -0.7075154 -1.771406 -1.8251607 0.9713252 1.7398591 #> [16,] -0.3270183 -0.4841547 -1.922229 -1.7667612 1.1530528 1.8195644 #> [17,] -0.1863141 -0.7828057 -1.907007 -1.6056329 1.1875050 1.5518772 #> [18,] -0.1886166 -0.6783942 -2.083999 -1.4501996 1.1931161 1.2919463 #> [19,] -0.1262709 -0.8927984 -1.917406 -1.6354625 1.1955149 1.1246103 #> [20,] -0.3608228 -1.3621999 -1.573848 -1.2046999 1.5681857 0.8754813 #>             [,19]        [,20]     [,21]      [,22]      [,23]        [,24] #>  [1,] -0.55118380 -0.425328701 0.4516814 -2.9933303 -0.9503216 -0.151073674 #>  [2,] -0.43450775 -0.289080059 0.4122768 -2.8669013 -1.0572137 -0.003135684 #>  [3,] -0.56051193 -0.353771670 0.5686768 -2.4901410 -1.2917064  0.257830444 #>  [4,] -0.73783311 -0.098933524 0.6293979 -2.3332143 -1.2454282  0.379247658 #>  [5,] -0.27033244 -0.332631475 0.4704841 -2.3760179 -1.2520087  0.252615060 #>  [6,] -0.25047545 -0.458776061 0.7082533 -2.5951231 -1.4832185  0.549819456 #>  [7,] -0.32229504 -0.360906106 1.0123880 -2.5355796 -1.6923610  0.491462103 #>  [8,]  0.08278832 -0.557590477 1.0419604 -2.3891328 -1.7568016  0.704705076 #>  [9,]  0.05532541 -0.476053040 1.3638461 -1.8137123 -1.5857955  0.710657350 #> [10,]  0.27484791 -0.054118678 1.5729573 -1.5766800 -1.6117275  0.867268873 #> [11,]  0.27783194 -0.177310740 1.5500169 -1.0760047 -1.2384359  0.918065991 #> [12,]  0.43421771 -0.009230457 1.5487413 -0.8654517 -1.3794656  0.831136563 #> [13,] -0.07642256 -0.173618348 1.3826193 -0.3806268 -1.9761808  0.439051963 #> [14,]  0.29955160 -0.569501007 1.3580597 -0.4943380 -1.8760596  0.129737225 #> [15,]  0.26842563 -0.685894555 0.8970811 -0.3300841 -1.7699976 -0.073536354 #> [16,]  0.43411789 -0.466964350 1.2712139 -0.3566504 -1.8347955 -0.442159829 #> [17,]  0.52431586 -0.669824151 1.5620096 -0.2139077 -1.9497185 -0.337006167 #> [18,]  0.47960202 -0.252127266 1.4599935 -0.4572681 -1.9887320 -0.282438324 #> [19,]  0.76789279 -0.653712790 1.3760604 -0.5320232 -1.6613386 -0.232427655 #> [20,]  0.86931879 -0.582504571 1.5062911 -0.4367152 -1.5988195 -0.295779903 #>           [,25]       [,26]       [,27]      [,28]        [,29]       [,30] #>  [1,] 0.9328565  0.08206250  0.25109682  0.6751596  0.099152161  0.25340113 #>  [2,] 0.8095428  0.03362629  0.35860384  0.9610983  0.057838451  0.09658573 #>  [3,] 1.0121367 -0.11659526  0.46500164  0.6630514 -0.130095044  0.45070869 #>  [4,] 0.8851203 -0.76610089  0.17966703  0.7345299 -0.292312979  0.41427559 #>  [5,] 1.0178182 -0.62895806  0.51004280  0.8458231 -0.007133654  0.39738298 #>  [6,] 0.9055202 -0.43946723  0.47136899  0.8179853  0.521168038  0.31557967 #>  [7,] 0.8593557 -0.77456482  0.53632677  0.7002098  0.088248876  0.33712195 #>  [8,] 0.9071893 -0.83226100  0.29205119  0.6452564  0.032088290  0.30006624 #>  [9,] 0.4448451 -0.56034358  0.04907659  0.5998826 -0.259577515  0.05290350 #> [10,] 0.4999659 -0.37535135  0.02759618  0.5084083 -0.869044828  0.19489219 #> [11,] 0.4925437 -0.33678972 -0.62447628  0.4560287 -0.039215176  0.29052826 #> [12,] 0.4195630 -0.36800580 -0.51128060  0.3070534  0.041739945  0.06643105 #> [13,] 0.2630151 -0.08125086 -0.71190460  0.6354648  0.305148693 -0.07716949 #> [14,] 0.4193142  0.06887983 -0.50569198  0.4133992 -0.119242634 -0.39889028 #> [15,] 0.1921197  0.28470567 -0.29889509  0.1197219 -0.201496553 -0.68819452 #> [16,] 0.2990484  0.54523237 -0.30765032 -0.3063221 -0.309303121 -1.16629564 #> [17,] 0.5221280  0.63893769 -0.05712792 -0.4565073  0.029489394 -0.78128719 #> [18,] 0.4771010  0.72481241  0.27874735 -0.5959065  0.107882335 -0.73455360 #> [19,] 0.3595538  0.85574928  0.54051735 -0.7517268 -0.103102586 -1.02544425 #> [20,] 0.2236439  0.38058487  0.38184642 -0.7460103 -0.160997791 -0.80208879 #>            [,31]      [,32]       [,33]     [,34]        [,35]     [,36] #>  [1,] -0.6409004 -0.9382544 -0.17691832 0.7890101 -0.141905414 0.2259412 #>  [2,] -0.9320213 -0.8494038  0.01025672 0.6403356 -0.029135705 0.1376948 #>  [3,] -1.2264577 -1.1236343 -0.02180259 0.8311483 -0.149873609 0.1559866 #>  [4,] -1.2069176 -1.2471781  0.20403122 0.9044007 -0.414366274 0.1199896 #>  [5,] -1.3149831 -1.4836075  0.48301991 0.7692373 -0.216549855 0.2592195 #>  [6,] -1.5530967 -1.5879987  0.82047233 0.4928713 -0.180193880 0.3528099 #>  [7,] -1.7964106 -1.5442148  0.83628188 0.3729328 -0.042543304 0.5421284 #>  [8,] -1.4849732 -1.4323426  0.81560735 0.4382313  0.068805636 0.9105424 #>  [9,] -1.5188905 -1.4586809  0.97029764 0.4364473  0.003704712 1.2397522 #> [10,] -1.6782595 -1.4321341  0.72824708 0.2736568  0.134402415 1.8499526 #> [11,] -1.4518300 -1.2552992  0.81495471 0.6819775  0.419791915 1.8305584 #> [12,] -1.2480473 -1.2887677  0.92192416 0.6080377  0.356230643 1.4667849 #> [13,] -1.1536929 -1.3866216  0.86374187 0.5137318  0.631034426 1.4318445 #> [14,] -0.9571415 -1.2040254  1.26078891 1.1371693  0.971466254 1.3780418 #> [15,] -1.0597869 -1.0701224  1.04095400 0.9022826  0.569129946 1.1890722 #> [16,] -1.0392770 -0.9289421  1.25476441 0.5632425  0.335103487 1.1081778 #> [17,] -1.0594007 -0.5076300  1.14254395 0.7822292  0.072110175 1.1486151 #> [18,] -1.3303749 -0.5784404  1.21150247 0.5755717  0.047516533 1.2199904 #> [19,] -1.4839349 -0.6627751  1.21765898 0.6919206 -0.115912319 1.3140573 #> [20,] -1.3810329 -0.7013842  0.99941224 0.6917928 -0.107110979 1.2625701 #>             [,37]    [,38]     [,39]     [,40]         [,41]         [,42] #>  [1,]  0.17135815 3.096866 -1.412674 2.7307653 -0.2908134711 -0.9112133949 #>  [2,]  0.18726667 3.329188 -1.601552 2.3909401 -0.7701821185 -0.6866494877 #>  [3,]  0.09335215 3.458682 -1.971579 2.1424278 -0.0414506921 -0.7209191855 #>  [4,] -0.02316023 3.361947 -2.077156 2.0907614 -0.0009125574 -0.2980019978 #>  [5,] -0.39653195 3.107724 -2.122738 2.3384732  0.3163333770  0.0968595190 #>  [6,] -0.36744944 2.736855 -1.805748 2.3520814  0.3816060774 -0.1262941771 #>  [7,] -0.18488084 2.486158 -1.923704 2.4663147  0.5315672545 -0.2169725617 #>  [8,] -0.40002678 2.325210 -1.679050 2.3384125  0.7900617034  0.0983474531 #>  [9,] -0.44356408 2.383370 -1.646237 2.7906954  0.7642228521  0.2923554376 #> [10,] -0.73067924 2.506592 -1.145819 2.5043555  0.7951186496  0.4006520598 #> [11,] -0.65582184 2.465730 -1.192905 2.2706822  0.5312425583  0.1269044485 #> [12,] -0.71086897 2.302724 -1.620453 2.6775414  0.3450855089  0.3008166760 #> [13,] -0.54289615 2.273675 -1.759228 2.1755153  0.7821359674  0.0248113730 #> [14,] -0.53239893 2.343392 -1.814179 2.2991567  0.8496323419  0.0717830113 #> [15,] -0.54937156 2.590222 -1.590265 2.0136447  0.6412090339  0.4408651406 #> [16,] -0.24700185 2.559818 -1.665092 1.5400637  0.6208660935  0.1980330015 #> [17,] -0.59380960 2.891467 -1.274962 1.3044462  0.2229457506  0.0583855726 #> [18,] -0.64516910 3.117217 -1.650976 1.1354095  0.6206418828  0.4159069537 #> [19,] -0.77477156 3.109672 -1.689753 1.1663034  0.3985892967  0.0009400049 #> [20,] -0.43509552 3.760543 -1.989486 0.9722172  0.2032282929 -0.1312131267 #>              [,43]       [,44]     [,45]       [,46]       [,47]       [,48] #>  [1,] -0.277081775 -0.55706949 0.5968830  0.27320805  0.17241834  0.50286678 #>  [2,] -0.130282099 -0.73391629 0.3371929  0.51078299  0.39651999  0.68997129 #>  [3,] -0.221163486 -0.87925063 0.2309796  0.25984008  0.35566623  0.99476441 #>  [4,] -0.591722871 -0.84962459 0.4945005  0.14791507  0.44623164  0.67804056 #>  [5,] -0.953579804 -0.60756020 0.2225734  0.44583853  0.42383557  0.71757361 #>  [6,] -0.985669500 -0.68806565 0.3408935  0.26427313  0.37217548  0.51273456 #>  [7,] -0.600160266 -0.99058141 0.4412482  0.59784479  0.50791769 -0.06744692 #>  [8,] -0.679601352 -0.79407636 0.6439434  0.39865420  0.30315821  0.17195020 #>  [9,] -0.404798538 -0.91330943 0.4576648  0.30261570 -0.40683470  0.25923935 #> [10,] -0.167344414 -0.64183764 0.6266882  0.01362827 -0.05670481  0.11107046 #> [11,] -0.167814436 -0.59699477 0.7797732  0.10868030 -0.17173082  0.28104348 #> [12,]  0.004659779 -0.71107253 0.5684997 -0.04649596 -0.06210128  0.51499771 #> [13,]  0.149732090 -0.52163757 0.3776483  0.19446931  0.05614228  0.55102600 #> [14,]  0.324235028 -0.54211909 0.2984447  0.02215651  0.17085236  0.75392017 #> [15,]  0.845940031 -0.62890490 0.5033725  0.01671650  0.33600270  0.45750917 #> [16,]  0.607688068 -0.29848853 0.4642212  0.08697391  0.11123651  0.31604983 #> [17,]  0.499188044 -0.11815853 0.5593054  0.20723351 -0.30772088  0.33931722 #> [18,]  0.354135674  0.04064453 0.6524042  0.52232318 -0.47484111  0.28187454 #> [19,]  0.210727530 -0.08259839 0.7130559  0.66301485 -0.60747614  0.24073308 #> [20,]  0.190735226 -0.03520008 0.6418358  0.45492484 -0.51347847  0.14783411 #>             [,49]        [,50]       [,51]     [,52]       [,53]        [,54] #>  [1,] -0.91519243 -0.757669920  0.08499134 0.4918504 -0.15082485 -0.096640237 #>  [2,] -0.84591216 -0.399412139  0.23931321 0.4345340 -0.56384370  0.213352317 #>  [3,] -0.65312065 -0.569277915  0.28882461 0.4651539 -0.45982905 -0.001617437 #>  [4,] -0.47411727 -0.330799059 -0.06637261 0.6572573 -0.71262620  0.022469064 #>  [5,] -0.37838545 -0.350394972  0.15131069 0.7752245 -0.60501990 -0.116509282 #>  [6,] -0.28009859 -0.080742502  0.34231447 0.5259537 -0.57298825  0.513284550 #>  [7,] -0.30406770 -0.187194633  0.33240097 0.3934549 -0.35061194  0.672334767 #>  [8,] -0.75042244  0.009378503  0.46267154 0.3762442 -0.62140191  0.697671507 #>  [9,] -0.81931054  0.359771443  0.25084764 0.3211836 -0.74713885  0.918036971 #> [10,] -0.80316002  0.620005291  0.11494109 0.3763476 -0.62440825  0.942825774 #> [11,] -0.65399111  0.856763324 -0.02655572 0.3873661  0.06393116  0.807608303 #> [12,] -0.33524815  1.091449108 -0.07781599 0.2469419  0.18936077  0.675578762 #> [13,] -0.12269060  1.006605113 -0.48611953 0.5276764  0.30583462  0.698030390 #> [14,]  0.10691649  1.105372753 -0.64975177 0.3366658  0.25627837  0.526273387 #> [15,] -0.04364997  1.392745062 -0.57897983 0.4867832  0.37073272  0.411539724 #> [16,] -0.35006616  0.985392674 -0.34214910 0.3244213  0.44123138  0.537029675 #> [17,] -0.68072660  1.223447279 -0.59597557 0.3779084  0.32808463  0.506889643 #> [18,] -0.66020442  1.774191550 -0.84738876 0.3778904  0.43469461  0.596426227 #> [19,] -0.18006201  1.814653307 -0.86419695 0.2909290  0.33229849  0.342729512 #> [20,] -0.07530114  1.713554436 -0.76075195 0.3352791  0.46521877  0.225781785 #>             [,55]       [,56]       [,57]     [,58]     [,59]       [,60] #>  [1,]  0.40443251  1.24855873 -0.22040783 0.9843567 1.1569483  0.78338734 #>  [2,]  0.36242806  1.19208631  0.02195456 0.9283318 1.1980986  0.55738634 #>  [3,] -0.03885536  1.28182908  0.04464809 1.0303921 1.0169902  0.50693903 #>  [4,] -0.07326117  1.62881426  0.21310102 1.0755784 1.1038195  0.27140869 #>  [5,] -0.23030531  1.30230497  0.28276754 0.8821964 1.3357129  0.33143595 #>  [6,] -0.12989774  1.47198091 -0.18809641 0.7010098 1.1475153  0.27802676 #>  [7,] -0.27296672  1.25782123  0.14227892 1.1010229 1.3812324  0.27972175 #>  [8,]  0.03429403  1.43391802 -0.01783743 0.6664035 1.2259691  0.51180220 #>  [9,]  0.14926390  0.89593016 -0.11644279 0.6177740 1.5044631  0.53200489 #> [10,] -0.07621982  0.55933724  0.07528047 0.8034329 1.1793972  0.26145474 #> [11,] -0.22790601  0.18116268  0.29235346 0.8755032 0.9944753  0.62076056 #> [12,] -0.19452291  0.10824775  0.40105302 1.2853841 0.9117086  0.14853158 #> [13,] -0.08588274  0.30105802  0.46850599 1.4658371 1.0023539  0.02068060 #> [14,]  0.10775671  0.35683772  0.78912281 1.3587727 1.0588225 -0.17664500 #> [15,]  0.35154416 -0.09070746  0.63061618 1.3324513 0.9733909  0.02793659 #> [16,]  0.45708431 -0.56649314  0.40018718 0.8935404 1.1092950 -0.14469587 #> [17,]  0.09553160 -0.52705770 -0.07229008 1.2313274 1.2912573 -0.14745795 #> [18,] -0.26858566 -0.67244057 -0.18860260 0.8069386 1.6034537 -0.21882945 #> [19,] -0.17306269 -0.78677725 -0.13647959 0.8736555 1.9617281 -0.49087756 #> [20,]  0.15895249 -1.00489796  0.09251762 0.9586088 1.6848089 -0.50572624 #>             [,61]      [,62]       [,63]       [,64]       [,65]      [,66] #>  [1,] -0.33807041 -1.8375987 -1.54416391  0.64039188  0.40389507 -0.7540404 #>  [2,] -0.32365560 -1.5403860 -1.68101675  0.39371595  0.05001218 -1.0981807 #>  [3,] -0.26228860 -1.5837628 -0.90354950  0.50573566 -0.40976192 -0.9229152 #>  [4,] -0.48564741 -1.4570095 -0.84104173  0.52827828 -0.54949299 -1.2433172 #>  [5,]  0.05836092 -1.5206678 -0.63279044  0.62957494 -0.65830874 -1.5383402 #>  [6,] -0.02189065 -1.3429189 -0.78249013  0.61122764 -0.46791117 -1.5718937 #>  [7,]  0.03322431 -1.1748343 -0.99649101  0.87271272  0.13763454 -1.5982040 #>  [8,] -0.07866166 -1.3380817 -1.15245358  0.65926166  0.59830695 -1.1017473 #>  [9,] -0.31878764 -1.4164180 -1.14140621  0.44487091  0.27553074 -0.9251270 #> [10,] -0.15017248 -1.3303858 -1.53140333  0.32095325  0.05257184 -0.8760375 #> [11,] -0.11690944 -1.0719526 -1.64850981  0.46576606 -0.16874109 -1.0900262 #> [12,] -0.46389495 -1.3843819 -1.55822545  0.42074725 -0.27547222 -0.9051979 #> [13,] -0.06815972 -1.3485283 -1.51359641  0.12112261 -0.37884601 -0.8470940 #> [14,] -0.17087626 -1.1817846 -1.22908153 -0.14981318  0.17532786 -0.8496199 #> [15,] -0.27957702 -1.2574447 -0.80813525  0.08214037  0.05986502 -1.2517929 #> [16,] -0.33156269 -1.1564996 -0.55053726  0.34374431 -0.14055509 -1.1289286 #> [17,] -0.35505194 -1.1548749 -0.10726038 -0.05740257 -0.01723131 -1.1836405 #> [18,] -0.65588091 -1.0045624  0.02415054 -0.11786633  0.40356171 -1.0350306 #> [19,] -0.26058106 -0.9120893 -0.19153878 -0.41968078  0.31145164 -1.0759237 #> [20,] -0.20703097 -1.0029406 -0.15565758 -0.65189951  0.85277669 -0.9165201 #>           [,67]       [,68]        [,69]      [,70]     [,71]      [,72] #>  [1,] -2.070389 -0.05642675 -0.369379599 0.46170152 0.1726281 -1.1817473 #>  [2,] -1.938414 -0.34420643 -0.605598953 0.17907835 0.4958369 -0.9672904 #>  [3,] -2.023869 -0.35489767 -0.785458713 0.07718012 0.6716979 -1.1680551 #>  [4,] -1.939624 -0.48779213 -1.037108761 0.18512314 0.5945014 -1.8737376 #>  [5,] -2.047828 -0.43812990 -0.984195385 0.18487573 0.5216327 -1.6307914 #>  [6,] -2.254652 -0.36654490 -0.750376122 0.72818091 0.4927284 -2.2435290 #>  [7,] -2.204784 -0.57394142 -0.684691399 0.59886770 0.5403018 -2.1890991 #>  [8,] -2.331122 -0.46558775 -0.887766792 0.56012698 0.5468592 -2.1535112 #>  [9,] -2.277554 -0.48086301 -0.875792867 0.58495593 0.6865114 -2.2048325 #> [10,] -2.421363 -0.35801238 -0.729651258 0.56194244 0.7447963 -2.1699728 #> [11,] -2.742628 -0.70800148 -0.676895558 0.35260821 0.5596909 -2.2917160 #> [12,] -2.645686 -0.89658981 -0.176687748 0.43111016 0.5811312 -2.0042145 #> [13,] -2.337460 -0.84424698 -0.116304996 0.86005735 0.6996533 -2.0303939 #> [14,] -2.478197 -0.77715031 -0.091481396 1.03826320 0.9854903 -1.9983085 #> [15,] -2.624204 -1.12471881  0.007386738 1.13282946 0.7303153 -2.1823282 #> [16,] -2.371335 -0.93964877  0.079295566 1.29272588 0.8876685 -2.1836975 #> [17,] -2.381396 -1.47460547  0.199405347 1.34064224 0.8216835 -1.8516484 #> [18,] -2.375006 -1.42635887  0.391968614 1.05828750 0.7852700 -2.0756600 #> [19,] -2.246230 -1.31620256  0.295712030 1.11206437 0.8132485 -2.0909678 #> [20,] -2.664193 -1.28197563  0.167499093 1.31575708 0.7382235 -1.6860151 #>             [,73]       [,74]    [,75]      [,76]       [,77]         [,78] #>  [1,]  0.54614088  0.08550217 1.422733 -0.1756903  0.20265172  0.6506723895 #>  [2,]  0.34136863 -0.05166503 1.832831 -0.2377367  0.11029767  0.4140564547 #>  [3,]  0.50321042 -0.04050870 2.004146 -0.1634145 -0.05157329  0.2529491028 #>  [4,]  0.38680287  0.11081445 2.128810 -0.2063773  0.59142067  0.4636093307 #>  [5,]  0.10487781 -0.22255249 1.950527 -0.6467837  0.32790978  0.7114271382 #>  [6,]  0.28156413 -0.30798790 1.776341 -0.2888057  0.38585943  0.6285335435 #>  [7,]  0.20803460 -0.14541026 1.627306 -0.4348698 -0.10717463  0.9162638577 #>  [8,]  0.48807786 -0.19732626 2.034011 -0.5393087 -0.12170267  0.9906058127 #>  [9,]  0.65030176 -0.35477711 1.697704 -0.4927133 -0.41262529  1.1214505042 #> [10,]  0.12745394 -0.26317133 1.631550 -0.2115046 -0.17024326  1.0328047458 #> [11,] -0.02890742 -0.53420355 1.985230 -0.1630109 -0.28408586  0.7167224652 #> [12,]  0.46949879 -0.47465871 2.252917  0.1158292 -0.23524712  0.5446500807 #> [13,]  0.41673436 -0.28035098 1.988518  0.4989597 -0.14643034  0.4072072064 #> [14,] -0.08156713 -0.45665688 1.705949  0.6017411  0.13916252  0.0302320339 #> [15,]  0.08241955 -0.13702149 1.683989  0.7358839  0.54644077  0.1040647986 #> [16,] -0.03456636 -0.24130375 2.131672  0.5732860  0.91021767 -0.0008513364 #> [17,] -0.11784720 -0.22100096 1.914319  0.4688135  0.79232299  0.2746356594 #> [18,] -0.14937024 -0.03531542 2.028319  0.3153423  0.52764871 -0.1226799333 #> [19,] -0.34340127 -0.23424177 1.624832  0.4929314  0.43033721  0.0995186996 #> [20,]  0.13176047 -0.25914545 1.544638  0.2032183  0.64620522  0.1311889174 #>          [,79]       [,80]      [,81]       [,82]       [,83]       [,84] #>  [1,] 1.300332  0.01950609 -1.0567314  0.23687180 -0.69937561  0.37685100 #>  [2,] 1.557628  0.08007311 -1.1706577  0.01756485 -0.26824858  0.33276439 #>  [3,] 1.574703  0.30059750 -1.0676251 -0.25916735 -0.06915989  0.12641425 #>  [4,] 1.507914  0.42142526 -0.7878360 -0.10494804 -0.14076739  0.09420623 #>  [5,] 1.485669  0.01453368 -0.7940061 -0.02567259 -0.30844042  0.34107466 #>  [6,] 1.672838 -0.03262150 -0.5443510 -0.25774568 -0.46184323  0.06105325 #>  [7,] 2.262023  0.10278096 -0.5864015 -0.62827518 -0.50410505 -0.30205694 #>  [8,] 2.235135  0.21553450 -0.9893453 -0.52861003 -0.06044380 -0.58313415 #>  [9,] 2.250143  0.16758974 -0.8127861 -0.60254187 -0.05466361 -0.59660376 #> [10,] 2.067759  0.20167454 -1.0577910 -0.60911190 -0.28294364 -0.25498249 #> [11,] 2.181157  0.57930270 -1.1401955 -0.33296229 -0.64016062 -0.46429230 #> [12,] 2.117463  0.25179495 -1.4447907 -0.18547796 -0.89837311 -0.43448202 #> [13,] 2.150366  0.34130518 -1.5562458 -0.27502770 -0.97253801 -0.39253610 #> [14,] 2.100507  0.27692388 -1.3464219 -0.54542275 -1.11139003 -0.04410195 #> [15,] 1.878564  0.09583270 -1.5109400 -0.73147835 -0.89834410 -0.06277035 #> [16,] 2.407771  0.12558568 -1.3051972 -0.62960833 -1.16482646  0.03358607 #> [17,] 2.875853  0.30320559 -1.3106485 -0.87449165 -1.17564326  0.01594777 #> [18,] 2.287235  0.69154786 -1.2405056 -0.39674986 -1.05366013  0.19278650 #> [19,] 1.952223  1.18005076 -0.9308188  0.06928559 -0.84108354 -0.42602900 #> [20,] 1.553141  1.05578566 -0.7817590  0.01022067 -1.22100891 -0.33099004 #>             [,85]        [,86]      [,87]       [,88]       [,89]        [,90] #>  [1,]  0.63518115  0.918964724 0.06121127  0.44268801 -0.95095363 -0.339217843 #>  [2,]  0.44173917  1.244582651 0.03241674  0.55447575 -1.10713189 -0.285748622 #>  [3,]  0.05293726  1.134261066 0.13017630  0.12247699 -1.15396554  0.006609605 #>  [4,]  0.06840277  1.004671668 0.10223842  0.04825986 -0.73559768  0.024031685 #>  [5,] -0.05514166  0.734599163 0.27985453  0.33936736 -0.33885991  0.282148795 #>  [6,] -0.09166027  0.682752331 0.52542681  0.52667009 -0.40789254  0.548200608 #>  [7,]  0.23405507  0.712617377 0.47081327  0.42530519 -0.13832518  0.507168794 #>  [8,]  0.28854017  0.596805808 0.42320279  0.62352782 -0.03634947  0.327216668 #>  [9,]  0.53112923  0.483991181 0.42518967  0.98784724  0.08806620  0.719055050 #> [10,]  0.52186949  0.661070590 0.94294893  0.70918678 -0.14501903  0.794389509 #> [11,]  0.55977625  0.409586328 1.13776207  0.77030969 -0.02318283  0.896868825 #> [12,]  0.51180108  0.246282435 1.35747930  0.84623388 -0.20335842  0.698871260 #> [13,]  0.45431491  0.105902952 1.25627905  1.22217357 -0.50236075  0.543529484 #> [14,]  0.34277237 -0.011435912 1.15834519  1.29450854 -0.54886492  0.610019452 #> [15,]  0.59237587 -0.100496025 1.01346829  1.39444954  0.01499886  0.673986551 #> [16,]  0.35917799  0.046530155 1.18808028  1.03179540  0.24620577  0.319412250 #> [17,]  0.19784136 -0.005740842 1.04930427  0.52765753 -0.01204258  0.363218700 #> [18,]  0.48167483 -0.175671834 0.91784636  0.63365779 -0.55485833  0.335778235 #> [19,]  0.67960020 -0.058914992 1.11570667  0.16409266 -0.63239417  0.288034629 #> [20,]  0.82198159  0.155273145 1.20668491 -0.11081801 -0.51033329  0.702141953 #>             [,91]      [,92]      [,93]     [,94]       [,95]      [,96] #>  [1,] -0.30787849 0.75582493 -1.6777120 1.0179188  0.36392001  1.4476210 #>  [2,] -0.18044828 0.70494095 -1.0149232 0.7027165  0.62039980  1.4657944 #>  [3,] -0.06137722 0.96529324 -1.0091173 0.6516534  0.61480068  1.3960664 #>  [4,] -0.19933699 0.60920400 -0.7591715 0.4176057  0.50076951  1.2384072 #>  [5,] -0.15881094 0.59751753 -0.7262005 0.3517511  0.06348853  0.9518691 #>  [6,]  0.01898808 0.52042403 -0.7593696 0.2894398  0.06047709  0.7121542 #>  [7,]  0.12963071 0.47562033 -0.4864292 0.2411358 -0.48414203  0.6738553 #>  [8,]  0.05294410 0.47463099 -0.3327092 0.2932493 -0.58145915  0.3405317 #>  [9,] -0.35501507 0.27547587 -0.2675881 0.2075950 -0.31786459  0.2553775 #> [10,] -0.45140418 0.48835200 -0.3134954 0.4905104 -0.46990044  0.1550850 #> [11,] -0.54757372 0.30716561 -0.2878075 0.3022053 -0.46804110  0.2773639 #> [12,] -0.56809865 0.05563352 -0.5428380 0.4681912 -0.71771842  0.3666801 #> [13,] -0.65993416 0.22535801 -0.2035680 0.8029861 -0.79029761  0.2190196 #> [14,] -0.85796708 0.32839911 -0.1580286 0.3945597 -1.09583272  0.1948385 #> [15,] -0.67170835 0.70044889 -0.2510970 0.4799012 -1.35099931  0.3094221 #> [16,] -1.28233565 0.55137533 -0.2346081 0.8484862 -1.30102064  0.1577743 #> [17,] -1.11752169 0.55387047 -0.4025250 0.7532271 -1.39828827 -0.1986504 #> [18,] -1.08502322 0.31143878 -0.2599665 1.0436987 -1.56552070 -0.2553832 #> [19,] -1.16189441 0.24012715 -0.4931641 1.3484624 -1.27514158  0.2076631 #> [20,] -1.10990683 0.08402253 -0.1782093 1.5279455 -1.00590232 -0.2661145 #>           [,97]       [,98]       [,99]     [,100] #>  [1,] -1.044228 -1.57111647  1.13223180 -1.3332362 #>  [2,] -1.145621 -1.64356828  0.76222985 -0.8850852 #>  [3,] -1.432228 -1.15545291  0.81655668 -0.7665668 #>  [4,] -1.532383 -1.38395344  1.00935001 -1.0571420 #>  [5,] -1.498733 -1.44154621  1.14887403 -1.2156422 #>  [6,] -1.697358 -1.29306731  0.85555878 -1.0571104 #>  [7,] -1.432058 -1.33658747  0.69319047 -1.0790160 #>  [8,] -1.780700 -1.01272278  0.66839617 -1.2088935 #>  [9,] -1.433329 -1.03974564  0.90501735 -1.2476013 #> [10,] -1.490580 -1.35426166  0.91190573 -1.5681769 #> [11,] -1.744447 -1.59171240  0.79582436 -1.5883638 #> [12,] -1.843150 -1.08898818  0.60010901 -1.5169111 #> [13,] -1.740412 -1.04858320  0.67982283 -1.6496202 #> [14,] -1.955337 -0.90622043  0.26227617 -1.6637511 #> [15,] -2.399169 -0.58377661  0.24712804 -1.4653678 #> [16,] -2.193058 -0.54269071  0.39602937 -1.3036369 #> [17,] -1.984150 -0.35838913  0.26137712 -1.5672214 #> [18,] -1.948443 -0.31466161  0.08030743 -1.7366536 #> [19,] -2.116894 -0.05748610  0.04833500 -1.3818083 #> [20,] -1.907995 -0.08434869 -0.05545921 -1.2346966 #>  #> $name #> [1] \"data\" #>  #> $labelsintratime #>  [1] 0.00000000 0.05263158 0.10526316 0.15789474 0.21052632 0.26315789 #>  [7] 0.31578947 0.36842105 0.42105263 0.47368421 0.52631579 0.57894737 #> [13] 0.63157895 0.68421053 0.73684211 0.78947368 0.84210526 0.89473684 #> [19] 0.94736842 1.00000000 #>  #> attr(,\"class\") #> [1] \"dfts\""},{"path":"https://jrvanderdoes.github.io/fChange/reference/impute.html","id":null,"dir":"Reference","previous_headings":"","what":"Imputation — impute","title":"Imputation — impute","text":"Impute missing values functional data.","code":""},{"path":"https://jrvanderdoes.github.io/fChange/reference/impute.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Imputation — impute","text":"","code":"impute(   X,   method = c(\"zero\", \"mean_obs\", \"median_obs\", \"mean_data\", \"median_data\", \"linear\",     \"functional\"),   obs_share_data = FALSE )"},{"path":"https://jrvanderdoes.github.io/fChange/reference/impute.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Imputation — impute","text":"X dfts object data can automatically converted format. See dfts(). method String indicate method imputation. zero: Fill missing 0 mean_obs: Fill missing mean observation median_obs: Fill missing median observation mean_data: Fill missing mean time data median_data: Fill missing median time data linear: Linearly interpolate missing data obs_share_data Boolean linear interpolation indicates data shared across observations. example, end observation related start observation +1. Default FALSE, suggests independence. true, distance end start observations taken mean intratime.","code":""},{"path":"https://jrvanderdoes.github.io/fChange/reference/impute.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Imputation — impute","text":"dfts object interpolated missing data","code":""},{"path":"https://jrvanderdoes.github.io/fChange/reference/impute.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Imputation — impute","text":"","code":"temp <- data.frame(c(NA,NA,3:9,NA),                    c(NA,stats::rnorm(2),NA, stats::rnorm(6)),                    stats::rnorm(10),                    c(stats::rnorm(4),rep(NA,3), stats::rnorm(3)),                    rep(NA,10),                    c(stats::rnorm(1), rep(NA,9)),                    c(stats::rnorm(9),NA),                    stats::rnorm(10),                    stats::rnorm(10),                    c(NA,NA,3:9, NA)) impute(temp, method='mean_obs') #> $data #>       [,1]         [,2]        [,3]       [,4] [,5]       [,6]       [,7] #>  [1,]    6  0.307985975  3.51781068 -0.4733455   NA 0.07974821 -1.2884072 #>  [2,]    6  0.324331233  1.15199039  0.4501548   NA 0.07974821  0.4744997 #>  [3,]    3  0.628674056  0.38842370  0.5037310   NA 0.07974821  1.1574781 #>  [4,]    4  0.307985975 -0.32097173 -0.1552386   NA 0.07974821  0.1428439 #>  [5,]    5  0.301473839 -2.39135311 -0.2271112   NA 0.07974821  0.1008368 #>  [6,]    6  1.790640499  0.89829813 -0.2271112   NA 0.07974821  0.8609186 #>  [7,]    7 -0.005856082 -0.11913019 -0.2271112   NA 0.07974821  2.5377739 #>  [8,]    8  0.530457470 -1.81122400 -0.4561464   NA 0.07974821  0.4499884 #>  [9,]    9 -1.112591695  0.35752554 -1.0144646   NA 0.07974821  1.9895189 #> [10,]    6  0.006758480 -0.09005252 -0.4444690   NA 0.07974821  0.7139390 #>             [,8]       [,9] [,10] #>  [1,]  0.4406636  1.1778013     6 #>  [2,] -1.0379310  1.9360774     6 #>  [3,]  0.1665210 -0.4595392     3 #>  [4,] -0.6092184 -0.1425464     4 #>  [5,]  0.5813857  0.4308495     5 #>  [6,] -0.2896958 -2.0217243     6 #>  [7,] -1.4210328  0.4704179     7 #>  [8,] -0.6940940  0.3414290     8 #>  [9,] -0.4123855 -1.0954659     9 #> [10,] -0.2301435  1.4910926     6 #>  #> $name #> [1] \"X\" #>  #> $labels #>  [1] \"c.NA..NA..3.9..NA.\"                              #>  [2] \"c.NA..stats..rnorm.2...NA..stats..rnorm.6..\"     #>  [3] \"stats..rnorm.10.\"                                #>  [4] \"c.stats..rnorm.4...rep.NA..3...stats..rnorm.3..\" #>  [5] \"rep.NA..10.\"                                     #>  [6] \"c.stats..rnorm.1...rep.NA..9..\"                  #>  [7] \"c.stats..rnorm.9...NA.\"                          #>  [8] \"stats..rnorm.10..1\"                              #>  [9] \"stats..rnorm.10..2\"                              #> [10] \"c.NA..NA..3.9..NA..1\"                            #>  #> $intratime #>  [1] 0.0000000 0.1111111 0.2222222 0.3333333 0.4444444 0.5555556 0.6666667 #>  [8] 0.7777778 0.8888889 1.0000000 #>  #> attr(,\"class\") #> [1] \"dfts\" impute(temp, method='linear', obs_share_data=TRUE) #> $data #>       [,1]         [,2]        [,3]       [,4]        [,5]        [,6] #>  [1,]    1  5.162165617  3.51781068 -0.4733455 -0.39681293  0.07974821 #>  [2,]    2  0.324331233  1.15199039  0.4501548 -0.34915681 -0.05706733 #>  [3,]    3  0.628674056  0.38842370  0.5037310 -0.30150070 -0.19388286 #>  [4,]    4  0.465073948 -0.32097173 -0.1552386 -0.25384458 -0.33069840 #>  [5,]    5  0.301473839 -2.39135311 -0.2304656 -0.20618847 -0.46751394 #>  [6,]    6  1.790640499  0.89829813 -0.3056925 -0.15853236 -0.60432948 #>  [7,]    7 -0.005856082 -0.11913019 -0.3809195 -0.11087624 -0.74114502 #>  [8,]    8  0.530457470 -1.81122400 -0.4561464 -0.06322013 -0.87796055 #>  [9,]    9 -1.112591695  0.35752554 -1.0144646 -0.01556402 -1.01477609 #> [10,]   10  0.006758480 -0.09005252 -0.4444690  0.03209210 -1.15159163 #>             [,7]       [,8]       [,9]    [,10] #>  [1,] -1.2884072  0.4406636  1.1778013 1.994062 #>  [2,]  0.4744997 -1.0379310  1.9360774 2.497031 #>  [3,]  1.1574781  0.1665210 -0.4595392 3.000000 #>  [4,]  0.1428439 -0.6092184 -0.1425464 4.000000 #>  [5,]  0.1008368  0.5813857  0.4308495 5.000000 #>  [6,]  0.8609186 -0.2896958 -2.0217243 6.000000 #>  [7,]  2.5377739 -1.4210328  0.4704179 7.000000 #>  [8,]  0.4499884 -0.6940940  0.3414290 8.000000 #>  [9,]  1.9895189 -0.4123855 -1.0954659 9.000000 #> [10,]  1.2150913 -0.2301435  1.4910926 9.875742 #>  #> $name #> [1] \"X\" #>  #> $labels #>  [1] \"c.NA..NA..3.9..NA.\"                              #>  [2] \"c.NA..stats..rnorm.2...NA..stats..rnorm.6..\"     #>  [3] \"stats..rnorm.10.\"                                #>  [4] \"c.stats..rnorm.4...rep.NA..3...stats..rnorm.3..\" #>  [5] \"rep.NA..10.\"                                     #>  [6] \"c.stats..rnorm.1...rep.NA..9..\"                  #>  [7] \"c.stats..rnorm.9...NA.\"                          #>  [8] \"stats..rnorm.10..1\"                              #>  [9] \"stats..rnorm.10..2\"                              #> [10] \"c.NA..NA..3.9..NA..1\"                            #>  #> $intratime #>  [1] 0.0000000 0.1111111 0.2222222 0.3333333 0.4444444 0.5555556 0.6666667 #>  [8] 0.7777778 0.8888889 1.0000000 #>  #> attr(,\"class\") #> [1] \"dfts\""},{"path":"https://jrvanderdoes.github.io/fChange/reference/kernels.html","id":null,"dir":"Reference","previous_headings":"","what":"Kernel Functions — kernels","title":"Kernel Functions — kernels","text":"assortment (vectorized) kernel functions located package.","code":""},{"path":"https://jrvanderdoes.github.io/fChange/reference/kernels.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Kernel Functions — kernels","text":"","code":"truncated_kernel(x)  bartlett_kernel(x)  parzen_kernel(x)  tukey_hanning_kernel(x)  quadratic_spectral_kernel(x)  daniell_kernel(x)  flat_top_kernel(x)"},{"path":"https://jrvanderdoes.github.io/fChange/reference/kernels.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Kernel Functions — kernels","text":"x numeric value evaluate kernel. often indicates current lag divided window.","code":""},{"path":"https://jrvanderdoes.github.io/fChange/reference/kernels.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Kernel Functions — kernels","text":"Values given lag kernel","code":""},{"path":"https://jrvanderdoes.github.io/fChange/reference/kernels.html","id":"references","dir":"Reference","previous_headings":"","what":"References","title":"Kernel Functions — kernels","text":"Horvath, L., & Rice, G. (2024). Change Point Analysis Time Series (1st ed. 2024.). Springer Nature Switzerland. https://doi.org/10.1007/978-3-031-51609-2 L. Horvath, P. Kokoszka, G. Rice (2014) \"Testing stationarity functional time series\", Journal Econometrics, 179(1), 66-82. Politis, D. N. (2003). Adaptive bandwidth choice. Journal Nonparametric Statistics, 15(4-5), 517-533. https://doi.org/10.1080/10485250310001604659 Politis, D. N. (2011). HIGHER-ORDER ACCURATE, POSITIVE SEMIDEFINITE ESTIMATION LARGE-SAMPLE COVARIANCE SPECTRAL DENSITY MATRICES. Econometric Theory, 27(4), 703-744. http://www.jstor.org/stable/27975501","code":""},{"path":"https://jrvanderdoes.github.io/fChange/reference/kernels.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Kernel Functions — kernels","text":"","code":"truncated_kernel(-20:20/15) #>  [1] 0 0 0 0 0 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 0 0 #> [39] 0 0 0 bartlett_kernel(-20:20/15) #>  [1] 0.00000000 0.00000000 0.00000000 0.00000000 0.00000000 0.00000000 #>  [7] 0.06666667 0.13333333 0.20000000 0.26666667 0.33333333 0.40000000 #> [13] 0.46666667 0.53333333 0.60000000 0.66666667 0.73333333 0.80000000 #> [19] 0.86666667 0.93333333 1.00000000 0.93333333 0.86666667 0.80000000 #> [25] 0.73333333 0.66666667 0.60000000 0.53333333 0.46666667 0.40000000 #> [31] 0.33333333 0.26666667 0.20000000 0.13333333 0.06666667 0.00000000 #> [37] 0.00000000 0.00000000 0.00000000 0.00000000 0.00000000 parzen_kernel(-20:20/15) #>  [1] 0.0000000000 0.0000000000 0.0000000000 0.0000000000 0.0000000000 #>  [6] 0.0000000000 0.0005925926 0.0047407407 0.0160000000 0.0379259259 #> [11] 0.0740740741 0.1280000000 0.2032592593 0.3031111111 0.4240000000 #> [16] 0.5555555556 0.6871111111 0.8080000000 0.9075555556 0.9751111111 #> [21] 1.0000000000 0.9751111111 0.9075555556 0.8080000000 0.6871111111 #> [26] 0.5555555556 0.4240000000 0.3031111111 0.2032592593 0.1280000000 #> [31] 0.0740740741 0.0379259259 0.0160000000 0.0047407407 0.0005925926 #> [36] 0.0000000000 0.0000000000 0.0000000000 0.0000000000 0.0000000000 #> [41] 0.0000000000 tukey_hanning_kernel(-20:20/15) #>  [1] 0.00000000 0.00000000 0.00000000 0.00000000 0.00000000 0.00000000 #>  [7] 0.01092620 0.04322727 0.09549150 0.16543470 0.25000000 0.34549150 #> [13] 0.44773577 0.55226423 0.65450850 0.75000000 0.83456530 0.90450850 #> [19] 0.95677273 0.98907380 1.00000000 0.98907380 0.95677273 0.90450850 #> [25] 0.83456530 0.75000000 0.65450850 0.55226423 0.44773577 0.34549150 #> [31] 0.25000000 0.16543470 0.09549150 0.04322727 0.01092620 0.00000000 #> [37] 0.00000000 0.00000000 0.00000000 0.00000000 0.00000000 quadratic_spectral_kernel(-20:20/15) #>  [1] -0.059156968 -0.035757776 -0.004361244  0.035169330  0.082709303 #>  [6]  0.137860582  0.199949461  0.268034899  0.340927244  0.417217036 #> [11]  0.495313030  0.573488238  0.649932362  0.722808762  0.790313821 #> [16]  0.850736481  0.902515643  0.944293220  0.974960742  0.993697686 #> [21]  1.000000000  0.993697686  0.974960742  0.944293220  0.902515643 #> [26]  0.850736481  0.790313821  0.722808762  0.649932362  0.573488238 #> [31]  0.495313030  0.417217036  0.340927244  0.268034899  0.199949461 #> [36]  0.137860582  0.082709303  0.035169330 -0.004361244 -0.035757776 #> [41] -0.059156968 daniell_kernel(-20:20/15) #>  [1] 0.000000000 0.000000000 0.000000000 0.000000000 0.000000000 0.000000000 #>  [7] 0.001549499 0.012915141 0.044665639 0.106728094 0.206748336 0.348636272 #> [13] 0.531517459 0.749263553 0.990699050 1.240490015 1.480625327 1.692316012 #> [19] 1.858076002 1.963717409 1.000000000 1.963717409 1.858076002 1.692316012 #> [25] 1.480625327 1.240490015 0.990699050 0.749263553 0.531517459 0.348636272 #> [31] 0.206748336 0.106728094 0.044665639 0.012915141 0.001549499 0.000000000 #> [37] 0.000000000 0.000000000 0.000000000 0.000000000 0.000000000 flat_top_kernel(-20:20/15) #>  [1] 0.00000000 0.00000000 0.00000000 0.00000000 0.03333333 0.10000000 #>  [7] 0.16666667 0.23333333 0.30000000 0.36666667 0.43333333 0.50000000 #> [13] 0.56666667 0.63333333 0.70000000 0.76666667 0.83333333 0.90000000 #> [19] 0.96666667 1.00000000 1.00000000 1.00000000 0.96666667 0.90000000 #> [25] 0.83333333 0.76666667 0.70000000 0.63333333 0.56666667 0.50000000 #> [31] 0.43333333 0.36666667 0.30000000 0.23333333 0.16666667 0.10000000 #> [37] 0.03333333 0.00000000 0.00000000 0.00000000 0.00000000"},{"path":"https://jrvanderdoes.github.io/fChange/reference/kpss_test.html","id":null,"dir":"Reference","previous_headings":"","what":"Functional KPSS Test — kpss_test","title":"Functional KPSS Test — kpss_test","text":"Compute KPSS statistic functional data.","code":""},{"path":"https://jrvanderdoes.github.io/fChange/reference/kpss_test.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Functional KPSS Test — kpss_test","text":"","code":"kpss_test(   X,   method = c(\"MC\", \"block\", \"sliding\"),   M = 1000,   h = 3,   TVE = 1,   replace = TRUE )"},{"path":"https://jrvanderdoes.github.io/fChange/reference/kpss_test.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Functional KPSS Test — kpss_test","text":"X dfts object data can automatically converted format. See dfts(). method String (default MC) method: monte carlo simulation (MC), block permutation (block), sliding window permutation (sliding) M Number simulations (default 1000) estimate theoretical distribution h Numeric (default 3) block size using permutation test TVE Numeric (default 1) selecting number principle components / eigenvalues replace Boolean (default TRUE) indicate blocks selected replacement using permutation test","code":""},{"path":"https://jrvanderdoes.github.io/fChange/reference/kpss_test.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Functional KPSS Test — kpss_test","text":"List statistic, p-value theoretical simulations, respectively","code":""},{"path":"https://jrvanderdoes.github.io/fChange/reference/kpss_test.html","id":"references","dir":"Reference","previous_headings":"","what":"References","title":"Functional KPSS Test — kpss_test","text":"Chen, Y., & Pun, C. S. (2019). bootstrap-based KPSS test functional time series. Journal Multivariate Analysis, 174, 104535. Kokoszka, P., & Young, G. (2016). KPSS test functional time series. Statistics, 50(5), 957-973.","code":""},{"path":"https://jrvanderdoes.github.io/fChange/reference/kpss_test.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Functional KPSS Test — kpss_test","text":"","code":"kpss_test(generate_brownian_motion(100,v=seq(0,1,length.out=20))) #> $statistic #> [1] 0.02003026 #>  #> $pvalue #> [1] 0.858 #>  #> $sims #>    [1] 0.030235788 0.031324327 0.060389517 0.014029960 0.045126232 0.041404468 #>    [7] 0.029629899 0.033970911 0.033600012 0.031522996 0.104084602 0.042139261 #>   [13] 0.064147236 0.038944328 0.016627924 0.056764070 0.034380121 0.022808918 #>   [19] 0.031191548 0.023952323 0.047011466 0.013958716 0.037369998 0.016282510 #>   [25] 0.020812269 0.013662363 0.034919122 0.032619809 0.148344074 0.047967713 #>   [31] 0.025388206 0.031574596 0.062814164 0.011834259 0.016986772 0.038255664 #>   [37] 0.106678804 0.020542299 0.030877620 0.044230778 0.065122720 0.040520308 #>   [43] 0.027115000 0.064135207 0.027597433 0.052943053 0.021831219 0.085807946 #>   [49] 0.038137703 0.040165560 0.029871138 0.035625778 0.037093315 0.040395225 #>   [55] 0.037135287 0.018182122 0.020500661 0.037520460 0.064582529 0.018224555 #>   [61] 0.020979402 0.027591062 0.032549666 0.026664270 0.059256462 0.034689528 #>   [67] 0.073183007 0.022446521 0.016381475 0.017368872 0.024742659 0.030172079 #>   [73] 0.061541898 0.031809222 0.033222076 0.031471233 0.032501084 0.025515232 #>   [79] 0.021802924 0.044299256 0.035957604 0.030946063 0.031158218 0.014827369 #>   [85] 0.026068966 0.045906833 0.013859239 0.041962242 0.022848892 0.017151509 #>   [91] 0.033477669 0.022894503 0.113084180 0.016750591 0.018952394 0.023574846 #>   [97] 0.029479864 0.044782352 0.024710046 0.023112938 0.029927271 0.023990905 #>  [103] 0.050488034 0.033263409 0.118091960 0.017423583 0.013228398 0.047019048 #>  [109] 0.020278755 0.038682734 0.031619643 0.029306003 0.030150807 0.037619685 #>  [115] 0.048667252 0.017020130 0.021080800 0.034325029 0.029975792 0.056085354 #>  [121] 0.072629648 0.032006397 0.027440006 0.016501330 0.008410735 0.046685208 #>  [127] 0.024366612 0.040712947 0.055992732 0.034826694 0.042180386 0.040525487 #>  [133] 0.032015949 0.022597438 0.042773863 0.052395718 0.028114604 0.056041341 #>  [139] 0.036061882 0.051095563 0.050557858 0.059104189 0.040474811 0.032238039 #>  [145] 0.054308755 0.019062100 0.066333536 0.033809536 0.040631787 0.017951271 #>  [151] 0.035920624 0.024562502 0.036800462 0.023857032 0.043475869 0.025131155 #>  [157] 0.019226170 0.017314247 0.078886521 0.029431362 0.017057241 0.025494824 #>  [163] 0.043548535 0.019550385 0.021149480 0.012001254 0.031446771 0.029431672 #>  [169] 0.016683740 0.023868667 0.013885874 0.047642612 0.033937242 0.043436019 #>  [175] 0.034414840 0.040814157 0.023598981 0.072165948 0.021860750 0.027613833 #>  [181] 0.026083127 0.038360129 0.054023749 0.038137142 0.033058877 0.025308006 #>  [187] 0.010485368 0.069015592 0.019836725 0.015216234 0.020995461 0.028511559 #>  [193] 0.031733597 0.075241745 0.044583194 0.053060207 0.035535329 0.051432826 #>  [199] 0.071285881 0.043578033 0.039089512 0.026669190 0.142345737 0.033205908 #>  [205] 0.017373381 0.019822920 0.018483132 0.032438078 0.051436390 0.026988466 #>  [211] 0.023491466 0.052010693 0.039045804 0.025539245 0.023195909 0.034138210 #>  [217] 0.018225866 0.017359876 0.013117182 0.046029851 0.030770881 0.044118370 #>  [223] 0.044270460 0.026421775 0.057515644 0.019577420 0.023796308 0.038214531 #>  [229] 0.024631305 0.046306141 0.027388967 0.037737291 0.086708807 0.047614194 #>  [235] 0.031150416 0.074048442 0.060676983 0.073332030 0.020739218 0.033261134 #>  [241] 0.021580839 0.061594548 0.022147967 0.019812271 0.025331905 0.031040804 #>  [247] 0.042016448 0.020594332 0.021106996 0.026692587 0.038072420 0.062604793 #>  [253] 0.022731228 0.033873591 0.018692526 0.044722167 0.027905064 0.021662972 #>  [259] 0.032999071 0.019702297 0.065486661 0.031538347 0.013416629 0.057980226 #>  [265] 0.016872770 0.018977909 0.010474229 0.041703908 0.020483883 0.112160117 #>  [271] 0.035135724 0.022171216 0.020954020 0.062079738 0.023714439 0.056970558 #>  [277] 0.017585549 0.016150902 0.016943175 0.054202428 0.018736734 0.027224523 #>  [283] 0.042099134 0.033145000 0.026381492 0.037996126 0.023115764 0.025341476 #>  [289] 0.020507129 0.022541674 0.054321113 0.043035538 0.049399931 0.022047612 #>  [295] 0.066464264 0.024845026 0.019993062 0.048292003 0.091865845 0.049084163 #>  [301] 0.027547247 0.025023398 0.038984487 0.017861925 0.053591708 0.034906651 #>  [307] 0.033205745 0.024246755 0.036978019 0.060400463 0.017981047 0.060230946 #>  [313] 0.050759578 0.061853270 0.072352050 0.040310941 0.054408596 0.118801513 #>  [319] 0.031463302 0.022517205 0.029371650 0.015491262 0.030594213 0.030765461 #>  [325] 0.022048429 0.026959714 0.035730466 0.018006626 0.035675155 0.027346869 #>  [331] 0.049306927 0.074341992 0.037810437 0.031104545 0.025540979 0.028172455 #>  [337] 0.013987415 0.023957440 0.044967079 0.058489944 0.048011067 0.048289026 #>  [343] 0.032671483 0.013476976 0.073125310 0.020964821 0.042824658 0.045678517 #>  [349] 0.024718550 0.022588629 0.023778277 0.039237948 0.074287458 0.063293797 #>  [355] 0.027853929 0.024483398 0.020661775 0.021516338 0.031004872 0.115178487 #>  [361] 0.032028321 0.028549241 0.030308852 0.055094194 0.024170865 0.047235056 #>  [367] 0.034271731 0.021930392 0.021599891 0.033142817 0.034328866 0.072936104 #>  [373] 0.021378297 0.020252149 0.057994092 0.014406534 0.056464548 0.036180386 #>  [379] 0.028401764 0.055321336 0.023848210 0.021144884 0.030454902 0.020528053 #>  [385] 0.034875523 0.031220690 0.055029972 0.014052481 0.043009987 0.027681567 #>  [391] 0.027647503 0.019299412 0.045075353 0.049923346 0.070665585 0.031646569 #>  [397] 0.024639086 0.027169359 0.042479344 0.062390510 0.021387998 0.015351039 #>  [403] 0.048718003 0.058787015 0.042045186 0.021597091 0.040974455 0.029388808 #>  [409] 0.051585228 0.054620121 0.086762095 0.058394247 0.047351518 0.033432842 #>  [415] 0.047386920 0.024473735 0.026951891 0.021029566 0.052405033 0.032467821 #>  [421] 0.015689377 0.035216566 0.032143067 0.043085445 0.051623454 0.045221421 #>  [427] 0.026437925 0.027334323 0.028663011 0.021981093 0.052864706 0.021638505 #>  [433] 0.048767757 0.046806934 0.029703962 0.029776089 0.017751112 0.026047353 #>  [439] 0.080546631 0.048333127 0.023457307 0.037039177 0.038812151 0.038863352 #>  [445] 0.064855326 0.039402776 0.047585844 0.043565480 0.038831876 0.036071866 #>  [451] 0.030574049 0.023186867 0.028909164 0.021825861 0.042192576 0.037988052 #>  [457] 0.028950364 0.025659617 0.042787043 0.042431619 0.028069537 0.049307723 #>  [463] 0.035467983 0.036282376 0.021610366 0.022834931 0.024033341 0.175715296 #>  [469] 0.027404461 0.025321260 0.027285692 0.049024582 0.028411688 0.039472965 #>  [475] 0.023207296 0.027746592 0.048489777 0.025440123 0.052478876 0.015777164 #>  [481] 0.053115423 0.044993992 0.033301317 0.037822510 0.073804955 0.033207728 #>  [487] 0.050302076 0.012685155 0.024227018 0.022254397 0.054071988 0.035601465 #>  [493] 0.046591716 0.023834528 0.062882053 0.020608909 0.028535576 0.120105435 #>  [499] 0.028314992 0.021964479 0.036458622 0.026265790 0.036263809 0.038750614 #>  [505] 0.041286064 0.021810018 0.038860268 0.044308609 0.026630491 0.018069382 #>  [511] 0.043114407 0.016229351 0.066304703 0.020063848 0.017270398 0.042725581 #>  [517] 0.142839986 0.043752028 0.028966598 0.032802298 0.063697301 0.021845475 #>  [523] 0.016320518 0.036822085 0.024381837 0.035547371 0.030337833 0.018998062 #>  [529] 0.035114705 0.027379888 0.026256771 0.030752762 0.025483332 0.038306073 #>  [535] 0.029400461 0.025081229 0.021209394 0.021948305 0.036086554 0.038955185 #>  [541] 0.024924966 0.057496970 0.046258542 0.040537010 0.022850728 0.030435591 #>  [547] 0.029682070 0.039967122 0.030370707 0.049479192 0.015748013 0.058105796 #>  [553] 0.032903797 0.030985134 0.053428374 0.034281726 0.163733006 0.019759844 #>  [559] 0.037039149 0.044425525 0.037593142 0.028925790 0.032166426 0.051164598 #>  [565] 0.044107338 0.022171905 0.076674683 0.028764687 0.024229962 0.078960515 #>  [571] 0.037620332 0.049942803 0.069781358 0.042198235 0.044758727 0.024823962 #>  [577] 0.022726700 0.031658817 0.036358769 0.056984268 0.040273729 0.027180881 #>  [583] 0.023602570 0.053426131 0.030087559 0.048355283 0.017011383 0.044156244 #>  [589] 0.026407754 0.023785566 0.039888656 0.034469016 0.016388642 0.038561019 #>  [595] 0.038842830 0.016767150 0.014318129 0.043706738 0.031081400 0.031789208 #>  [601] 0.064787097 0.021678150 0.035875841 0.022109303 0.062890306 0.038098742 #>  [607] 0.038737132 0.052724630 0.056502701 0.016017947 0.088126439 0.032341911 #>  [613] 0.031455773 0.014453655 0.028727136 0.024095633 0.036500330 0.020061130 #>  [619] 0.038216530 0.019006546 0.023179436 0.027644170 0.020887732 0.018789237 #>  [625] 0.029073277 0.035547066 0.012262529 0.031537348 0.024913987 0.057394752 #>  [631] 0.037708540 0.029044614 0.048405803 0.035874832 0.050643419 0.015614725 #>  [637] 0.022268259 0.042000817 0.113429943 0.041016023 0.029441898 0.011434304 #>  [643] 0.022839015 0.030830160 0.022138181 0.033103855 0.014315879 0.025102152 #>  [649] 0.020107838 0.013306593 0.020921655 0.015784133 0.034305401 0.054536850 #>  [655] 0.041439174 0.036885863 0.045180616 0.071434780 0.048001797 0.027066108 #>  [661] 0.016329514 0.023034543 0.033987315 0.029488553 0.050588609 0.075263795 #>  [667] 0.048366098 0.016830586 0.032998640 0.034451542 0.014379472 0.020836074 #>  [673] 0.037569121 0.018266088 0.035579802 0.031742537 0.031411267 0.068164829 #>  [679] 0.022051953 0.039260576 0.010175359 0.025272235 0.049376583 0.012832941 #>  [685] 0.018496300 0.026842107 0.044138361 0.041410013 0.039251823 0.078302275 #>  [691] 0.013135441 0.023832642 0.031125251 0.022824028 0.039077888 0.028133216 #>  [697] 0.020237166 0.025037233 0.045008226 0.049612367 0.069782847 0.014240538 #>  [703] 0.060907327 0.014416590 0.080620940 0.023418974 0.054638417 0.032237787 #>  [709] 0.027136016 0.038256219 0.033659029 0.024396137 0.018597628 0.021518407 #>  [715] 0.026071648 0.026373922 0.029117752 0.057563932 0.038479795 0.025248088 #>  [721] 0.017581625 0.050250321 0.072722134 0.038454831 0.042270113 0.034334537 #>  [727] 0.038548840 0.036256518 0.025990122 0.017825398 0.038254257 0.075748968 #>  [733] 0.036117329 0.023153408 0.057973552 0.038741521 0.060892841 0.051524650 #>  [739] 0.033115043 0.021584717 0.035560523 0.022223203 0.023702926 0.059332089 #>  [745] 0.041803895 0.070032289 0.026140414 0.023510659 0.038495042 0.022148663 #>  [751] 0.038645590 0.024743114 0.054251475 0.047465846 0.011233931 0.087413098 #>  [757] 0.031549303 0.015913231 0.033612687 0.018090272 0.057019651 0.020140956 #>  [763] 0.025300215 0.023339586 0.011401164 0.026551335 0.056987607 0.045317745 #>  [769] 0.028176520 0.019726903 0.034138128 0.034270288 0.025604310 0.016741610 #>  [775] 0.028526966 0.035290390 0.025912579 0.032320333 0.054658591 0.026856645 #>  [781] 0.025265757 0.028174913 0.024278437 0.026895148 0.042653410 0.020642970 #>  [787] 0.022677132 0.048794678 0.031331450 0.041418061 0.015390130 0.015185669 #>  [793] 0.016325349 0.021053772 0.021750893 0.016980683 0.029089765 0.097492573 #>  [799] 0.032178855 0.069025737 0.027328657 0.022155957 0.034380422 0.057075581 #>  [805] 0.049123545 0.056220318 0.027712186 0.057615753 0.035979980 0.029956569 #>  [811] 0.047709581 0.021770104 0.028772915 0.036187863 0.013730632 0.015682558 #>  [817] 0.041242585 0.033454722 0.017500575 0.017610402 0.049990172 0.051564840 #>  [823] 0.024717476 0.077918351 0.044400451 0.067617945 0.010121580 0.017767196 #>  [829] 0.035558865 0.039444467 0.097865508 0.027622284 0.073709016 0.029086149 #>  [835] 0.038929623 0.042938471 0.030514459 0.039911501 0.024266345 0.049619774 #>  [841] 0.050921398 0.024731729 0.046611668 0.053249364 0.008991313 0.019486980 #>  [847] 0.019003923 0.033737712 0.022935235 0.026010724 0.150267855 0.032779774 #>  [853] 0.024229718 0.044612102 0.040775244 0.052476353 0.016834031 0.019301995 #>  [859] 0.031143021 0.033515751 0.097572404 0.025210441 0.020722020 0.017369281 #>  [865] 0.021556116 0.024593538 0.046658793 0.034468196 0.027400147 0.048938171 #>  [871] 0.027459072 0.051879058 0.023322313 0.019904183 0.038657824 0.031977572 #>  [877] 0.020018085 0.053059814 0.041459333 0.022221409 0.038285878 0.022851522 #>  [883] 0.044128833 0.031102961 0.020558841 0.043563423 0.037021661 0.032498170 #>  [889] 0.023544437 0.058971331 0.030029439 0.037628363 0.015279025 0.090678190 #>  [895] 0.019315232 0.024625470 0.026219995 0.018699038 0.025796936 0.020224512 #>  [901] 0.015329562 0.024341331 0.036801079 0.025423834 0.069227609 0.034355185 #>  [907] 0.033300910 0.026829660 0.108525186 0.023279305 0.021389870 0.045911566 #>  [913] 0.074314937 0.044221553 0.018839779 0.043720420 0.026575841 0.037815948 #>  [919] 0.040807908 0.024794416 0.039657610 0.016144410 0.022257736 0.023215878 #>  [925] 0.033339155 0.048829692 0.019237986 0.017989607 0.036808399 0.021395917 #>  [931] 0.050391000 0.050535824 0.021542467 0.049123211 0.042488616 0.028532086 #>  [937] 0.022060011 0.033365409 0.021844918 0.013341856 0.008320795 0.026466777 #>  [943] 0.118048051 0.023112595 0.019984823 0.050552956 0.040643648 0.025193065 #>  [949] 0.020066164 0.012583949 0.021176170 0.037999699 0.027406085 0.028748643 #>  [955] 0.015782770 0.013266923 0.041102292 0.035367247 0.024883182 0.033682508 #>  [961] 0.018339049 0.042699736 0.029130174 0.034883904 0.045396577 0.036260293 #>  [967] 0.024506754 0.044413793 0.026485668 0.025775209 0.076503017 0.045768249 #>  [973] 0.031923454 0.032373872 0.046386320 0.057555735 0.037836088 0.062509425 #>  [979] 0.032007293 0.178079655 0.059737642 0.019322850 0.020968246 0.051170168 #>  [985] 0.047187710 0.023971346 0.061515523 0.035592824 0.026924454 0.042416500 #>  [991] 0.010561794 0.046104146 0.038443425 0.031200017 0.038593989 0.040785979 #>  [997] 0.018051686 0.072760585 0.050667324 0.030015604 #>  kpss_test(generate_brownian_motion(100,v=seq(0,1,length.out=20)),              method=\"block\") #> $statistic #> [1] 0.02017272 #>  #> $pvalue #> [1] 0.846 #>  #> $sims #>    [1] 0.036726078 0.024450331 0.012016947 0.029062918 0.017218399 0.027661883 #>    [7] 0.034284910 0.039475189 0.038089904 0.051462093 0.066878989 0.050118899 #>   [13] 0.064226770 0.048875079 0.089081004 0.023746933 0.056181582 0.030320147 #>   [19] 0.033251719 0.064907919 0.037852097 0.024111059 0.026637572 0.022150467 #>   [25] 0.059663063 0.013931756 0.065446920 0.035487639 0.034871170 0.021851051 #>   [31] 0.052287719 0.066425541 0.028143646 0.025324451 0.020233673 0.017252561 #>   [37] 0.030332962 0.058404289 0.026195357 0.144300635 0.018560083 0.019065631 #>   [43] 0.036028068 0.040455415 0.046259887 0.046217815 0.019132158 0.020794473 #>   [49] 0.015790053 0.051493600 0.069813487 0.028688845 0.029762786 0.019832185 #>   [55] 0.038488736 0.023147088 0.020864074 0.047442731 0.039363452 0.019431427 #>   [61] 0.018755195 0.032038301 0.043616090 0.030580539 0.024229386 0.062158013 #>   [67] 0.023755792 0.040128293 0.019546161 0.023408663 0.019156622 0.030704144 #>   [73] 0.043416639 0.018609087 0.058860618 0.036551396 0.048724205 0.028307733 #>   [79] 0.060298428 0.031443409 0.033408436 0.021368086 0.046941571 0.018584942 #>   [85] 0.050358131 0.076133068 0.027363850 0.021664588 0.024020126 0.023496229 #>   [91] 0.056574084 0.030462424 0.025264134 0.038224937 0.016085592 0.029299696 #>   [97] 0.024691257 0.018452886 0.083981179 0.014534872 0.020537570 0.025505307 #>  [103] 0.018225309 0.030724538 0.017387090 0.033036701 0.064280047 0.029324179 #>  [109] 0.031260209 0.019616320 0.061978504 0.020201299 0.022219513 0.031331357 #>  [115] 0.020726180 0.058437848 0.031203020 0.023826630 0.030236214 0.047288857 #>  [121] 0.032359976 0.018857520 0.019014478 0.034317663 0.017352547 0.028423722 #>  [127] 0.017157558 0.030945248 0.021262086 0.051124120 0.043785368 0.024334594 #>  [133] 0.031578149 0.050393375 0.023995483 0.011240329 0.043245295 0.036409605 #>  [139] 0.041250849 0.042280510 0.038630053 0.020535112 0.043500738 0.019531439 #>  [145] 0.021051693 0.034493378 0.020670410 0.029978334 0.055691566 0.020382851 #>  [151] 0.025753893 0.043057476 0.021166486 0.041567307 0.019154493 0.035779424 #>  [157] 0.023266550 0.034586548 0.034293783 0.033885941 0.018605873 0.014445748 #>  [163] 0.043652778 0.048476005 0.065120655 0.021641585 0.026558793 0.032039697 #>  [169] 0.037848263 0.020899345 0.031394559 0.027615201 0.070015608 0.062170597 #>  [175] 0.020574694 0.035207569 0.037584030 0.055123550 0.049413375 0.046248306 #>  [181] 0.027731802 0.034851376 0.020562128 0.021503968 0.048464342 0.043585403 #>  [187] 0.026088815 0.048780183 0.033279379 0.025852227 0.016407939 0.019321471 #>  [193] 0.016391570 0.022497997 0.038342503 0.057038502 0.045326396 0.048667785 #>  [199] 0.044352497 0.030887620 0.022356847 0.082316942 0.047010331 0.018634040 #>  [205] 0.015920317 0.033328494 0.047815661 0.023596673 0.052662692 0.058475412 #>  [211] 0.024042023 0.025090033 0.069026852 0.050948961 0.022079795 0.033884620 #>  [217] 0.018545330 0.026101653 0.034491908 0.026247709 0.020948667 0.018769373 #>  [223] 0.034266698 0.042993302 0.047079372 0.017908331 0.033573321 0.023362412 #>  [229] 0.028649620 0.044415852 0.032844354 0.050552370 0.030801892 0.027310327 #>  [235] 0.067249082 0.036412940 0.045411994 0.031938383 0.072390818 0.037181495 #>  [241] 0.033064159 0.016880682 0.039179131 0.066778801 0.064380473 0.045915147 #>  [247] 0.021417283 0.024242985 0.015790776 0.023804837 0.017207519 0.018872584 #>  [253] 0.028160075 0.016179618 0.080374545 0.016753352 0.016848008 0.055036180 #>  [259] 0.036169402 0.031516906 0.024164143 0.047832973 0.059369058 0.023286752 #>  [265] 0.058874216 0.021118907 0.019641329 0.022087517 0.041938124 0.049119496 #>  [271] 0.021367785 0.037273389 0.048546554 0.018822776 0.077158197 0.024839113 #>  [277] 0.028041162 0.049798477 0.018191535 0.027316919 0.041498023 0.018523959 #>  [283] 0.064070142 0.039929117 0.037538763 0.018268679 0.018412816 0.023735190 #>  [289] 0.014958127 0.014798090 0.026006373 0.046902644 0.047036059 0.053829510 #>  [295] 0.048539377 0.020243881 0.062915373 0.042827151 0.053995704 0.044297562 #>  [301] 0.024549027 0.033747868 0.016810320 0.053914146 0.028393839 0.039732495 #>  [307] 0.027141344 0.063915887 0.034699056 0.033829032 0.030317216 0.026620572 #>  [313] 0.031743007 0.024272607 0.053485934 0.076982969 0.062848270 0.033585751 #>  [319] 0.031157129 0.042814563 0.031871882 0.079784286 0.021907147 0.029903660 #>  [325] 0.040511603 0.067640003 0.029566828 0.029548847 0.024599675 0.021903868 #>  [331] 0.029211949 0.027902787 0.036181086 0.040129852 0.012106316 0.073418469 #>  [337] 0.021358762 0.031585089 0.031161317 0.018515421 0.061040260 0.037296638 #>  [343] 0.052004930 0.027871848 0.041961801 0.034868706 0.022253338 0.034367668 #>  [349] 0.019031332 0.037873318 0.015891567 0.027654577 0.013406660 0.030435586 #>  [355] 0.031159610 0.061676199 0.021782210 0.022396228 0.045720501 0.015083948 #>  [361] 0.038777758 0.023819742 0.014061396 0.036372834 0.046392482 0.015364604 #>  [367] 0.042022744 0.025451558 0.025669900 0.023970252 0.086072479 0.016224219 #>  [373] 0.026883993 0.021785955 0.045222240 0.039250372 0.019551953 0.027001224 #>  [379] 0.034393521 0.026159916 0.013709097 0.023822488 0.025866021 0.020570923 #>  [385] 0.105915040 0.019392925 0.025338180 0.043787457 0.011758473 0.053408356 #>  [391] 0.069577832 0.018872875 0.066064017 0.027559302 0.043589832 0.045780682 #>  [397] 0.040324017 0.029838381 0.018439390 0.025714918 0.022839915 0.028498423 #>  [403] 0.027158362 0.052935794 0.028589982 0.112791011 0.040432849 0.025669298 #>  [409] 0.026823485 0.053980255 0.035230005 0.024724084 0.045732110 0.068474633 #>  [415] 0.026532999 0.063286358 0.025267623 0.021777340 0.061466232 0.034296678 #>  [421] 0.078069181 0.083610650 0.056530962 0.029986465 0.029860528 0.042949073 #>  [427] 0.051123161 0.026384548 0.027630500 0.030249215 0.036342576 0.024716282 #>  [433] 0.026534175 0.034955098 0.062139895 0.043334910 0.018574128 0.024587451 #>  [439] 0.075564222 0.024004043 0.087873813 0.018023099 0.038785101 0.091443450 #>  [445] 0.017083594 0.022750154 0.029639968 0.025930159 0.038277861 0.050669287 #>  [451] 0.038015562 0.067244040 0.027987941 0.032560258 0.025028421 0.033280352 #>  [457] 0.020221648 0.021735935 0.068335027 0.054456261 0.022656920 0.033444927 #>  [463] 0.079127663 0.034685408 0.034444236 0.024871260 0.016569634 0.045572595 #>  [469] 0.026029277 0.021613486 0.044536261 0.036298529 0.067636208 0.015578806 #>  [475] 0.022848173 0.013359805 0.076900015 0.033680055 0.038625757 0.015668978 #>  [481] 0.019553223 0.018012227 0.098156745 0.016908107 0.026138742 0.046972081 #>  [487] 0.032239598 0.028007212 0.024731570 0.019905180 0.087337579 0.044942911 #>  [493] 0.030685059 0.062783145 0.054269303 0.010919679 0.018074231 0.043789439 #>  [499] 0.020484063 0.020514346 0.042488903 0.027726070 0.028435694 0.023681014 #>  [505] 0.045613343 0.018227970 0.050396694 0.029410111 0.016825146 0.042211670 #>  [511] 0.031046054 0.040238924 0.029530317 0.037910742 0.030124115 0.020743668 #>  [517] 0.082104511 0.025412073 0.046501758 0.026626870 0.030272412 0.042475487 #>  [523] 0.020299958 0.024748386 0.011341215 0.044490693 0.028376976 0.060367106 #>  [529] 0.018265727 0.031367317 0.050049734 0.015511102 0.022967588 0.039841156 #>  [535] 0.018256282 0.018587349 0.042837660 0.065621771 0.030723581 0.018298695 #>  [541] 0.023707528 0.071569655 0.130761291 0.064201881 0.067030922 0.030637337 #>  [547] 0.039354820 0.037440500 0.021771411 0.041581203 0.040266614 0.025692949 #>  [553] 0.033073387 0.043718547 0.026096980 0.024406892 0.061589359 0.032898159 #>  [559] 0.044895740 0.040054002 0.031590380 0.042730246 0.033372944 0.028574741 #>  [565] 0.039652985 0.028773372 0.057134409 0.042206352 0.026288867 0.055697673 #>  [571] 0.074260882 0.016362937 0.034059293 0.040001885 0.028745133 0.020095467 #>  [577] 0.026159053 0.021988293 0.034311730 0.032296444 0.025278288 0.054975325 #>  [583] 0.042614038 0.023448943 0.033653584 0.019189543 0.062333915 0.041388015 #>  [589] 0.057569210 0.024577195 0.020588031 0.027617930 0.028529308 0.043174849 #>  [595] 0.027426339 0.025898589 0.029123739 0.028146195 0.021754448 0.031349721 #>  [601] 0.042879764 0.049540833 0.025214861 0.023294548 0.022234249 0.021029547 #>  [607] 0.023853470 0.039919814 0.032083929 0.020647179 0.031878486 0.052527493 #>  [613] 0.058646473 0.021741184 0.061054044 0.019918825 0.032077677 0.017640754 #>  [619] 0.035465359 0.056402044 0.019278235 0.026863781 0.023522658 0.037446164 #>  [625] 0.026677020 0.029744462 0.031534997 0.027296119 0.035138275 0.016252586 #>  [631] 0.022346547 0.053629099 0.023844113 0.043140661 0.026751664 0.032184932 #>  [637] 0.028862822 0.021778127 0.023507669 0.062116112 0.104202609 0.026834136 #>  [643] 0.015836638 0.017538717 0.036421822 0.015748091 0.031224440 0.028382179 #>  [649] 0.034404120 0.031511579 0.022365291 0.024439630 0.024484344 0.068389822 #>  [655] 0.026375399 0.046139292 0.040592708 0.029163293 0.042993805 0.029191125 #>  [661] 0.013915994 0.023955023 0.029842839 0.027958283 0.062004494 0.025225849 #>  [667] 0.031977454 0.029417640 0.040366407 0.055609643 0.016037631 0.022785343 #>  [673] 0.035395731 0.029166142 0.018942566 0.046792047 0.017336232 0.032523507 #>  [679] 0.076831707 0.056115605 0.011823939 0.031561607 0.024802190 0.047323060 #>  [685] 0.027158160 0.020574347 0.018929858 0.063154151 0.022121518 0.079588536 #>  [691] 0.016493494 0.019408843 0.050409870 0.027738456 0.028676270 0.051056319 #>  [697] 0.034373021 0.016557580 0.046419898 0.027178790 0.030220090 0.025842365 #>  [703] 0.030309658 0.050414115 0.092511026 0.074596067 0.021892669 0.038050835 #>  [709] 0.038543820 0.021482295 0.036712427 0.043154066 0.010892422 0.018498191 #>  [715] 0.066451643 0.034133635 0.027984933 0.026292124 0.015192926 0.035100479 #>  [721] 0.028895213 0.052179612 0.045104924 0.024615896 0.021583769 0.025654364 #>  [727] 0.028700781 0.012390023 0.025093000 0.042868017 0.027449092 0.022898957 #>  [733] 0.018351343 0.042544782 0.104111758 0.031419015 0.078826815 0.021198853 #>  [739] 0.045213034 0.013715578 0.019669981 0.038285908 0.034793359 0.035317254 #>  [745] 0.019645552 0.015052917 0.013202627 0.032510430 0.026600586 0.035723528 #>  [751] 0.024192585 0.026883638 0.035471707 0.029982185 0.023704076 0.028588439 #>  [757] 0.051548327 0.052228402 0.057425325 0.045505007 0.046092504 0.034584002 #>  [763] 0.026305559 0.045411674 0.034542439 0.047291144 0.020956707 0.041053205 #>  [769] 0.043625416 0.023568047 0.036153367 0.034662424 0.019738629 0.040519060 #>  [775] 0.029392859 0.052805791 0.028385147 0.043562048 0.055847969 0.029363674 #>  [781] 0.011886941 0.034626260 0.104154481 0.026519684 0.043506817 0.023118955 #>  [787] 0.015859995 0.035352993 0.020989108 0.062219949 0.043933425 0.026035096 #>  [793] 0.022722105 0.017958400 0.065196936 0.058831744 0.018843487 0.056880219 #>  [799] 0.033472286 0.026509272 0.039739459 0.026713759 0.017374599 0.024122616 #>  [805] 0.032399360 0.018746142 0.033120924 0.033743868 0.014994213 0.058615238 #>  [811] 0.034608388 0.047865012 0.036257274 0.044651603 0.042117213 0.036890037 #>  [817] 0.054347617 0.024999397 0.054571353 0.013572071 0.033623960 0.036667986 #>  [823] 0.091602016 0.059289547 0.032838141 0.022838178 0.027846491 0.026827611 #>  [829] 0.062197498 0.028653188 0.030992890 0.068527091 0.019354476 0.052982193 #>  [835] 0.031481821 0.033081078 0.015547150 0.103202333 0.050041380 0.064216874 #>  [841] 0.022967271 0.029128482 0.018937820 0.027246527 0.021947493 0.033575426 #>  [847] 0.016385957 0.019311245 0.028441313 0.024329313 0.065243041 0.055376113 #>  [853] 0.044421445 0.018809119 0.047710386 0.022667661 0.037679045 0.017392655 #>  [859] 0.042814711 0.032835235 0.030526654 0.068660558 0.021260035 0.036616003 #>  [865] 0.046820977 0.031528979 0.030036506 0.072228612 0.020956153 0.081301989 #>  [871] 0.045580994 0.009024575 0.051602158 0.020272277 0.020287991 0.089940812 #>  [877] 0.120027702 0.038677131 0.050334846 0.014779361 0.029067946 0.018563976 #>  [883] 0.035563035 0.023482076 0.022299345 0.031858529 0.031407258 0.028967047 #>  [889] 0.098822906 0.036447752 0.011558809 0.026274097 0.030196681 0.039166835 #>  [895] 0.042141034 0.033663957 0.028627243 0.023065938 0.043340161 0.031692921 #>  [901] 0.031994088 0.037127985 0.043077868 0.030431564 0.037255996 0.025808502 #>  [907] 0.027516101 0.038095888 0.038177825 0.063605577 0.041118920 0.054084523 #>  [913] 0.028190846 0.019837227 0.032870486 0.023989324 0.020680004 0.028006971 #>  [919] 0.027652030 0.020710483 0.027042615 0.045120547 0.026332625 0.028599833 #>  [925] 0.032865658 0.039211108 0.037836712 0.012636021 0.019866370 0.055628774 #>  [931] 0.017890453 0.048720995 0.020122738 0.019800341 0.026797408 0.018453974 #>  [937] 0.030340564 0.091928246 0.049735056 0.030237061 0.043472005 0.080750272 #>  [943] 0.016991402 0.026695981 0.049318048 0.032037969 0.032365411 0.017765440 #>  [949] 0.055731633 0.019388544 0.035860230 0.073467675 0.026799473 0.013214700 #>  [955] 0.061492824 0.038948726 0.044357302 0.024975576 0.039820120 0.032196961 #>  [961] 0.064987254 0.020905329 0.043586437 0.021762261 0.029273097 0.019448945 #>  [967] 0.030904252 0.026333666 0.042269574 0.033410465 0.046589745 0.033190249 #>  [973] 0.039846048 0.031751077 0.034414937 0.032403789 0.021852404 0.128707799 #>  [979] 0.032270584 0.021356912 0.031714778 0.016690703 0.037457130 0.017632422 #>  [985] 0.024435173 0.083761539 0.045303620 0.023929400 0.025789662 0.038820633 #>  [991] 0.032761599 0.022143430 0.034829172 0.040210455 0.028660986 0.035378282 #>  [997] 0.020828311 0.017669457 0.036167681 0.046499825 #>  kpss_test(generate_brownian_motion(100,v=seq(0,1,length.out=20)),              method='sliding') #> $statistic #> [1] 0.05354905 #>  #> $pvalue #> [1] 0.126 #>  #> $sims #>    [1] 0.024454606 0.012336282 0.024060386 0.031167795 0.029968020 0.024677082 #>    [7] 0.099431269 0.011328104 0.020880780 0.042621117 0.029274591 0.055393992 #>   [13] 0.013993012 0.057491770 0.051194928 0.054191583 0.037408474 0.013720658 #>   [19] 0.012741220 0.043566483 0.015845459 0.034113968 0.028380049 0.017742792 #>   [25] 0.054117597 0.022060574 0.019152016 0.043798507 0.062946013 0.048762618 #>   [31] 0.048661450 0.055990908 0.028282185 0.050596607 0.022285520 0.015432785 #>   [37] 0.026029082 0.021144106 0.031740686 0.016892286 0.045361185 0.027300684 #>   [43] 0.075191833 0.015889649 0.063879063 0.021020905 0.047121756 0.067836299 #>   [49] 0.023631112 0.030607465 0.031224858 0.027357646 0.016943868 0.014644298 #>   [55] 0.036302715 0.029850779 0.055328383 0.032332503 0.105229732 0.032991675 #>   [61] 0.030156247 0.023509903 0.011644295 0.036931226 0.037050695 0.047639322 #>   [67] 0.048742563 0.014393747 0.073220059 0.048329939 0.032743943 0.042316266 #>   [73] 0.025384195 0.027495705 0.060904130 0.046079421 0.013502988 0.024592697 #>   [79] 0.029493562 0.032954068 0.099898479 0.017189464 0.046841259 0.013776641 #>   [85] 0.013785316 0.031963179 0.020494166 0.070300207 0.038218639 0.042232832 #>   [91] 0.075205101 0.025086197 0.027211616 0.024923846 0.046180244 0.063975270 #>   [97] 0.024550062 0.013519094 0.056715897 0.037434513 0.045948721 0.047070398 #>  [103] 0.028589127 0.025377961 0.051258162 0.020345696 0.049684750 0.044229299 #>  [109] 0.027116166 0.017244413 0.016552877 0.024879449 0.033438849 0.023486572 #>  [115] 0.013709984 0.016183382 0.049052379 0.031573773 0.015393986 0.036242406 #>  [121] 0.046849193 0.021152486 0.049505774 0.032130589 0.026927611 0.036952542 #>  [127] 0.038815683 0.022261035 0.024626903 0.021850683 0.044395619 0.071186827 #>  [133] 0.024628620 0.132582598 0.014268788 0.030805988 0.037358309 0.075772654 #>  [139] 0.021228888 0.023552508 0.009870647 0.014938937 0.049275350 0.033451907 #>  [145] 0.024646486 0.037239571 0.022227519 0.016880463 0.019368825 0.037878222 #>  [151] 0.030322650 0.054423147 0.035293132 0.038938309 0.029035822 0.038862841 #>  [157] 0.022669201 0.049406363 0.077602123 0.023004712 0.026354699 0.018682315 #>  [163] 0.015141243 0.026154914 0.025786929 0.037677225 0.038002285 0.033654539 #>  [169] 0.039753445 0.018947211 0.021253047 0.047866695 0.067131185 0.019266302 #>  [175] 0.024409646 0.072838308 0.061120732 0.024328585 0.044723798 0.040268813 #>  [181] 0.099582360 0.036908753 0.098276980 0.043310835 0.023331342 0.040157376 #>  [187] 0.031604795 0.032224952 0.056002207 0.017713882 0.052844883 0.013659261 #>  [193] 0.019532205 0.024940335 0.064903067 0.028848184 0.028588482 0.021935059 #>  [199] 0.036286925 0.023431448 0.033076402 0.018029893 0.027007145 0.035293409 #>  [205] 0.015866822 0.043418345 0.029986357 0.027571471 0.035102485 0.013626934 #>  [211] 0.065269631 0.024321617 0.059698439 0.036343053 0.030796180 0.052037126 #>  [217] 0.043484893 0.019065970 0.018144306 0.062371898 0.031139793 0.045880213 #>  [223] 0.023748805 0.039605674 0.022528409 0.022221017 0.034407152 0.018990269 #>  [229] 0.017925586 0.049093108 0.071387221 0.044633163 0.035063331 0.030401115 #>  [235] 0.046116904 0.022594751 0.016963178 0.036390696 0.023150494 0.039717572 #>  [241] 0.036170118 0.030396748 0.016043514 0.031534265 0.025262352 0.031989039 #>  [247] 0.027053469 0.038374852 0.165369409 0.032432815 0.038367019 0.029496397 #>  [253] 0.034300183 0.039323904 0.025684435 0.064233203 0.028375632 0.023067373 #>  [259] 0.022396883 0.064022471 0.047092534 0.029160167 0.063469123 0.025585981 #>  [265] 0.018803174 0.106748727 0.015545788 0.065937214 0.029814737 0.040245590 #>  [271] 0.021175747 0.034096323 0.016550319 0.026087001 0.015323319 0.041749519 #>  [277] 0.042567561 0.027924072 0.029426402 0.015919935 0.016718572 0.078094452 #>  [283] 0.029994265 0.021575798 0.085740838 0.021742917 0.015094257 0.031262050 #>  [289] 0.017266605 0.034012817 0.040324497 0.056510927 0.036156535 0.020367333 #>  [295] 0.018189828 0.075538449 0.017298081 0.040483015 0.029049461 0.015192150 #>  [301] 0.013232978 0.047481779 0.023070467 0.025947950 0.017109682 0.033002674 #>  [307] 0.034583784 0.034377588 0.088680209 0.034313634 0.029827857 0.025317881 #>  [313] 0.032286320 0.022323735 0.031879957 0.029632664 0.013038147 0.121791252 #>  [319] 0.013190308 0.027889446 0.048937652 0.022565966 0.055955903 0.017523112 #>  [325] 0.039445367 0.034680876 0.015955323 0.022103193 0.032310938 0.033634768 #>  [331] 0.062778279 0.018181650 0.050501888 0.022150223 0.031260785 0.026685371 #>  [337] 0.043896235 0.037200259 0.025404329 0.014830317 0.018769920 0.033809397 #>  [343] 0.059614319 0.122309107 0.023608598 0.045231377 0.081291825 0.038624248 #>  [349] 0.069733879 0.016207674 0.022015636 0.047393736 0.018534416 0.018788335 #>  [355] 0.070428546 0.033644604 0.056688660 0.017745677 0.030025553 0.031018054 #>  [361] 0.020064156 0.021324832 0.029055715 0.036072891 0.072597058 0.044343967 #>  [367] 0.045949598 0.037890998 0.025002881 0.015905389 0.032757190 0.059800116 #>  [373] 0.024702989 0.030423877 0.039096335 0.023558591 0.027298135 0.027409913 #>  [379] 0.043404537 0.014976029 0.035891581 0.022768952 0.031714521 0.015142483 #>  [385] 0.052263837 0.035463483 0.023407044 0.040004416 0.092042198 0.040346162 #>  [391] 0.042689050 0.023834860 0.020291935 0.041431232 0.053536886 0.034016924 #>  [397] 0.021902626 0.048657075 0.022067331 0.095161855 0.018625504 0.038560403 #>  [403] 0.022000057 0.034122338 0.039192690 0.026654738 0.024699435 0.049710857 #>  [409] 0.017238474 0.037514203 0.024213450 0.013010076 0.074250661 0.011608602 #>  [415] 0.038361904 0.022130512 0.090908615 0.031149932 0.043097022 0.030426331 #>  [421] 0.020188767 0.018094255 0.063153242 0.015493095 0.072732872 0.037153184 #>  [427] 0.038827014 0.021826178 0.056955818 0.026234069 0.033940744 0.029471372 #>  [433] 0.020925097 0.022731165 0.031486230 0.040587097 0.037593548 0.051489415 #>  [439] 0.014475346 0.039269138 0.046442126 0.029975152 0.066453742 0.046601606 #>  [445] 0.067087264 0.077727654 0.016354918 0.033259575 0.025952227 0.024567931 #>  [451] 0.009900182 0.027090182 0.023475372 0.054217300 0.058912256 0.018959961 #>  [457] 0.026736421 0.037363459 0.059830221 0.047323226 0.049872151 0.033238541 #>  [463] 0.056749927 0.031536042 0.019003230 0.067313931 0.017606757 0.020613931 #>  [469] 0.020750540 0.021157595 0.021039495 0.013068297 0.044566203 0.046678470 #>  [475] 0.044999854 0.035079156 0.058265736 0.031672891 0.019991761 0.048735256 #>  [481] 0.022197269 0.044226862 0.047685717 0.021094507 0.048025304 0.057466139 #>  [487] 0.022445726 0.027986211 0.027177529 0.040142916 0.010315679 0.027182305 #>  [493] 0.030614948 0.019560540 0.025328522 0.035004501 0.044966834 0.053743439 #>  [499] 0.046800138 0.024302076 0.018905814 0.037290930 0.039470931 0.025086939 #>  [505] 0.032099623 0.032952111 0.025347700 0.020929041 0.039616620 0.020078392 #>  [511] 0.049459636 0.019081814 0.023858907 0.039563280 0.037318498 0.028495121 #>  [517] 0.016611969 0.022342445 0.051614123 0.041913773 0.041645630 0.041054041 #>  [523] 0.033852355 0.051421974 0.040337690 0.031902105 0.025627825 0.068488922 #>  [529] 0.018314672 0.067162614 0.028781447 0.023681286 0.123327896 0.030575730 #>  [535] 0.027758423 0.014677220 0.016651792 0.028957171 0.017285950 0.030314567 #>  [541] 0.028414973 0.024999522 0.034189825 0.061323357 0.018885406 0.028104625 #>  [547] 0.030837610 0.015831620 0.028292108 0.019190894 0.023566713 0.027972849 #>  [553] 0.016762374 0.051339880 0.026230821 0.050714530 0.022445698 0.022872428 #>  [559] 0.018733607 0.030677366 0.023628276 0.031765725 0.040514944 0.017124182 #>  [565] 0.043285177 0.040017508 0.034676741 0.035644133 0.025271135 0.035497377 #>  [571] 0.056591867 0.044004766 0.021744731 0.039289775 0.014022580 0.026433185 #>  [577] 0.017524935 0.048730023 0.022528059 0.058113883 0.061553989 0.085271092 #>  [583] 0.019442570 0.037034950 0.016222929 0.022159741 0.053548255 0.027552941 #>  [589] 0.034317964 0.067907503 0.029784410 0.020986919 0.027714258 0.044158484 #>  [595] 0.023911987 0.015159746 0.022764138 0.030927071 0.025627719 0.037440702 #>  [601] 0.042433090 0.022369239 0.026126290 0.068525805 0.018634602 0.019069490 #>  [607] 0.014239249 0.057549950 0.036695395 0.017944413 0.025718997 0.015867026 #>  [613] 0.022015570 0.097182992 0.079842502 0.026300145 0.034789798 0.042938102 #>  [619] 0.044827071 0.021084461 0.016999118 0.019962556 0.055442332 0.023878417 #>  [625] 0.015372725 0.033388976 0.035988023 0.020004310 0.069791680 0.015412416 #>  [631] 0.024342632 0.035893583 0.028254486 0.056707898 0.032714845 0.023107911 #>  [637] 0.047072379 0.030226683 0.029825055 0.073044139 0.022136957 0.033815441 #>  [643] 0.018112696 0.015126358 0.014313301 0.022697159 0.010328643 0.037704908 #>  [649] 0.018676511 0.043494720 0.085718761 0.033627605 0.032386997 0.037162822 #>  [655] 0.033566141 0.065910877 0.019747958 0.027720435 0.025536812 0.040572880 #>  [661] 0.040415912 0.030101606 0.027580307 0.031889589 0.039202397 0.025129226 #>  [667] 0.028552276 0.024181543 0.052201864 0.041756660 0.062173770 0.014914101 #>  [673] 0.087966819 0.032754233 0.022429114 0.012931334 0.027034510 0.044816295 #>  [679] 0.019664817 0.064143310 0.042911787 0.018436747 0.012354162 0.031711435 #>  [685] 0.043139841 0.039796326 0.012738805 0.013200770 0.046820381 0.047885512 #>  [691] 0.039049154 0.027115678 0.045673419 0.021920857 0.012924310 0.026526290 #>  [697] 0.024115318 0.044204543 0.017384428 0.047546605 0.033240126 0.029199149 #>  [703] 0.019267446 0.021478003 0.055451053 0.073103239 0.029510308 0.017254072 #>  [709] 0.016386792 0.039323463 0.027617563 0.024273640 0.023613457 0.051983801 #>  [715] 0.031060840 0.043045559 0.017438609 0.045342534 0.019937135 0.014043089 #>  [721] 0.029961828 0.035402079 0.021945272 0.043089017 0.019304845 0.027344105 #>  [727] 0.025273622 0.036217524 0.020154243 0.031557380 0.043665200 0.022392178 #>  [733] 0.029003892 0.026661595 0.028268724 0.017731544 0.036365228 0.037590983 #>  [739] 0.024023088 0.061040426 0.051732050 0.039960146 0.011180310 0.020919941 #>  [745] 0.050056150 0.043495353 0.062347003 0.050559182 0.034812076 0.026055840 #>  [751] 0.048767602 0.032205489 0.050427697 0.121068958 0.040662750 0.029392138 #>  [757] 0.028748396 0.043847098 0.026477978 0.025098050 0.029934287 0.045469439 #>  [763] 0.031528786 0.031962657 0.032162836 0.020804199 0.071277549 0.049837786 #>  [769] 0.016351910 0.026119375 0.027371923 0.051042931 0.034279272 0.034077870 #>  [775] 0.016312355 0.027003239 0.032467373 0.046699908 0.055411762 0.026437986 #>  [781] 0.016300214 0.023607129 0.014325850 0.062463356 0.017860217 0.018283688 #>  [787] 0.009068809 0.048604754 0.031777911 0.024295402 0.033203813 0.019555348 #>  [793] 0.015501446 0.029450749 0.021273901 0.037311286 0.010756197 0.029385567 #>  [799] 0.022814375 0.026653289 0.032768917 0.015287288 0.115500461 0.086313427 #>  [805] 0.036794079 0.106541425 0.060093532 0.052793249 0.050974161 0.020261958 #>  [811] 0.023486140 0.058347894 0.025636169 0.051855059 0.036958618 0.024454919 #>  [817] 0.037423653 0.013021005 0.011981446 0.032939145 0.017537523 0.025925862 #>  [823] 0.047715949 0.013043021 0.037685012 0.058643188 0.025155865 0.016652845 #>  [829] 0.030444499 0.016521399 0.049655394 0.027031990 0.017514216 0.038504362 #>  [835] 0.018364696 0.031857682 0.044113748 0.024698583 0.059535861 0.017151192 #>  [841] 0.025927885 0.019228355 0.023742356 0.021415883 0.019150627 0.032053295 #>  [847] 0.022644319 0.025060624 0.052711439 0.012278843 0.030120917 0.090108575 #>  [853] 0.032610475 0.040920940 0.030519326 0.020055716 0.038205578 0.087121665 #>  [859] 0.026258249 0.026671243 0.035106422 0.106156141 0.029528263 0.012763049 #>  [865] 0.029416150 0.015138383 0.054356943 0.018750546 0.025837143 0.045207247 #>  [871] 0.018936695 0.048020546 0.021523544 0.028667719 0.080926812 0.014543367 #>  [877] 0.038397201 0.052499562 0.017771142 0.032841483 0.035910937 0.038893470 #>  [883] 0.039933501 0.037382199 0.032799137 0.028350266 0.034443566 0.034746997 #>  [889] 0.024486623 0.019199368 0.054317282 0.031814078 0.027024206 0.014744766 #>  [895] 0.022248763 0.107176490 0.031007907 0.027418586 0.067775736 0.020731573 #>  [901] 0.090771979 0.048902134 0.023566653 0.027334176 0.052586061 0.031051511 #>  [907] 0.031012100 0.030268691 0.023634920 0.044365062 0.015237004 0.021735378 #>  [913] 0.022804107 0.018862152 0.039393820 0.033774362 0.037826043 0.072381188 #>  [919] 0.013886611 0.052694248 0.033176674 0.022474040 0.029782260 0.020847874 #>  [925] 0.034400714 0.017468774 0.043531103 0.009869482 0.035076948 0.040141235 #>  [931] 0.046970931 0.026035316 0.033039499 0.070418370 0.025290418 0.035672461 #>  [937] 0.017087505 0.020189796 0.016600071 0.050659587 0.009284349 0.059028910 #>  [943] 0.038293720 0.043167145 0.037369457 0.035585243 0.032413255 0.047749551 #>  [949] 0.025533334 0.026082981 0.047761920 0.032728343 0.033501342 0.038320800 #>  [955] 0.027262168 0.024716633 0.015691833 0.021635584 0.038276030 0.016248643 #>  [961] 0.019905369 0.042670872 0.015602092 0.021668876 0.016193316 0.021489905 #>  [967] 0.038470593 0.048131364 0.040989248 0.015450334 0.015976226 0.035708658 #>  [973] 0.022575560 0.031872338 0.021543428 0.019651630 0.040294385 0.033846606 #>  [979] 0.024842856 0.037966122 0.015812280 0.022763943 0.028552082 0.050232822 #>  [985] 0.028696164 0.041800152 0.076667679 0.022958579 0.020056976 0.010116412 #>  [991] 0.028451756 0.024314304 0.020667686 0.050010203 0.019810984 0.018628473 #>  [997] 0.029953792 0.064570433 0.043172516 0.041080499 #>"},{"path":"https://jrvanderdoes.github.io/fChange/reference/lag.dfts.html","id":null,"dir":"Reference","previous_headings":"","what":"Lag dfts — lag.dfts","title":"Lag dfts — lag.dfts","text":"Lag dfts","code":""},{"path":"https://jrvanderdoes.github.io/fChange/reference/lag.dfts.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Lag dfts — lag.dfts","text":"","code":"# S3 method for class 'dfts' lag(x, k = 1, ...)"},{"path":"https://jrvanderdoes.github.io/fChange/reference/lag.dfts.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Lag dfts — lag.dfts","text":"x dfts object data can automatically converted format. See dfts(). k integer indicating number lags data ... Unused additional parameters","code":""},{"path":"https://jrvanderdoes.github.io/fChange/reference/lag.dfts.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Lag dfts — lag.dfts","text":"dfts object","code":""},{"path":"https://jrvanderdoes.github.io/fChange/reference/lag.dfts.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Lag dfts — lag.dfts","text":"","code":"result <- lag(electricity)"},{"path":"https://jrvanderdoes.github.io/fChange/reference/long_run_covariance.html","id":null,"dir":"Reference","previous_headings":"","what":"Estimate Long-run Covariance Kernel — long_run_covariance","title":"Estimate Long-run Covariance Kernel — long_run_covariance","text":"(internal) function estimates long-run covariance kernel. , \\(C_{\\epsilon}(t,t') = \\sum_{l=-\\inf}^{\\inf} \\text{Cov}(\\epsilon_0(t),     \\epsilon_l(t'))\\) error sequence \\((\\epsilon_i : \\\\mathbb{Z})\\).","code":""},{"path":"https://jrvanderdoes.github.io/fChange/reference/long_run_covariance.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Estimate Long-run Covariance Kernel — long_run_covariance","text":"","code":"long_run_covariance(X, h = 0, K = bartlett_kernel)"},{"path":"https://jrvanderdoes.github.io/fChange/reference/long_run_covariance.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Estimate Long-run Covariance Kernel — long_run_covariance","text":"X dfts object data can automatically converted format. See dfts(). h window parameter parameter estimation long run covariance kernel. default value h=0, .e., assumes iid data K (Optional) Function indicating Kernel use h>0","code":""},{"path":"https://jrvanderdoes.github.io/fChange/reference/long_run_covariance.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Estimate Long-run Covariance Kernel — long_run_covariance","text":"Data.frame numerics dim ncol(data) x ncol(data), symmetric.","code":""},{"path":"https://jrvanderdoes.github.io/fChange/reference/long_run_covariance.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Estimate Long-run Covariance Kernel — long_run_covariance","text":"internal function, see use .change_mean.","code":""},{"path":"https://jrvanderdoes.github.io/fChange/reference/long_run_covariance.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Estimate Long-run Covariance Kernel — long_run_covariance","text":"","code":"result <- long_run_covariance(electricity,2)"},{"path":"https://jrvanderdoes.github.io/fChange/reference/minmax.html","id":null,"dir":"Reference","previous_headings":"","what":"Max / Min for dfts Objects — minmax","title":"Max / Min for dfts Objects — minmax","text":"Get observation(s) min / max values. Selected observation largest / smallest mean pointwise values.","code":""},{"path":"https://jrvanderdoes.github.io/fChange/reference/minmax.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Max / Min for dfts Objects — minmax","text":"","code":"# S3 method for class 'dfts' max(x, type = c(\"Obs\", \"intratime\"), na.rm = TRUE, ...)  # S3 method for class 'dfts' min(x, type = c(\"Obs\", \"intratime\"), na.rm = TRUE, ...)"},{"path":"https://jrvanderdoes.github.io/fChange/reference/minmax.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Max / Min for dfts Objects — minmax","text":"x dfts object data can automatically converted format. See dfts(). type String indicating finding observation ('Obs', default), pointwise values ('intratime'). na.rm Boolean NA values removed. Defaults TRUE. ... Additional parameters stats function","code":""},{"path":"https://jrvanderdoes.github.io/fChange/reference/minmax.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Max / Min for dfts Objects — minmax","text":"dfts object","code":""},{"path":"https://jrvanderdoes.github.io/fChange/reference/minmax.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Max / Min for dfts Objects — minmax","text":"","code":"results <- max(electricity) results <- min(electricity)"},{"path":"https://jrvanderdoes.github.io/fChange/reference/pca.html","id":null,"dir":"Reference","previous_headings":"","what":"Generic pca of Data — pca","title":"Generic pca of Data — pca","text":"Build prcomp.","code":""},{"path":"https://jrvanderdoes.github.io/fChange/reference/pca.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Generic pca of Data — pca","text":"","code":"pca(object, TVE = 1, ...)  # Default S3 method pca(object, ...)  # S3 method for class 'dfts' pca(object, TVE = 1, ...)"},{"path":"https://jrvanderdoes.github.io/fChange/reference/pca.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Generic pca of Data — pca","text":"object Data compute principal component analysis TVE Numeric [0,1] total variance explained. Can use select required components. ... Additional information prcomp.","code":""},{"path":"https://jrvanderdoes.github.io/fChange/reference/pca.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Generic pca of Data — pca","text":"PCA data Principal component data","code":""},{"path":"https://jrvanderdoes.github.io/fChange/reference/pca.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Generic pca of Data — pca","text":"","code":"pca(1:10) #> Standard deviations (1, .., p=1): #> [1] 3.02765 #>  #> Rotation (n x k) = (1 x 1): #>      PC1 #> [1,]   1 pca(electricity) #> $sdev #>  [1] 15.7648276  5.4566134  3.3131199  1.9103753  1.4662820  1.2056876 #>  [7]  1.0177454  0.7990484  0.6785594  0.5478514  0.5231142  0.4919055 #> [13]  0.4750622  0.3618577  0.3368895  0.3138835  0.3043875  0.2756197 #> [19]  0.2581723  0.2229431  0.1983235  0.1827335  0.1671514  0.1439043 #>  #> $rotation #>             PC1         PC2        PC3         PC4          PC5         PC6 #>  [1,] 0.8838149  1.18821610  1.0133383  0.73849608  0.363166392 -2.83124668 #>  [2,] 0.8802625  1.42641245  0.7738438  0.52186412 -0.089357068 -1.34594113 #>  [3,] 0.8603546  1.58895295  0.7165138  0.26097048 -0.570990009 -0.28006662 #>  [4,] 0.8628572  1.61008684  0.7085226  0.24448957 -0.547813810  0.44292774 #>  [5,] 0.8572211  1.57705971  0.6198675  0.18237364 -0.664901152  0.96518917 #>  [6,] 0.8891104  1.38456785  0.3916217  0.16089105 -0.579663823  1.24129043 #>  [7,] 0.9881836  1.09158887 -0.2050656  0.37089841 -0.197079118  1.57706705 #>  [8,] 1.0752530  0.16452457 -1.0946869  0.98409976  0.148817834  1.24307431 #>  [9,] 1.1185797 -0.08549774 -1.4590402  0.93268224  0.544151125  1.19210762 #> [10,] 1.1044366 -0.24196285 -1.5269994  1.23187202  0.949405715  0.01294699 #> [11,] 1.1101850 -0.17837473 -1.1158011  0.52268264  1.091129849 -0.78947056 #> [12,] 1.1282548 -0.13539496 -0.8668421 -0.07718572  0.981683595 -0.82479477 #> [13,] 1.1290478 -0.24112292 -0.7932827 -0.23273757  0.956023099 -0.85643998 #> [14,] 1.1359563 -0.19613676 -0.6030995 -0.83516924  0.551128106 -0.60338854 #> [15,] 1.1186249 -0.22446503 -0.4620350 -1.23685395 -0.002065021 -0.59134656 #> [16,] 1.1179227 -0.26861919 -0.4983122 -1.46194187 -0.699308887  0.03937654 #> [17,] 1.1336536 -0.43853050 -0.4095582 -1.60014647 -1.335206771  0.46341605 #> [18,] 1.1086850 -0.74692374 -0.2664786 -1.16184871 -1.643801128  0.10776867 #> [19,] 1.0048569 -1.25336071  0.3292885 -0.06413389 -1.961906653 -0.92804547 #> [20,] 0.8863114 -1.65512852  0.8349722  1.78315624 -1.614755212 -0.53140519 #> [21,] 0.8601521 -1.60895777  1.3748858  1.78558389 -0.037700314  0.54146342 #> [22,] 0.8334925 -1.20449053  1.7036134  0.63816619  1.158487687  1.01115174 #> [23,] 0.8707183 -0.56694923  1.7237113 -1.04264336  1.752142732  0.51426651 #> [24,] 0.8696013 -0.23845628  1.6914495 -1.73986473  1.407663495  0.51898016 #>               PC7         PC8           PC9       PC10        PC11       PC12 #>  [1,] -1.87985750 -1.29578351 -0.0796499823 -0.3160341  0.62631648 -1.9526936 #>  [2,] -0.53439420 -0.68621707 -0.0082142623  1.3040974 -1.13036158  2.2793899 #>  [3,]  0.72893806  0.30124438  0.4708482982  0.7342717  0.09847758  1.6557597 #>  [4,]  1.03491133  0.68535293  0.0537199241  0.6022584  1.02544106 -0.4794809 #>  [5,]  1.22141414  0.80325679 -0.0860312888 -0.2024994  1.31906839 -1.1834344 #>  [6,]  0.59326463  0.48013897 -0.0255185306 -0.7530045 -0.24753876 -0.4635955 #>  [7,] -0.84560014 -0.60805122  0.1107998635 -1.6947588 -3.12755200 -0.2944541 #>  [8,] -1.98711886 -0.91491670 -0.2093256759 -1.5535784  1.62002462  0.6212895 #>  [9,] -1.31076278  0.05878806 -0.0518928236  1.0404390  0.94105532  0.3363751 #> [10,] -0.07982425  1.19085876 -0.0002711261  1.9667958  0.14756175 -0.2335413 #> [11,]  0.46897838  1.18013621  0.6192016649  0.4883711 -0.88100324 -0.6543505 #> [12,]  0.98499783  0.50225771  0.1597366615 -0.6526585 -0.85068416 -0.3970195 #> [13,]  1.21189267  0.06064318  0.2689501892 -1.1030349 -0.21317810  0.3462911 #> [14,]  1.23602712 -0.53990120 -0.4599207257 -1.1194962  0.34524060  0.2519537 #> [15,]  0.90197326 -0.97717801 -1.1869887090 -0.7823058  0.84127545  0.4964208 #> [16,]  0.22817603 -1.32726848 -0.7370031116  0.6022995  0.18666546 -0.2801186 #> [17,] -0.36759603 -1.02355916 -0.1593963936  1.3975063 -0.32226051 -0.3776442 #> [18,] -0.64392986  0.02519441  1.0168500980  0.9993579 -0.18100373  0.1361737 #> [19,] -0.76194858  1.66152341  2.2740476432 -1.0561881 -0.20126061 -0.4731903 #> [20,]  0.12994087  1.07958045 -2.1073947765 -0.9040504  0.61624775  0.8567100 #> [21,]  0.97991381 -1.21965570 -0.9828988190  0.7930026 -1.38044909 -0.1633191 #> [22,]  0.79923862 -1.64359820  1.9500728534  0.4288698  0.76207290 -1.1753545 #> [23,] -0.64745910  0.57213367  1.1911754849 -0.6349166  0.65025292  2.2326908 #> [24,] -1.45894869  1.90735216 -2.0488268620  0.4932261 -0.53008103 -1.0760760 #>              PC13        PC14         PC15        PC16        PC17        PC18 #>  [1,]  1.06407310 -0.72498499 -0.008760875  0.61092625  0.20332016  0.14652101 #>  [2,] -0.72183813  1.36823181 -0.126047969 -1.36055669 -1.94188873 -0.33854705 #>  [3,] -1.36884162  0.01127148  0.026654168  1.25656010  2.96247908  0.45150163 #>  [4,] -0.07060401 -0.55895833  0.311950321  0.92770373 -0.08190543  0.03940518 #>  [5,]  0.32679619 -0.63906439  0.286330409 -0.60910147 -1.11100403  0.14234577 #>  [6,]  0.68154211  0.24765259 -0.525260966 -1.38057310 -0.91516848 -0.29808863 #>  [7,]  1.18901645  0.56035903 -0.422006178  0.82257777  0.81242902 -0.19260793 #>  [8,] -2.01318055 -0.77647829  1.062766766 -0.94303029  0.46577180 -1.28230827 #>  [9,]  0.14115999  0.74778059 -0.990602293  1.45772810 -1.30273080  2.84994470 #> [10,]  1.41521658 -0.30442879 -1.375643085 -0.63492791  1.17349260 -1.86231678 #> [11,] -0.22468192  0.05727930  1.097429173 -0.74364170  0.29025242 -0.22819009 #> [12,] -0.81318615 -0.11117463  1.857880559 -0.57820444 -0.66193189  0.90726751 #> [13,]  0.06716509 -0.14928905  0.598701191  0.68690413 -0.10815969  0.45977181 #> [14,] -0.43673311  0.30944836 -0.961446121  2.05337586 -0.64754650 -0.79304145 #> [15,]  0.05055485  0.25375217 -2.300857033 -0.77465247  0.05249007 -0.59604065 #> [16,]  0.53913795  0.18625421  0.133561750 -1.88243777  1.31548670  1.33725359 #> [17,]  0.56846729 -0.33466362  1.471959151  0.09162624  0.40706365  0.53419517 #> [18,]  0.10276493 -0.41539894  0.752483507  1.53735254 -1.40660287 -2.15466276 #> [19,] -1.06170151 -0.12045340 -1.738854039 -0.78507027  0.19082862  0.94413188 #> [20,]  1.39067124  1.55043986  1.252697670  0.28708217  0.33192372 -0.05894600 #> [21,] -1.03379614 -2.68716085 -0.739719389  0.03112733 -0.47812935  0.36111286 #> [22,] -0.29570723  2.49054089  0.200989989 -0.07817419  0.38686586 -0.53229453 #> [23,]  2.06629382 -1.56130350  0.344080965 -0.34023821 -0.01221821  0.36693190 #> [24,] -1.54479917  0.67400049 -0.253910041  0.22898066  0.16055838 -0.21765726 #>              PC19        PC20        PC21          PC22        PC23        PC24 #>  [1,] -0.31376473  0.57838490 -0.12758557 -0.0086797752 -0.10954655 -0.08490261 #>  [2,]  0.05310761 -1.09795740  0.33492218  0.2664855629 -0.02145330  0.17772853 #>  [3,] -0.49712600  1.33701141 -0.62928766  0.6458668452 -0.55774574 -0.14919379 #>  [4,]  1.51344212 -1.48945756  0.81602464 -2.8158798300  1.41235807 -0.18655176 #>  [5,]  0.63967236 -0.85590516 -0.85878181  2.9238246839 -0.98127405  0.21735739 #>  [6,] -2.59092353  2.33958764  0.66589254 -1.1992654921  0.30926218  0.10989917 #>  [7,]  1.14054567 -0.72896132 -0.32207557  0.2272589281 -0.05943199 -0.13427266 #>  [8,] -0.07331844 -0.40119245  0.26435291 -0.1159913638  0.13894659  0.15539493 #>  [9,]  0.10623017  0.73796537 -0.34883145  0.0785308358  0.16640040 -0.06311677 #> [10,] -0.70944999 -1.06155162 -0.01757031 -0.2327932168 -1.13195532 -0.63197669 #> [11,]  1.51165068  1.60932205  0.99963880  0.9893916055  1.93226811  1.85214504 #> [12,]  0.65389514  0.55701593 -0.69450530 -1.3782418829 -2.50992283 -1.61607245 #> [13,] -2.40300991 -1.83247276 -1.83954509  0.1806939789  1.92300764  0.28691052 #> [14,] -0.34497046 -0.14648721  3.06081909  0.8414927527 -0.87669587 -0.11879192 #> [15,]  1.61939321  0.88924885 -1.99565564 -0.8473256026 -0.08391523  1.19244401 #> [16,]  0.17076735 -0.26529321  1.06541050  0.7780126185  1.35942980 -2.42393225 #> [17,] -0.82241200 -0.69833827  0.35816612 -0.5876908223 -1.44150733  2.75901437 #> [18,]  0.24168349  1.18376723 -1.15517619  0.3446241341  0.79704476 -1.51556532 #> [19,] -0.03705237 -0.81557895  0.43570933 -0.1537449873 -0.27692370  0.19446263 #> [20,]  0.17857444  0.11194746  0.07025936  0.0003149584 -0.02255207  0.02876060 #> [21,] -0.13625260  0.21172396  0.03725189  0.1185745311  0.21759267 -0.01427272 #> [22,]  0.02713561 -0.07330624 -0.27863503 -0.1264235695 -0.14510934  0.02752272 #> [23,]  0.45874186  0.21614034  0.41754292  0.0080266390 -0.20538839  0.03782087 #> [24,] -0.40335752 -0.28189598 -0.26526668  0.0988722253  0.18784832 -0.11490369 #>  #> $center #>  [1] 39.89751 34.74526 30.61567 29.96405 28.90077 30.25688 34.55405 41.07956 #>  [9] 43.83340 46.57452 47.09542 46.53479 46.91901 46.30107 44.01841 41.81077 #> [17] 41.14348 42.93121 46.06948 49.43301 51.86679 52.98548 49.68189 43.93663 #>  #> $scale #> [1] FALSE #>  #> $x #>                PC1           PC2           PC3          PC4          PC5 #>   [1,] -36.8058353   3.598326961   1.485319899 -0.278028440  0.135234331 #>   [2,] -15.9307894  -9.388079074  -5.677890801 -3.315274103  0.238170849 #>   [3,]  -2.2484150 -23.089449306   5.642369663  3.214941869 -2.293856678 #>   [4,] -37.6711108   2.634082254   1.779057270  0.335134581 -1.483681323 #>   [5,] -38.3015488   1.508903984  -0.224439803 -0.953328949 -0.888927414 #>   [6,] -29.4996987  -4.744782082   8.308715165  0.158427120  0.294877483 #>   [7,]   6.2098490 -20.308060210   1.546973780  1.213589310  3.121373560 #>   [8,]  -0.6155039  -9.101911447  -0.120509391  0.387362388  0.929051844 #>   [9,]   7.4143136 -19.896638196   2.054161368 -1.371739402 -0.932996643 #>  [10,]  14.5490816 -13.960897135  -0.111099646  2.496337586  2.889870253 #>  [11,]   7.7430048  -3.190284499   4.614513494  2.284503746 -2.344312302 #>  [12,]  -4.8084093   1.299555357   3.176014928 -1.088937574 -0.560941028 #>  [13,]  -2.7541028   1.615162007  -6.998732557  3.619184644  0.003727419 #>  [14,]  -7.8429682 -13.495704810  -4.310209805 -3.000443807  2.600199201 #>  [15,]   8.3939949  -2.910486762  -4.995363492  0.837987135 -1.267043565 #>  [16,]   0.2644320  -7.584048806  -3.335825924 -0.277513857 -0.642918285 #>  [17,]  -0.8678417 -12.775894198  -1.729758385  0.325820863 -1.533323179 #>  [18,]   1.3135643  -2.948663001   3.480291018 -0.304197349  0.263301738 #>  [19,]  -8.5354013   6.215532488   0.246369272  1.239263443  0.091446090 #>  [20,]  -3.7143598 -14.100709304  -1.201044862 -0.896280596  0.565088389 #>  [21,]   8.7815473  -1.651438729  -1.233715200  1.187089386  0.064380696 #>  [22,]   5.2089082   0.021707712  -2.958732535  0.381385018  0.176099304 #>  [23,]   2.5426480  -2.075949292  -0.881458702 -0.361188816 -1.303754511 #>  [24,]  -1.4757169   1.308906420  -0.690679028  0.506913423 -0.332533759 #>  [25,] -22.1952792  -5.989963315   7.707237465 -3.417725693 -0.357489161 #>  [26,] -16.2879362   5.651239129  -1.526142732  2.018296526  2.881948020 #>  [27,] -26.4048338  -5.739470741  -1.429902280  3.779812296  2.178775904 #>  [28,] -37.1416411   1.538315879  -3.808392522  0.934737382 -1.675205711 #>  [29,] -12.3644067 -10.243647629  -7.620446086 -0.436314820  2.002289153 #>  [30,] -14.0083464  -2.167575335  -1.254431520  3.082894718  0.988824095 #>  [31,]  -2.1584762  -4.446500370  -4.199346826  0.196858019  0.548120530 #>  [32,] -32.0110535   0.046197440   4.602800406  1.164735222  0.297214758 #>  [33,] -16.0964035  -6.123681994   3.915133634 -1.915981696 -0.708294256 #>  [34,] -15.4824725  -7.147944973  -2.136436908  0.843945593  1.433924273 #>  [35,] -16.8259434  -2.318554652  -7.946657593  3.213333106 -1.110074515 #>  [36,] -30.8548408  -7.548090523   5.923562646  2.851086485 -2.364057002 #>  [37,] -36.8811072   2.591712116  -5.329183891 -0.512758921 -0.833202607 #>  [38,] -38.9376094   2.435262131  -3.215103912 -0.652751630 -1.975015472 #>  [39,] -41.0941516   4.076895474  -2.872297039 -1.514171735 -2.144294120 #>  [40,] -41.6463186   4.488088934  -3.636425697 -1.684728030 -2.212602970 #>  [41,] -39.0367055   1.947934713  -2.217138722 -0.676798878 -2.145254278 #>  [42,] -23.5292476 -12.979456901   9.184644756  0.907831559 -2.022586881 #>  [43,] -20.6486898  -1.076641109 -13.880629027  3.579220567  4.548322149 #>  [44,] -35.7891277  -1.814905836   0.249221167  1.511916262 -2.759416640 #>  [45,] -38.9280670   2.954173562  -3.891557787 -1.195603574 -1.533160404 #>  [46,] -24.8550960 -13.524046468  12.535873023  5.634228189 -1.171520650 #>  [47,] -20.3509107  -5.182842709  12.180766561  0.394020482  5.372715560 #>  [48,]  -2.1676539 -22.699587376   6.556963217  5.766197346  0.424307215 #>  [49,]   4.3272041  -1.391983805 -11.487180292  6.454869313  5.983654819 #>  [50,] -14.3638990  -9.082410198  -2.991247233  1.365995487 -0.828552360 #>  [51,] -31.8318629  -1.066843769  -3.283263140  3.775309728  1.007002713 #>  [52,] -25.4389639  -5.771105391  -2.843831611  2.924079310  0.129410619 #>  [53,] -25.3181523  -1.518726504  11.781050000  4.664409488 -1.866527933 #>  [54,] -36.4663118   4.080761315   2.345728529  0.107852225 -0.453213139 #>  [55,]  -6.9297861 -14.336156368  -4.717814116  9.542789312 -0.101939765 #>  [56,] -23.8962607  -2.542415712  -3.703777759 -0.434266676 -0.315991960 #>  [57,] -18.1079283  -6.785531701  -1.703328116  0.271053578  1.489092492 #>  [58,] -13.0570372  -3.356670168  -2.773855709 -0.321351064 -2.354997344 #>  [59,] -36.4121677   2.662658471  -3.175890944 -0.845584686 -0.943726790 #>  [60,] -39.8503670   4.730243668  -3.535757610 -1.410100563 -1.806445656 #>  [61,] -41.3105394   4.647199251  -3.867682494 -1.846894548 -2.000106373 #>  [62,] -40.8311506   3.934198630  -3.793912365 -1.334211947 -2.189381481 #>  [63,] -39.3049576   2.782711305  -3.097737033 -0.921587068 -1.889883498 #>  [64,] -25.8260029  -8.807216987   3.855599832  2.375143354 -0.864777000 #>  [65,]   3.1821867  -8.773694792   3.906929554  6.369006280 -0.259227007 #>  [66,]  -0.1119543  -2.611488134  -0.294685281  3.646300430 -0.139667584 #>  [67,] -27.5456083   2.943698453   0.723332098  1.923807717 -1.119519346 #>  [68,] -33.9253389  -2.383610820   6.148826001 -0.023264810 -0.684098520 #>  [69,]  -9.3139174  -5.555156463  -5.346733396  1.608101164 -0.973306475 #>  [70,] -12.4001073  -4.743247694  -4.762395348  0.023177665 -0.318481903 #>  [71,]  -3.9348993  -0.290032678   0.946273208  2.296494738 -2.310876006 #>  [72,]  -0.9994724  -0.635020119   1.122628257  3.190588957 -1.577504230 #>  [73,]  -0.8915880   1.476416366  -1.390943383  0.528497733 -1.099944489 #>  [74,] -12.9817328   6.685302685   0.882484901  1.361771488 -1.799487423 #>  [75,] -26.4427489  -1.134537050   5.858497447  0.193581516  0.425617161 #>  [76,]   3.0610706  -4.628764111   3.887693247  4.398184110 -0.323057898 #>  [77,]  -3.2247836   5.028168412  -2.426925909  2.220556092 -1.335769841 #>  [78,]  -7.7101300  -8.140494408  -0.962361287 -2.201290009  0.910638281 #>  [79,]  -0.9021323   3.682402836  -1.173811333  1.036590973 -1.743479604 #>  [80,]  -6.9345379  -0.417364180  -2.129160393  0.780957171  0.123233078 #>  [81,] -24.6293425   6.769400989   0.654789403  3.773113329  1.726698040 #>  [82,] -25.4963328  -2.839554004   7.559192603 -0.769226738 -0.290356797 #>  [83,] -12.7879408   4.334064667  -3.952545832  2.125123730 -0.136567847 #>  [84,] -32.5318946   2.980979307  -3.059796337  0.950519257 -1.161711338 #>  [85,] -25.9670337  -4.651633358   2.621985783 -0.816640262  1.042268200 #>  [86,]   8.9187342  -6.823918099   3.489672902  9.566075325 -5.034838153 #>  [87,]  -5.1057241   1.506979649  -0.657461848  0.001501978 -0.560230925 #>  [88,] -14.9451782   2.481032518   2.055602185  0.555344286 -0.876111821 #>  [89,] -16.7567872   4.007479516   2.660688342  0.411756268  1.847078559 #>  [90,]  -7.0254281   0.816527959  -3.721823863  0.584130332 -0.437862438 #>  [91,] -20.6542556   2.937982097  -4.090701606  0.050337108  2.209351658 #>  [92,]  -7.9260597  -3.341595730  -2.662319444 -1.334605111  1.159379349 #>  [93,] -11.2408948   6.079699963  -5.696369984  2.469849460  4.121411314 #>  [94,] -32.1328485   1.933736553  -1.532588933 -0.477158079  0.881979278 #>  [95,] -22.6436746   1.018949862   2.006554477 -0.737852736  2.999820481 #>  [96,] -19.7799829   3.970013183   4.894307432  0.203861423  1.257679325 #>  [97,]  -7.7814860  -2.904214404  -2.835202115 -0.794009358  1.667757057 #>  [98,]  -6.4428070   3.598844226  -2.013005009  0.746209962 -0.468404844 #>  [99,]  -9.1777587  -2.180402040  -2.676160872 -2.214995714  0.175471491 #> [100,]  -8.4239330   2.671774280  -1.380823330 -0.553232923 -0.633692089 #> [101,] -13.3958602   4.683047370  -2.272403620 -0.208496419 -0.639071879 #> [102,] -29.3738503   5.020137455  -1.449148028 -1.120155950 -0.186711576 #> [103,] -30.4348137   2.228245409   4.097864435 -0.963105457  1.821314261 #> [104,] -15.5565560  -3.392460836  -3.630048585 -1.967124615  2.484090900 #> [105,]  -4.9187748   2.763558615  -1.251606726 -0.462429780 -0.410714549 #> [106,]  -4.8872698   4.867011015  -1.411063799  0.223513238 -0.864558526 #> [107,] -17.1664993   7.580423867  -1.866579902  1.222621532  1.095504183 #> [108,] -18.5427493   7.368986555   2.218107981 -1.124043862  0.439038156 #> [109,] -18.6147315   3.924837204  -1.853868132 -3.207710768  0.059260508 #> [110,] -26.2720417   0.828795072   3.295137405 -2.460921776  2.068392460 #> [111,] -11.1117597   3.568552452  -1.210339501 -1.098255949  1.021243730 #> [112,] -13.3169557   2.898985005  -3.454528632 -0.129398075  1.706782408 #> [113,]  -4.8580617   1.155315464  -1.212837404 -1.226175160  0.156294351 #> [114,]  -9.9690889  11.792618738  -4.665709155  4.579353424  2.256832389 #> [115,] -30.2410737   3.400701541  -3.131526832 -0.569473554  1.201463582 #> [116,] -32.2820379   5.892236565  -2.277334730 -1.288788604  0.355888285 #> [117,] -27.1099392   3.152074954  -0.426930228 -2.355019024  3.869498024 #> [118,]  -6.7597873   2.229137452  -1.948585274 -0.634414795  0.970838169 #> [119,]  -6.2569592   4.569732910  -2.287090708 -0.134348839  1.693101051 #> [120,]  -4.4405666   4.850225352  -2.524794732  0.320046062  0.192077574 #> [121,] -13.6499275   8.103659428   0.310695595  0.299785926  0.432139757 #> [122,] -18.9951100   2.332032580  -4.315741910 -0.757465346  0.764522098 #> [123,] -14.6266201   2.796769735   2.342386497 -1.915252212 -0.140084974 #> [124,]  -3.6686456   0.654198130   5.488591740 -3.086950761  1.835373397 #> [125,]   2.8761696   4.404689934  -0.821474933  0.187717337 -0.471624954 #> [126,]   4.4919163   2.669846575   0.128165770  0.358902291  0.007809919 #> [127,]   7.9384259   2.318245750  -2.516887726 -1.020421854 -1.262034076 #> [128,]   6.2189556   2.990170284  -1.566074289  0.062082346  0.124060449 #> [129,]   9.1530058   0.937945140  -0.914626624 -1.060757934 -0.625676366 #> [130,]   4.9310405   6.318220073   1.570141326 -0.112933997 -0.984525425 #> [131,]  -1.4784089   5.918178902   3.677784794 -0.336983324  0.704501228 #> [132,]   4.8730225   4.290093419  -3.618671722 -0.050540750  0.067026524 #> [133,]  -3.0804324   2.797265204  -3.775432661  0.154278442 -1.222652554 #> [134,]  -0.6560784  -2.965099779  -2.092380159 -2.079616287 -0.057275999 #> [135,]   0.4771396  -0.157076390  -3.341158259 -0.748506970 -0.339395562 #> [136,]  -3.9800616   0.299433145  -3.192202140 -0.478853222 -0.457946295 #> [137,]  -9.9313345   2.208353335   2.145305405 -1.054891881 -0.101456361 #> [138,]   2.4168942   4.801300078   3.132584298 -0.647906422  0.554465240 #> [139,]   1.6984041   3.405201428  -1.488066513  1.390162567  1.723180960 #> [140,]   2.7440838   3.633827259   0.921291270  1.353235969  0.349243745 #> [141,]  -4.8826851   6.172290961  -1.026930289  3.122962216  0.211992578 #> [142,]  -5.5862982  -3.238193691  -0.454533413 -2.506605997  0.760449702 #> [143,]  -0.1216053  -2.808917066   0.007079489 -2.074643847  1.297150191 #> [144,]   4.5082555   8.476299055   0.774080743  0.014374844 -0.157794824 #> [145,]   1.0238167   7.420933068   2.022955983  0.245505776  0.860890565 #> [146,]   4.0671972   1.049608288  -0.749778255 -0.982592757  1.061781818 #> [147,]   6.9689444   2.191272361  -1.389464097 -0.413645984  0.358895654 #> [148,]   6.8720561   5.956649681  -0.864674848  0.540983691  0.436613366 #> [149,]   6.1195032   4.133525610   1.141314589  0.404611116  0.505333679 #> [150,]   8.0530316   5.516475721  -0.950759424 -0.078864629 -0.272307014 #> [151,]   1.9280209   6.907059618   0.192430252 -0.504157911 -1.040757347 #> [152,]  -3.9070847   1.250309207   3.271570092 -3.046716985  1.893240664 #> [153,]   7.4503613   2.663957830  -0.845973203 -1.342638329 -0.718516845 #> [154,]   9.1030628   5.537576412  -1.477471647  0.563833509 -0.410831369 #> [155,]   7.9432734   3.348827856   1.058940023 -0.278156552 -0.490800385 #> [156,]  10.0954095   6.105009452   0.819294987  1.017450199 -0.076201754 #> [157,]   1.5597375   6.437368312   1.259181585  2.646360933  0.608244625 #> [158,]  -1.6865249   7.129188320   3.290728571  1.110281812  2.981320535 #> [159,]   2.2524210   7.176078797   4.192105468  0.640588056  2.193111404 #> [160,]   6.5727285   5.454155152   0.769374004  0.727633375  1.284432972 #> [161,]  11.4280955   1.058237745  -2.405028971 -1.406860830 -0.835281102 #> [162,]  13.3233066  -0.027395067  -0.753920175 -0.853431550 -0.212456706 #> [163,]  16.3619818   1.414768898  -0.126841061 -0.866297718 -0.962616797 #> [164,]  15.1247508   3.076324014  -3.131611847  0.587550064 -0.836050495 #> [165,]  -0.9371337   7.152464203  -0.524720520 -0.744878714  0.074306316 #> [166,] -23.0794862   1.291736188   5.230823719 -2.432950623  2.406414065 #> [167,]  -0.2887534  -6.251829317  -2.714262620 -4.418427082 -1.125302332 #> [168,]   9.4205613  -1.676911129  -2.409911829 -2.549109218 -0.569629426 #> [169,]  18.6168331  -0.208899943  -1.055453078 -1.596944337 -0.652561073 #> [170,]  17.4412577   1.574486305   0.412338857 -0.755732703 -0.182787724 #> [171,]  20.1891637   4.443337233   1.541037978  0.181495844  0.120891089 #> [172,]  12.5318543   5.301282957   4.498237184  0.965432293  2.138375020 #> [173,]   8.4628806   5.411758788   4.875484510 -1.196095869  2.308462390 #> [174,]  21.2949907   2.580191217   0.228760857 -0.208750732 -0.334078698 #> [175,]  22.3445455   5.820346426   0.957346127  0.631381614 -1.724064828 #> [176,]  14.3241526  -1.382353870   0.755033123 -2.028242666  0.093069401 #> [177,]  18.3043087   1.129453530   0.611156363 -0.548760609  0.445794680 #> [178,]  20.5277857   6.659537577   1.027919232  1.451685768 -0.062549910 #> [179,]   1.3331567  11.497987743   3.425289741  2.560474293  1.901587750 #> [180,]  -6.5210926   2.608956564   4.243722796 -3.250508208  3.698880935 #> [181,]  11.5506274   3.793080112  -2.731501568  0.776189475  2.333062405 #> [182,]   7.8757690   1.492760003  -0.855645895 -0.723050249  1.912600675 #> [183,]   9.7300907   5.396158791  -2.427637102  0.361335930  1.030513433 #> [184,]   9.9578749  -1.951551775   0.636292225 -2.265600207 -0.592208663 #> [185,]  13.9934750   3.882897343   1.742224079 -0.249555230 -0.999454970 #> [186,]   2.8638127   8.143257836   0.079675962 -0.269243480  2.187544769 #> [187,]  -4.6238794   4.364776591   1.931053370 -3.160980029  1.034615653 #> [188,]   4.1970226   1.263161501  -2.258540588 -1.331512175  1.789714727 #> [189,]   7.2665265   3.725378535  -4.789499703 -0.526890487 -0.344049673 #> [190,]  -2.3875260   0.583895723  -1.452154870 -2.007430215 -1.007424489 #> [191,]  -3.0345528  -1.197196951  -1.541217041 -2.735879273 -0.381100994 #> [192,]  -0.1460527  -1.822876321  -1.824657413 -3.070751971 -0.650594868 #> [193,]   2.6160205   1.986389120   2.269220345 -2.626071914  2.927315466 #> [194,]   2.6059173   5.524481159   2.959411258 -2.186097547  1.902258695 #> [195,]  12.9624134  -0.328508651  -0.614220770 -1.270385528 -0.466451921 #> [196,]  13.9876968   1.766970961  -0.084113319 -0.104098163 -0.815895352 #> [197,]  12.6900889   1.750201359   0.358945256 -0.660074847 -1.137998228 #> [198,]   6.1022972   3.873830036   2.498616620  0.866626004  1.890491412 #> [199,]   9.5141587   7.901997424  -1.981236093  2.568945752  1.112613369 #> [200,]   0.7305315   6.796656031   1.222527793 -0.204819034 -0.003446145 #> [201,]  -6.4545701   5.813989237   3.947541827 -1.635708624  0.983033461 #> [202,]  11.8245956   1.948000990   0.664921083 -0.891961294 -1.090896870 #> [203,]  11.5177211  -0.442567598  -0.145627940 -2.555411695 -0.904616667 #> [204,]  14.6716046   0.582568007  -0.670640308 -1.432452587 -0.621716189 #> [205,]  12.3851201   2.691458517  -1.096666769 -1.416802314 -0.519370551 #> [206,]   7.1565263   1.313683757  -1.300953895 -1.587737727 -0.843498861 #> [207,]   3.1227749   4.073841203   0.714524234 -1.392263862 -0.687769202 #> [208,]   0.8411048   5.186156638   3.699834388 -1.620845644  0.052799198 #> [209,]   4.4278962   4.637246599  -4.965325815 -0.394569665  0.749222584 #> [210,]   2.6503915  -0.694588218   2.097600836 -2.422215849 -2.353018304 #> [211,]   7.4773414  -1.423997871   1.286823908 -3.111519339 -0.815368055 #> [212,]  12.2269417   2.193131656   0.103464518 -0.587956390 -0.567290623 #> [213,]   9.3575848   6.256266894  -1.783841806  0.345478701  1.913103656 #> [214,]   3.1444372   3.795240329   3.417483335 -2.375108214  1.076508666 #> [215,]   3.6139213   6.777172567   2.732340986 -0.547138618 -0.862820336 #> [216,]  10.9820047   3.803022497  -1.681636172 -0.680053695  0.424253891 #> [217,]  10.9755588   2.171432507  -1.104650000 -1.347958082 -1.445735041 #> [218,]   9.5214115   3.290061576  -1.334911452 -1.285594574 -0.284600249 #> [219,]  11.1547713   1.464627430   0.381077693 -1.685815224 -0.978266831 #> [220,]   8.4176453   3.716253514   0.771794782 -1.160482458  1.834776409 #> [221,]   5.8710349   6.528655377   1.493111557  0.197460804  0.523510058 #> [222,]   1.1849420   5.151013519   2.004484745 -1.384003243 -1.560992414 #> [223,]   8.7641249   3.247498814  -0.751048793 -1.578999478 -0.589291199 #> [224,]   6.3304460   4.811700790  -0.799485355 -0.018581158  1.172204669 #> [225,]   2.1911608   2.683548841   1.487829716 -1.293783989 -0.029135668 #> [226,]   7.4186374   1.113159181  -0.018216784 -1.461791286 -1.787706740 #> [227,]   2.8055784   5.935985596   1.455904085 -0.671648217 -1.555111037 #> [228,]  -0.5914165   3.103787830   1.650160690 -2.137937202 -1.387078448 #> [229,]   0.7995822   3.777655098   2.505853218 -1.608316941  1.056425322 #> [230,]  10.3061218   2.220496507  -0.105453021 -1.117762184 -1.036101451 #> [231,]  10.3543371   2.643331487  -0.528820135 -1.331072540 -1.042034029 #> [232,]  12.1845305   3.136130384  -1.053184311 -1.095272815  0.520495395 #> [233,]  12.6489602   2.420287561  -0.857560963 -0.806688681  0.155142237 #> [234,]   9.0869320   4.017401950  -1.280779192 -0.374384524  0.404163092 #> [235,]   5.8516517   4.076556141   0.943108329 -1.094874148  0.736997469 #> [236,]   4.1439198   4.871508737   3.978614765 -1.097032999  0.361182808 #> [237,]  12.3960838   3.767442010  -1.366997876  0.396169889  1.565130856 #> [238,]   6.4966265   2.216863745   0.986885021 -0.451707265  1.704973855 #> [239,]  12.2260800   1.085986480   0.610141312 -0.902422638 -0.025800148 #> [240,]  14.9758169   2.319777084  -0.402679229  0.099241911 -0.197161927 #> [241,]  15.3590386   2.039374474  -1.522000712 -1.038522530 -0.456727057 #> [242,]   6.3713411   3.202597452   1.901766185 -1.682681233 -0.815992364 #> [243,]   4.2567884   3.619925736   4.652657751 -0.794385002  0.202225059 #> [244,]  12.7742681  -2.963199231  -0.861580507 -1.835708756 -0.360270548 #> [245,]  16.5059330   1.527183515   0.414964044 -0.054623046 -0.366653485 #> [246,]  18.0567671   2.135506483   0.191932423 -0.010730737 -0.261394358 #> [247,]  25.0830452   2.682798710   1.064557715  0.246445841 -1.099762471 #> [248,]  21.0077677   2.722912864   0.322204586  0.236456801 -0.364878829 #> [249,]  15.7353653   5.822693169   4.058142084  1.840022100  0.657025314 #> [250,]  10.1127830   5.403029290   4.982419793  0.053818392  1.800525856 #> [251,]  20.1411710   0.207045510   1.041354996 -0.559276914 -0.539709591 #> [252,]  23.1658542   3.116370927   1.398072279  0.130962623 -1.233369454 #> [253,]  19.4679313   4.437757120   0.555589773  1.544412350 -0.251369275 #> [254,]  14.5520402   0.569507816   1.196408145 -0.571804354  0.006531366 #> [255,]  17.4324462  -0.931644813   0.258292472 -1.142179307 -0.488915897 #> [256,]  14.4093099   3.776585648   2.180386608  0.852237235  1.368982117 #> [257,]  11.5920104   6.370380923   5.157818963  1.713363875  2.137188700 #> [258,]  19.0830206  -1.746226092   0.908302621 -0.493534088 -0.146616238 #> [259,]  10.0012417   6.343993062  -1.200432261  3.058512072  1.292932606 #> [260,]  10.1386456  -0.209172584   2.345888618 -0.265764624 -0.821931851 #> [261,]  12.8786859  -1.708313330  -0.182885232  0.128958304  1.408806436 #> [262,]  16.6266618  -2.464037562   0.046374811 -0.734925636  0.677568731 #> [263,]  14.6839317   0.169271904   2.504365348 -0.550090113  0.831042502 #> [264,]  13.8953914   4.521384648   3.925462277 -0.410563113  0.487323785 #> [265,]  18.0682741  -4.455687563  -2.281382579 -2.019006754  0.353548423 #> [266,]  20.7766934  -2.164191549   0.194224230 -0.703876241 -0.064731067 #> [267,]  18.2405726  -0.710443132  -1.533560570  0.248487764 -0.597826422 #> [268,]  17.1454666  -3.996099588  -0.830678465 -2.244314747 -0.717982359 #> [269,]  18.3712452  -1.018433057  -1.612509084  0.202362706 -0.546804366 #> [270,]  11.4885028   1.775028571   3.128639589  0.078542863  1.816740621 #> [271,]  11.1936035   1.135026494   6.200245519 -0.184833151  1.931069214 #> [272,]  24.1729715  -0.785929824   0.317395076  0.056934690  0.502802061 #> [273,]  24.9812841   1.956309871  -0.384735875  1.435712643 -1.259483436 #> [274,]  19.6998018  -2.903740119  -2.816791204  0.163949407 -1.483813192 #> [275,]  20.3203228  -4.660749273  -0.958064171 -1.568428317  0.019685432 #> [276,]  27.9071356   0.108265296   0.146698760  0.748621358 -0.039425491 #> [277,]  20.2196314   4.223654292   0.629527986  2.167017674 -0.442754760 #> [278,]   4.6440826  -4.450361407   7.364546068 -1.404862962  1.766585423 #> [279,]  11.8425282  -6.179751398  -2.500170799  1.282629555  1.487030350 #> [280,]   7.3654058 -10.467484528  -3.588112563  0.319165495  2.126028945 #> [281,]   7.0360984  -6.459014362  -2.056206430  2.044713728  2.110453522 #> [282,]  12.3334344 -11.464495366  -0.322070704 -1.554613743  2.442028577 #> [283,]  28.9252553   3.328427159   0.504800453  1.391156457  0.140832775 #> [284,]  20.4089210   4.183724900  -0.013708106  2.747123244  0.986930740 #> [285,]  -0.8325410  -1.062532803  13.866162247  2.272386899  3.714523038 #> [286,]   7.4919528  -5.749810894  -2.638615188  2.660962246  3.889565598 #> [287,]  15.1358412  -2.756687942  -5.533715957  2.204690552 -0.810757184 #> [288,]   1.8970225  -6.964779558  -4.050064570  1.829538198  0.390037073 #> [289,]   1.6102335  -8.754097792  -4.178627153  1.329835843  3.649858220 #> [290,]   1.0724129  -4.161706942  -3.566168140  2.665926117  2.430008052 #> [291,]  -1.7856072  -1.301605205   4.856567371  1.466595671  3.373315005 #> [292,]   1.1836208   0.903670557   4.001278086  0.379819388  2.062922196 #> [293,]  16.5482976 -14.335912391   0.460749785  0.132360719  2.228138476 #> [294,]  22.8706571   6.398621949  -1.740973951  3.866276757 -1.220676986 #> [295,]   9.5715577  -9.994190575  -1.638334639 -1.718692257  1.521696420 #> [296,]  19.0798576  -0.921789923  -1.706229310  1.341089542  0.262646068 #> [297,]  19.0751604  -7.599366137  -1.915742609 -1.723349901  1.437789315 #> [298,]  14.1704135   1.444089205   3.460808975  1.289842525  0.606356425 #> [299,]   7.0936961  -0.316150670   6.739023211 -0.609897850 -1.768187180 #> [300,]  22.2197884  -1.645451442  -0.322257506  0.890855009 -0.582550380 #> [301,]  19.0462636  -4.012019474  -1.472319376 -0.628002229 -0.519479972 #> [302,]  21.6614574  -6.124401687   0.326680400 -0.199767402  0.084359888 #> [303,]  21.1877901  -2.646797213  -0.256793553  0.807515792 -0.669189930 #> [304,]   9.5648904  -4.948548132  -0.457196810 -0.380041183  0.571561813 #> [305,]  14.7195221   1.973328814   3.686167323  1.569651835 -1.195902005 #> [306,]   3.1554786  -0.871281729   7.167972456 -0.449508815 -1.402096464 #> [307,]   2.7310941  -0.623590034  -1.405571168  3.299671410 -0.531979864 #> [308,]   3.3000260  -5.735304991  -2.137063956  1.767778089 -0.993334322 #> [309,]  13.4314773 -10.410936258   2.317760793  1.252714885 -0.696378009 #> [310,]  16.0304314  -0.754158427  -2.309637883  2.345680993 -1.848653403 #> [311,]   8.7179114 -14.342336069  -0.969754087 -2.343836253  1.179491888 #> [312,]   5.7307368   6.846993139   5.125822130  5.038440190 -0.854611304 #> [313,]   5.7070781  -2.624997603   4.871959959 -1.327587322 -0.302028802 #> [314,]  15.4292754   1.156971202  -1.562946483  2.519124255 -1.765200749 #> [315,]   0.9682594  -3.057724574  -3.270305162  1.098046601 -0.237649482 #> [316,]   3.4907538  -9.416609300  -2.596805303 -2.187509906 -1.824423242 #> [317,]   3.8602363  -3.625558301  -3.540124451  0.726654553 -1.115814752 #> [318,]   4.3372431  -6.156984405  -3.972234602 -0.605886290 -0.308044268 #> [319,] -19.8025134   2.615322736   5.293921019  3.789577653 -4.050515394 #> [320,] -26.2709871  -2.648209591   4.155539506  0.023470599 -1.949956055 #> [321,]   7.3485776 -14.639064256  -0.524637122 -1.906821944  0.420926310 #> [322,]  13.4894297   1.828784693  -0.613615900  1.663123217 -2.020369563 #> [323,]  11.1627313  -0.204420330  -3.853801871  0.537060003 -2.420842519 #> [324,]   2.4608745  -2.497927248  -1.374413177 -0.629929276 -3.059203794 #> [325,]   5.5313505  -2.380562575  -2.624859616 -0.929132839 -0.887930065 #> [326,]   2.5633508   4.270392504   0.138988590  0.742646615 -1.453963356 #> [327,]  -7.1442426  -6.404266350   7.065288968 -2.710363155 -0.682721985 #> [328,]  15.6742869  -4.587888250  -1.492390484 -1.489496981 -0.225951887 #> [329,]  22.6923391   1.881159460   1.300245940  0.239464526 -1.603783477 #> [330,]  23.4768171   3.643284470   1.050692992  1.366855066 -1.552679724 #> [331,]   6.3953594   3.093094568  -5.503937088  2.750935602 -2.410132020 #> [332,]  -1.2658367 -13.231425111  -0.916945185 -3.363231166 -0.565104838 #> [333,]   2.0278785   0.025441777  -1.073154510 -1.358034577 -1.959538586 #> [334,] -17.1662485   0.167337728   0.789496192  0.348635635 -1.167395249 #> [335,]   0.8474970  -7.622397474  -4.013612194 -1.518655347  0.299666939 #> [336,]   3.8752597  -5.531943936  -3.642996992 -1.870122757 -0.913429835 #> [337,]  14.1050527  -5.516896824  -0.944764614 -1.573234521 -1.463718514 #> [338,]  18.5632166   0.732687544  -0.492880737 -0.096219049 -0.719442684 #> [339,]  14.8558437   2.589536489  -1.504815311  1.769691933 -1.296722362 #> [340,]   1.8327408   2.925171322   1.935234350 -0.116708541 -1.816858527 #> [341,]  -8.9245649  -5.118589559   4.364730725 -1.845807363  0.329806588 #> [342,]   3.3834821   5.104971473  -0.804703666  0.497218197 -0.437937031 #> [343,]   1.8010866  -5.489521719  -1.794329172 -1.507024160  0.031233199 #> [344,]  10.6564082  -1.096706298  -1.146768069 -0.263434645 -1.045092230 #> [345,]  13.1951229  -2.777034973   1.072745694 -0.224666775 -1.007368679 #> [346,]  10.4502261   3.105174045  -0.241049558  1.042110795 -0.926349284 #> [347,]   3.9715235  -2.040434313   0.243887805 -1.797838378 -0.671415627 #> [348,]   5.6707812   0.286447325   2.405436325 -1.679179026 -1.990053414 #> [349,]  12.9745035  -3.896562842  -1.153649506 -0.881645619 -0.992562582 #> [350,]   7.9460690  -0.002011872  -0.954604687  0.556332643 -1.076572020 #> [351,]   7.3581458  -3.217224569  -1.877187614 -1.268096357 -0.445518440 #> [352,]  13.1262870  -4.322878690  -0.533645526 -1.463309962 -0.257752903 #> [353,]  16.8283912  -0.335064650  -0.896424430 -0.309793995 -0.201634084 #> [354,]   8.6058918   2.406510114   1.278084742 -0.276568454 -1.446593396 #> [355,]   5.2779197  -2.683056975   2.596638757 -3.087021507 -1.174713480 #> [356,]  12.4133040  -1.889527470   0.060441643 -0.107899511 -1.108145304 #> [357,]  13.8983418  -1.393165692   0.901300364 -0.104170713 -0.956971091 #> [358,]   6.7009106   2.306795566  -0.459269367  0.586111492 -1.625561506 #> [359,]  -0.8531343   5.340625579   4.125939434  0.999307774 -0.788544681 #> [360,]   1.8605735  -5.726942400   1.044942849 -1.969263445 -0.572238117 #> [361,]  -7.2166063   5.786103186  -0.476573600  2.318775729 -1.897905273 #> [362,] -22.4045114  -8.129025287   5.115584308 -2.598838057 -1.104422315 #> [363,]  -5.1918441 -12.792830596  -3.447480220 -5.251144416 -0.229663136 #> [364,]  -0.1010338  -9.822455169  -1.882693669 -3.293938127  0.261063391 #> [365,]   4.2540818   0.967624154  -0.037113800  0.298578268 -0.762325220 #>                PC6           PC7          PC8          PC9        PC10 #>   [1,] -1.33347916 -2.497439e-01 -1.577456352  0.685280084  0.09642009 #>   [2,] -1.63456436  2.645338e+00  1.203415872  0.355769746  0.05126807 #>   [3,] -0.89318372  1.361620e+00  1.775854285  2.191835546 -0.25673328 #>   [4,] -1.40824230 -1.678470e+00 -0.936475656 -0.251246206  0.07043479 #>   [5,]  0.79969416  7.297386e-01 -0.873519911  0.613179716 -0.46125059 #>   [6,] -0.86236350 -1.776387e+00  0.513210235  0.387211842 -0.73628354 #>   [7,]  0.46464685 -1.813696e+00  0.731432185  1.932749609 -1.50883083 #>   [8,] -1.44781578  1.334325e-01 -1.149683063  1.362361204  0.82596805 #>   [9,]  0.05056535 -6.726851e-01 -1.042376534  2.454813741 -1.73685050 #>  [10,] -2.41519314  1.952094e-03  0.831358666  1.411026346 -0.24871599 #>  [11,] -2.47373396  1.420595e+00 -0.274027449 -0.758763686 -0.23486468 #>  [12,] -3.16756810  2.474841e-01  0.058595038  0.287025006  0.87210340 #>  [13,] -0.10723821 -3.159776e-01 -0.425446335  0.788776068 -1.08383915 #>  [14,] -1.08251977  2.390142e+00  1.303115417 -0.539914934  0.23780668 #>  [15,] -1.47800968 -2.569468e-01 -0.008810652  1.561266982 -0.22917232 #>  [16,] -0.08303475 -1.131822e+00 -0.711637277 -0.334676735 -0.56987216 #>  [17,] -1.15955384 -2.507066e+00  1.016634034 -2.165246517 -0.95176462 #>  [18,] -3.90902619  7.605251e-02  1.043874469 -0.438178111  0.51895613 #>  [19,] -3.95916699 -7.102532e-01 -0.092037015  0.572983675 -0.00620238 #>  [20,] -1.03625332 -1.824780e+00 -1.387928846  0.365616374  0.54209634 #>  [21,] -0.20319860 -1.213538e+00 -0.332026451  0.178736872  0.12803736 #>  [22,] -0.02067971 -8.889500e-01  0.127611236 -0.519867996 -0.50168153 #>  [23,] -1.79776993 -1.210150e+00 -0.548713695 -0.775107652  0.15426657 #>  [24,] -1.24983099 -1.003650e+00 -0.145944350 -0.044207449  0.33715212 #>  [25,] -2.10569666 -9.035165e-01  0.240117284 -0.634633153 -0.51482885 #>  [26,] -3.29376001  2.335833e+00 -1.096705803 -0.515692834 -2.66163413 #>  [27,]  0.40963830  9.690098e-01  2.895786729  1.912632503  0.17221080 #>  [28,]  0.52548835  2.795579e-01  0.389347494 -0.003489355  0.51573564 #>  [29,]  1.16733274  1.696409e+00  0.347947212 -0.430548897 -0.67053001 #>  [30,]  0.80215967 -2.309760e+00 -0.511809423 -0.088935202  0.50243623 #>  [31,]  0.36218101 -4.554483e-01  0.498681832 -0.826785705 -0.88453143 #>  [32,] -1.49697055 -9.860168e-01  0.970592699 -0.121282567 -0.10229815 #>  [33,] -1.38955597  1.736339e+00 -1.503756432  0.226971932 -0.41263796 #>  [34,] -2.09283895 -2.095082e+00 -0.750033070 -0.395084883  0.44927840 #>  [35,]  0.19926470  7.225118e-01  0.811728123  0.798193728 -0.56569195 #>  [36,]  2.29634979  1.627646e+00  0.185439968  1.843707669 -0.19798013 #>  [37,]  0.31820719  1.314128e-01  0.666858840  0.325546836  1.14450670 #>  [38,]  0.72145644  4.288604e-01  0.373837133  0.045400917  0.10923427 #>  [39,]  0.57627267 -8.085030e-02 -0.188798664 -0.092464775 -0.04927787 #>  [40,]  0.79265222  2.340570e-01 -0.217336502 -0.174853995 -0.02030409 #>  [41,]  0.98957846  8.010171e-01 -0.186673216  0.295657683  0.16071919 #>  [42,]  3.33131208  2.874773e+00 -2.033618095  1.987672592  1.43609571 #>  [43,] -3.09034931  2.945299e+00  0.944055251 -1.311570844 -0.69092108 #>  [44,]  1.15981629  2.004507e+00 -0.862105264 -0.163475763 -0.02349382 #>  [45,]  0.63493306  4.857182e-01  0.258869009 -0.071361250  0.10007330 #>  [46,]  2.27649838  3.027196e+00 -0.803212624  1.005183970 -0.67055943 #>  [47,] -2.34045891  3.303343e-01 -3.297450869  0.875505514  0.12489015 #>  [48,]  0.56968002  8.581063e-01 -2.032235145  1.372566809  0.52732521 #>  [49,] -3.31363941 -1.075660e+00  2.123077681  0.445696590  1.03066925 #>  [50,] -1.51628894  9.005369e-01  0.283883975  0.266843060  0.59544999 #>  [51,]  0.41507185  1.604879e+00 -0.267538851  0.086116927  1.97422272 #>  [52,] -1.50601658  2.318836e+00  3.122417665  1.239673179  0.12701263 #>  [53,] -2.08072194 -3.487040e+00 -0.143953281 -0.920427091 -2.12096731 #>  [54,] -1.28471481 -1.678990e+00 -0.714797511 -0.073606459  0.51114410 #>  [55,]  0.44645518  2.037821e+00  0.497200282 -4.495376162  1.55955242 #>  [56,] -0.35878941 -4.675273e-01 -0.670169724 -0.453239639  0.25044209 #>  [57,]  1.67871827  5.638476e-01 -0.752821187  0.238225553 -0.05177148 #>  [58,] -2.05132975  1.105006e+00 -0.762135958 -0.830175782 -1.17010534 #>  [59,]  0.72280242 -7.964909e-01 -0.150608310 -0.166731452  0.56763537 #>  [60,] -0.21644576  2.659301e-01 -0.118204115 -0.154715185  0.13477863 #>  [61,]  0.38894428  3.512359e-01 -0.208816271 -0.301426960 -0.13887077 #>  [62,]  0.74186915  4.155882e-01 -0.060651883 -0.360499275  0.16316003 #>  [63,]  0.86695382  2.576719e-01  0.032337583 -0.126629747  0.01645187 #>  [64,]  2.12644592  7.788419e-01  1.311077373 -0.059349388  0.21991221 #>  [65,]  1.66585835  9.287189e-01 -1.889704403 -1.175752167  0.41902619 #>  [66,]  1.15626485 -7.060993e-01  0.244897632 -0.158023375 -0.27743944 #>  [67,] -4.03517496 -8.057346e-01 -0.327133088 -1.010914013 -0.45542722 #>  [68,]  0.90869492 -1.212817e+00  0.762462995 -0.785781294 -0.18741118 #>  [69,]  0.51319382 -2.155310e+00  0.284489024 -0.264856005 -0.41174138 #>  [70,] -0.04611221 -1.307350e+00  0.281341398 -0.822723819 -0.65256251 #>  [71,]  2.29985557 -1.370573e-01  1.050790894 -1.169391128 -0.33279326 #>  [72,]  1.79989061 -6.014587e-01 -0.244258356 -0.881783249 -0.31823875 #>  [73,]  0.99575663 -1.136000e+00 -0.112702095 -0.312036794 -0.64492188 #>  [74,] -0.27544147  1.264850e-01  0.521670360 -0.233596626 -0.31195774 #>  [75,]  0.02071260 -1.402407e+00 -0.304634606 -0.313811114 -0.44521285 #>  [76,]  3.42352990  1.845929e+00 -2.926718529 -0.876136655  0.86744076 #>  [77,] -0.23579101 -4.686969e-01 -0.234210753 -0.176636255 -0.36314182 #>  [78,]  0.31685671 -1.651163e-01 -0.944739724  0.033447729  0.23061289 #>  [79,]  0.21404467 -1.538789e-01 -0.758719125  0.218710914  0.16526692 #>  [80,]  0.58170204 -1.078371e+00  0.876324488 -0.549529731 -1.14760093 #>  [81,] -0.12077367 -2.396055e+00  0.084160221  0.031018201 -0.00436661 #>  [82,]  1.62177995 -1.112152e+00  0.145076305 -0.353532838 -0.20885189 #>  [83,] -0.93072480 -3.779462e-01 -0.883885001  0.503886632 -0.69108971 #>  [84,]  1.27314859 -9.476026e-01 -0.482579077 -0.032345141  0.71371089 #>  [85,]  2.06605960 -2.845299e-01  1.059251043 -0.425477543  0.19770573 #>  [86,]  1.49486592  3.137352e+00  0.258452729 -4.748712299 -0.71493492 #>  [87,] -0.28827067 -2.294762e-01  0.106842960 -0.556322554  0.04487851 #>  [88,]  0.76168156 -7.483216e-01  0.741655131  0.071396971  0.24408482 #>  [89,] -1.21330280  3.982400e-01 -0.247631059 -0.063010418  0.15124550 #>  [90,]  0.89745415 -2.189747e-01 -0.581254029 -0.340173448 -0.69319476 #>  [91,] -1.42944332 -5.985088e-01 -0.459538024 -0.738513909  0.80199948 #>  [92,]  1.85051937 -1.486526e-01  0.036306082  0.070667722 -0.23810571 #>  [93,]  0.36207516  6.983946e-01 -1.560394042 -0.862795827  0.66138641 #>  [94,]  1.84465620 -4.417749e-01 -0.909569584  0.338079904  0.93768906 #>  [95,]  0.48919378  9.242083e-01  0.142282117 -0.543596183 -0.09095665 #>  [96,] -0.11164959 -5.298794e-01  0.119287303 -0.277886740  0.22231180 #>  [97,] -0.31011987 -3.255411e+00 -1.579681424 -0.140596334 -0.13843046 #>  [98,]  0.28075466 -6.910230e-01 -0.551137354  0.030637752  0.29923209 #>  [99,]  0.25040678 -8.338628e-01 -0.586905143 -0.341357507 -0.09932295 #> [100,]  0.87841025 -9.462832e-01 -0.471413461  0.020863753  0.50700357 #> [101,]  0.88446764 -1.205842e-02  0.170827139 -0.392825813  0.17621584 #> [102,] -0.58302564 -6.321342e-01 -1.671002488  0.806200133  0.21200927 #> [103,]  0.93868127 -8.669182e-02 -1.476660051 -0.168152789  0.02105646 #> [104,]  0.39423745 -1.501154e+00 -0.326729039  0.431928100  0.11243796 #> [105,]  1.47060140 -2.102909e-01  0.096529966  0.112355574  0.09556556 #> [106,]  0.84737747 -5.698411e-01 -0.261726879  0.030207015  0.18795916 #> [107,]  0.87914283  1.977606e-01 -0.410571297  0.041509892 -0.45367750 #> [108,] -0.07030675  4.301692e-01 -0.348090180  0.114253502  0.06982329 #> [109,] -0.96666808  1.507572e+00 -0.761950217  0.066425022 -0.30135880 #> [110,]  1.26644479 -1.218943e-01  0.457857908  0.232889201 -0.02495373 #> [111,]  0.20894963  4.534362e-01 -0.344728801 -0.045432479  0.24304035 #> [112,]  1.21390766 -5.075060e-01  0.094454912  0.072528375 -0.04781984 #> [113,]  1.53682153 -1.736124e-01  0.179324268  0.062102138 -0.20067569 #> [114,]  0.58194739  7.430008e-01 -0.054276934  0.576555282  0.21278112 #> [115,]  1.41659356 -1.325954e+00 -0.259569600  0.282522111  0.94813193 #> [116,] -0.76138781 -2.166319e-02 -0.546205992  0.340501073 -0.09031393 #> [117,]  0.66230200  7.924352e-01 -0.329383672 -0.386519710 -0.65904919 #> [118,]  0.73966275 -3.175873e-02  0.102564383 -0.249240579  0.42657709 #> [119,]  0.37001407 -5.825824e-01 -0.582077611 -0.199527932 -0.23307024 #> [120,]  1.82175916  1.888879e-01 -0.108288136 -0.145984793 -0.26023536 #> [121,]  0.43235419  6.409332e-01 -0.551366038 -0.663401620 -0.32223943 #> [122,]  0.70585348 -1.910024e-01 -0.245057181  0.241447675 -0.06210405 #> [123,]  0.12556211 -4.620126e-01 -1.141092776 -0.399349898  0.31994220 #> [124,]  1.10791687 -1.562695e-01 -0.091884193  1.469135341 -0.40310860 #> [125,]  0.56613080 -4.463747e-01  0.170915457  0.174810451  0.56046044 #> [126,]  1.30876252 -9.934947e-02  0.137298837  0.269661898  0.47918256 #> [127,]  0.12250538  2.851069e-02 -0.399670876  0.029054147  0.26699735 #> [128,]  0.72116368 -3.641048e-02 -0.468246931  0.288209098 -0.04757846 #> [129,]  0.78420464 -2.638692e-01 -0.058500052 -0.114070559 -0.06111568 #> [130,]  0.32040827  3.007821e-01 -0.698766999  0.219525665  0.07414918 #> [131,]  0.82281939  5.811956e-01  0.018658184  0.648578733 -0.09369454 #> [132,]  0.39249539  9.488706e-01  0.324491245 -0.084710369 -0.08527269 #> [133,]  0.42497008  1.319410e-01 -0.811253112  0.281089745 -0.32111928 #> [134,]  1.19880639 -4.738324e-01 -0.975668710 -0.005832941 -0.31384872 #> [135,]  1.45007449 -4.205219e-01 -0.206282081 -0.090183474 -0.11023224 #> [136,]  0.87703950 -2.361703e-01 -0.544534976  0.268329884 -0.41037235 #> [137,]  1.28028228  1.272887e-01 -0.030751964 -0.215483041  0.15597516 #> [138,]  2.27184559 -2.557808e-01  0.189585423  0.555048152 -0.55920785 #> [139,]  1.28769600 -2.574134e+00  0.716668498  0.251014598 -0.18334054 #> [140,]  0.36069365 -1.435596e+00 -0.171360577  0.515570202  0.68055542 #> [141,]  0.38016215 -1.800036e+00  0.399055883  0.467702884  0.46186614 #> [142,]  0.65127493 -1.265915e+00  0.182276144  0.011509729 -0.33298616 #> [143,]  0.64946285 -9.568090e-01  0.266877644  0.068314546  0.38277725 #> [144,]  0.09549703  4.011021e-01 -0.682958280 -0.565433404  0.34576399 #> [145,]  0.58990165  6.802886e-01  0.162199981 -0.514511844 -0.52675392 #> [146,]  0.45431917 -7.487182e-01  0.077493428 -0.135657699  0.27369418 #> [147,]  0.36299956 -5.248117e-01 -0.153252913  0.072141634  0.19734318 #> [148,]  0.48376542  1.230374e-01  0.108031711 -0.031574866 -0.04975954 #> [149,]  1.75032203 -8.547014e-02  1.195389209 -0.124127900  0.49270111 #> [150,] -0.54194132  2.260554e-01 -0.236946689 -0.290535861  0.52486730 #> [151,] -0.21844422  4.291707e-01 -0.606527084 -0.878043281  0.08916353 #> [152,]  0.20633359  1.436535e+00  0.266388596 -0.810517769 -0.60760941 #> [153,]  0.49906741  4.252000e-01 -0.073368578 -0.029200008 -0.03975023 #> [154,]  0.68465707  1.972912e-01 -0.020192697  0.214894842 -0.44675269 #> [155,]  1.14707335 -1.579731e-01  1.096750099  0.027544770  0.24566527 #> [156,]  0.58187021 -5.105639e-02  0.567092069  0.212823067 -0.26017840 #> [157,]  1.32305993 -1.552492e+00  1.672336525  0.943018638  0.77384834 #> [158,]  1.91363576  1.893059e-01  2.705611071  0.059314341 -0.21829272 #> [159,]  1.97990133 -1.548864e-01  1.060048892 -0.515137145 -0.71371211 #> [160,]  0.66465235  3.617579e-02  0.596760392  0.681006316  0.27109172 #> [161,] -0.28106106  5.486434e-01 -0.779248905  0.044035781 -0.51491013 #> [162,]  0.06932594 -1.620185e-01 -0.117059281  0.056334577 -0.33847584 #> [163,]  0.36424960 -5.045593e-01 -0.218465372 -0.141578393 -0.08336880 #> [164,] -0.54588894  1.302174e-01 -1.255143705  0.501371490 -0.43154971 #> [165,]  0.12623785  1.172923e+00 -0.383319969 -0.164684882  0.45645928 #> [166,] -0.91710378 -3.498203e-02 -0.619191011 -0.919137828 -0.22373652 #> [167,]  0.07032764 -3.105136e-01 -1.609755990  0.462366923 -0.09644369 #> [168,] -0.17439769  1.403354e+00 -0.078906293  0.227128283  0.80625044 #> [169,] -0.16996237  3.744708e-02 -0.179574474 -0.264209021 -0.07279296 #> [170,]  0.59533825 -5.673738e-01  0.209017935 -0.171310681 -0.28392951 #> [171,]  0.76191152 -3.855971e-01  0.744795723 -0.226661807  0.03668996 #> [172,] -1.00181193  9.587199e-01  1.020455766 -0.523129365  0.82181381 #> [173,] -0.80157470  1.449764e-01 -0.270531349 -0.221247462 -0.39301617 #> [174,]  0.47185330 -5.625202e-01 -0.062073661 -0.193120088 -0.64155134 #> [175,]  0.55559775  4.169028e-01 -0.010772485  0.093702256 -0.03307625 #> [176,] -0.04937367  8.683140e-01  0.690800782 -0.104864547  1.26148182 #> [177,] -0.32619785 -5.719273e-01  0.070033526 -0.196876491  0.06050370 #> [178,]  0.92234557 -1.166479e-01  0.542500791  0.031563887 -0.41707499 #> [179,] -0.83073612 -5.422798e-01  0.672893948  0.465088325  0.13302050 #> [180,] -1.01932778  3.979253e-01  0.072268000 -1.586374099 -0.17115901 #> [181,]  0.80918319  1.069551e+00 -0.551200592  0.159924900 -1.19169388 #> [182,]  0.15877073  1.156672e-01  1.070680711 -0.075757118 -0.28791021 #> [183,]  0.43616422  5.709058e-01  0.462106888  0.288431790 -1.00056897 #> [184,] -0.39588387  6.560342e-02  0.627123449 -0.237693787  0.31597619 #> [185,] -0.33545492 -3.011724e-01  0.067225133 -0.248162453  0.33792829 #> [186,] -0.59380937  1.563890e+00  1.150928578  0.221863329 -0.53122747 #> [187,]  0.50906751  3.352524e-01  0.366827246 -0.591033454 -0.37384655 #> [188,] -0.17218354  4.544073e-01  0.309520071  0.275572608 -0.49420087 #> [189,] -0.40545025  1.250475e+00 -0.172235058  0.352400420 -0.72824415 #> [190,]  0.02482458  7.710565e-01  0.567620651 -0.102123937  0.86167372 #> [191,]  0.15498030  3.949163e-01  0.597988719 -0.181076643  0.70269826 #> [192,] -0.30016993 -1.301805e-01 -0.298437183 -0.192124643  0.16935817 #> [193,] -2.55060959  1.922107e+00 -0.008061263 -0.959492846  0.23915096 #> [194,] -0.35115438  1.485455e-01 -0.103879287 -0.629158493 -0.56686964 #> [195,] -0.43179275 -6.347863e-01 -0.204838467 -0.257439001 -0.01699911 #> [196,]  0.77179658 -9.195981e-01  0.100579786  0.239861003 -0.51967332 #> [197,] -0.24927350 -1.184143e-01  0.458148811 -0.001209703  0.21447114 #> [198,]  0.38063653 -5.805912e-01  1.022388397  0.521496579  0.44552515 #> [199,] -0.30875391 -1.090694e+00  0.643945180  0.381157514 -0.55580676 #> [200,]  0.64818159  3.039998e-01  0.734131169 -0.118375612  0.37467487 #> [201,]  1.13717846 -1.218287e+00  0.628926792 -0.098259165  0.06713744 #> [202,] -1.68638482 -5.293331e-01 -0.067931788 -0.126113457  1.44449466 #> [203,] -0.23347397  5.685510e-01  0.578541557  0.045059897  0.40519848 #> [204,] -0.88614405 -1.776753e-01  0.058703836 -0.380402241  0.24828966 #> [205,] -0.63967659  5.032255e-01 -0.711398934  0.223497787  0.02560402 #> [206,] -0.13596653  4.947300e-01  0.094464460 -0.051461851  0.23623154 #> [207,]  0.08274730  8.473176e-01  0.039781570  0.013406543 -0.14517229 #> [208,]  0.70784497 -2.204322e-01  0.016247622  0.120873647 -0.09367547 #> [209,]  0.04345036  1.421823e+00  0.382674208  0.169173129 -0.19350863 #> [210,]  0.95286440  1.113650e+00 -0.237377344  0.665250051 -0.46169384 #> [211,]  0.35117477  1.314963e+00  0.669948333 -0.212827627  0.32102748 #> [212,]  0.25432448 -7.589162e-01  0.006001924 -0.334546068 -0.22075199 #> [213,]  0.01401925  2.579298e-01 -0.326660639  0.418822340 -1.24175539 #> [214,]  0.73822782  4.736192e-02  0.876183237  0.235899534  0.36829675 #> [215,]  0.08863780 -9.962306e-01 -0.163659679  0.384456326  0.02798531 #> [216,]  0.10961744  5.272712e-01 -0.297339238  0.133275825 -0.73141005 #> [217,]  0.65714693  1.347520e+00 -0.122775740  0.184988463 -0.18262360 #> [218,]  0.57818965  1.572066e+00 -0.084071230  0.387499449  0.12701242 #> [219,]  0.87140842  9.640192e-01  0.611374902 -0.021213620  0.16680192 #> [220,]  0.53741755  1.115204e+00  1.319498192  0.282939593  0.03416432 #> [221,]  0.34159518 -6.634196e-01  0.544442843  0.642918628  0.29436466 #> [222,]  0.39124398  3.010861e-01  0.207733292  0.304033960  0.11317664 #> [223,] -0.12490483  1.431566e+00  0.633209113  1.178857847 -0.17797585 #> [224,]  0.85973504  1.229245e+00  0.862968520  0.813775792  0.21470611 #> [225,]  0.05406573 -5.572644e-01 -0.549929018  0.578216502  0.61988404 #> [226,] -0.13247398  8.103111e-01 -0.266246221  0.551287364  0.43075147 #> [227,]  1.46806744  1.405256e-01  0.325843382  0.413414607 -0.04752485 #> [228,] -0.51315347 -7.208444e-02 -0.058874786 -0.203472350  0.46870075 #> [229,]  1.64925241  1.608870e-01  1.096858658 -0.468075654 -0.28498797 #> [230,]  0.67233418  6.158330e-01  0.518074936 -0.111095306  0.43557932 #> [231,] -0.12880207  1.351168e+00 -0.267264400  0.192204892 -0.01397623 #> [232,] -0.16906924  5.177022e-01 -0.198979145 -0.175800347 -0.06852652 #> [233,]  0.12450291  4.507649e-01  0.093876080 -0.157800664 -0.21976099 #> [234,]  0.49076666  9.449716e-01 -0.504997959  0.276448765  0.18956390 #> [235,]  0.79135751  1.577236e+00  0.018931779  0.109545236 -0.46478274 #> [236,]  2.32546207 -4.514420e-01  0.454243549  0.551731041  0.35259037 #> [237,] -0.13818990  4.136208e-01 -0.856985452  0.394457865 -0.26248460 #> [238,]  0.70706174  8.849521e-01  0.163804854  0.561118767  0.32228647 #> [239,]  0.48367973  3.037960e-01  0.364724112 -0.161730821  0.46900596 #> [240,] -0.08754629 -4.707614e-01 -0.499902548 -0.023297383 -0.42027761 #> [241,] -0.19014868  2.753065e-02 -0.583308565 -0.171818231 -0.11596398 #> [242,] -0.53339777  1.261744e+00 -0.662928643 -0.357974879 -0.12511474 #> [243,]  1.35054241  1.621663e-01 -0.112044252  0.060877005  0.09486906 #> [244,]  0.01864042  8.018733e-01 -0.121126659 -0.097674849 -0.13385841 #> [245,]  0.76361536  8.418912e-02 -0.103268943 -0.012032741 -0.49494097 #> [246,]  0.59059049 -2.821945e-01 -0.417684693  0.014754691 -0.29289679 #> [247,]  0.71604971  1.935019e-01 -0.029820413  0.052280671 -0.12625614 #> [248,]  0.81303895  1.888617e-01 -0.119630366 -0.070619918 -0.26469458 #> [249,]  0.42354631  3.268050e-01  0.365599261  0.036726141  0.04927899 #> [250,]  0.15720610  5.332003e-01 -0.399688859  0.558069640 -0.37339807 #> [251,]  0.50013691 -9.609921e-01 -0.376756927 -0.061478692 -0.57030200 #> [252,]  0.50490150 -3.923337e-01 -0.110748809  0.045665806  0.03154321 #> [253,]  0.37806475 -7.252588e-01 -0.541344398  0.391421833 -0.48615427 #> [254,] -0.14067281  6.636518e-05 -0.424649873  0.157851907 -0.03741211 #> [255,]  1.01050701 -1.657061e-01  0.254715251 -0.220101109  0.32761816 #> [256,]  0.17187205  8.500950e-01 -0.126494681  0.211197562 -0.20608301 #> [257,]  0.80659383 -2.358287e-01 -0.349647122  0.176074391  0.03189551 #> [258,]  0.62350489 -6.194256e-01  0.044395850 -0.004380204  0.23791199 #> [259,] -1.92437336  5.326502e-01 -0.572439976  0.801081476  0.73339478 #> [260,]  0.66541557  1.788594e+00  0.214886983  1.185355758  0.23585556 #> [261,]  0.61673808  9.427000e-01  0.444735287  0.657386468  0.60672723 #> [262,]  1.21124752  4.919441e-01  0.959740361  0.034816479  0.28532603 #> [263,] -0.81403327  1.202733e+00  1.109924778 -0.358326566  0.14110283 #> [264,] -1.98506901  1.412042e+00 -0.971077153 -0.599528424 -0.32942236 #> [265,]  0.71257199  4.847256e-02 -0.100876595 -0.379075038  0.33945666 #> [266,]  0.01240434 -7.320027e-01 -0.471634991 -0.071750637  0.39852155 #> [267,] -0.37280784  8.309512e-01 -0.734449511  0.788350536  0.14766615 #> [268,]  0.29080591  7.806464e-01 -0.087013177 -0.117559760  0.16116126 #> [269,]  1.26132170  4.323920e-01 -0.086573112  0.219964495 -0.04910999 #> [270,] -0.63822282  1.920051e+00  0.380959967  0.074770443 -0.37181796 #> [271,]  0.04012288  1.192531e+00  0.202443727 -1.314167267 -1.01734325 #> [272,]  0.05820910 -1.126037e+00 -1.019523418 -0.071045007 -0.08714448 #> [273,] -0.54961497 -2.112763e-01 -1.801632833  0.577598089 -0.07165196 #> [274,]  0.60693589  9.760079e-01 -0.925012623  0.833151124  0.20278161 #> [275,]  1.29285903  9.689007e-02  0.124343353 -0.217291010  0.42330466 #> [276,]  1.62578215 -5.920803e-01  0.267167787 -0.409618942 -0.07890013 #> [277,] -1.45895028  7.769264e-01 -1.501396598  0.244771015  0.78911192 #> [278,]  0.88171173 -6.859720e-01 -0.396522267 -1.423188026  0.76053679 #> [279,] -0.55120004  5.197135e-02 -0.355744101  0.380205715  0.25453648 #> [280,]  1.37832818 -1.361823e+00 -0.506995118  0.879206810 -1.07165272 #> [281,] -0.40199307 -5.246187e-01 -0.696461248  1.396186712  0.11123158 #> [282,]  1.06006098 -9.250550e-02 -0.714809534 -0.188657329  1.12857795 #> [283,]  0.36363624  1.370463e+00  0.285098112 -0.261718169  0.18081118 #> [284,] -2.88457035  1.432716e+00 -1.966178051 -0.042437034  0.16985986 #> [285,] -1.38958943 -1.194633e+00  0.327355288 -1.244527497  0.38630924 #> [286,]  0.18681204  4.610211e-01  0.211246289  0.292388918 -0.55354401 #> [287,]  0.91640968  2.212172e+00 -1.094585903 -0.156477673 -0.65681561 #> [288,] -0.53139740  1.051873e+00 -0.935442817 -0.081604014  0.31109619 #> [289,]  0.50840975 -1.114525e+00 -0.583634171  0.107228877 -0.91708446 #> [290,]  0.60792675  5.806994e-01 -0.240345817  0.578288224  0.23105796 #> [291,]  1.17019462 -6.700801e-01  0.582672854 -0.661150287  0.41353007 #> [292,] -0.62072364  7.721324e-01 -1.634120492  0.294556131  0.25861449 #> [293,]  2.77516933  2.125698e-01 -1.659542418 -0.917704621  0.47799456 #> [294,]  0.33954924  8.671370e-01 -1.138325575  0.901509645  0.25788137 #> [295,] -0.04431186 -1.305849e+00 -0.683203868 -0.504764043  0.77954340 #> [296,] -0.67556337 -6.700566e-01 -0.660399752 -0.169969010 -0.10686606 #> [297,]  0.51334823 -9.141347e-01  0.033127401 -1.053743814  0.39782496 #> [298,] -1.97258452  1.566446e-01 -0.298628932 -0.215916841  1.20892342 #> [299,] -0.89509986 -2.402898e-01  1.049254879  0.316843288 -1.33855653 #> [300,]  0.82118610 -8.085903e-01 -1.185363566 -0.207388595 -0.23795389 #> [301,] -0.40693407 -3.488537e-01 -0.880236852 -0.332172952  0.28854007 #> [302,]  1.65057099 -5.070289e-01  0.016748264 -0.743997576  0.36388403 #> [303,] -0.38882490 -4.778093e-01 -0.384506210 -0.098167840  0.21489109 #> [304,]  0.11027773 -9.218725e-01  0.220226291 -0.744042853  0.33751890 #> [305,]  0.08249912  8.191471e-01  0.509352115 -0.423641247  0.30941795 #> [306,] -3.06533811  5.916462e-01 -0.161513881 -0.185409678  0.54620853 #> [307,] -0.72338294 -1.725025e+00  0.521581909  0.717072907  0.28787332 #> [308,]  0.58848842  1.969187e-01  2.313319999  1.185475876  0.72978552 #> [309,]  1.95253674 -1.963095e-01  0.443795658 -0.477134499 -0.47828592 #> [310,] -1.83245685 -1.209335e+00 -0.955459308  1.139687656 -0.32208600 #> [311,]  0.04669543 -1.543641e+00  0.355834613 -0.876328363  0.39661421 #> [312,] -0.96557045 -2.501535e-01  2.627468871  1.420023626  1.08198427 #> [313,] -1.20378965  1.851163e+00  1.309842515 -0.200950953 -1.10524269 #> [314,] -0.28665306 -2.699043e-01 -0.873309648  0.976825892 -0.54617594 #> [315,] -2.39137152  1.030438e+00  0.473017401  0.507170430 -0.48002951 #> [316,]  0.24631130 -1.253447e-01 -0.085209304  0.755205401 -0.72083182 #> [317,] -0.19644473 -8.529214e-01  0.050608394  0.952860792 -0.69302380 #> [318,] -0.02902002 -6.410108e-02  0.110820714  0.515632960  0.03127963 #> [319,] -0.21801214 -2.829695e+00  1.898274280  1.023020735  0.59937887 #> [320,]  0.18178547 -2.802288e-02  1.174915794 -0.491349269 -0.85797162 #> [321,]  0.63049729 -5.499471e-02  0.447240902 -1.023226319  0.53343744 #> [322,] -2.57407731 -1.129153e+00 -0.852049756  0.929469610  1.18980412 #> [323,]  0.26178310  3.269143e-01 -0.435469972  0.427751216 -0.53995894 #> [324,] -0.54858824 -5.258715e-01  0.694895134 -0.209171125  0.13321692 #> [325,]  0.39584089 -9.888539e-01 -0.087152980 -0.151392530 -0.33789631 #> [326,] -0.58277927  1.508992e+00  0.748121031 -0.120825131 -0.56818795 #> [327,] -2.18312528  1.562055e-01 -0.427646650 -0.265748547  0.70310422 #> [328,]  0.69216783 -7.184255e-01  0.338429165 -0.658146524 -0.39425153 #> [329,] -0.43135745 -5.388987e-02  0.244208453 -0.296501672 -0.04651260 #> [330,]  0.01473688 -3.109116e-01  0.460051128 -0.101363302  0.02914043 #> [331,] -1.60345187  2.002148e-02 -0.467473172 -0.148491954 -1.03268197 #> [332,] -0.54036837 -2.205941e-01  1.064377515 -0.350732995  0.16352314 #> [333,] -3.07778722  1.391708e+00 -0.640483046  0.262491686  0.74183791 #> [334,] -3.26622358  6.761593e-01  0.837273903 -0.171594072 -0.01507136 #> [335,]  0.71837152 -1.600709e+00  0.585018751 -0.734924932 -0.67259128 #> [336,]  0.84080572 -5.018001e-01  0.766951189 -0.313733126 -0.54322827 #> [337,]  0.12899487 -1.376685e+00  0.615929649 -0.312763051 -0.14060856 #> [338,] -0.51778051 -8.296111e-01  0.347739801  0.148345520  0.04349139 #> [339,] -0.60706170 -1.648085e+00  0.906547963 -0.112829255  0.35680094 #> [340,] -1.77982685 -4.277569e-01  0.262539000  0.097694261  0.33045904 #> [341,] -3.21423112 -6.613679e-01  0.884967428  0.019177415 -0.30370088 #> [342,] -0.71758642 -8.261050e-02 -0.450990009 -0.394214830 -0.77426839 #> [343,]  0.50150494 -1.049752e+00  0.552072088 -0.373432284  0.20599727 #> [344,] -0.10513110 -6.153096e-01  0.161893697  0.531018294  0.42969769 #> [345,] -0.03586271 -1.203090e+00  0.060071106 -0.210512916  0.54217059 #> [346,] -1.09306623 -1.146710e+00 -0.181205987  0.173159742  0.43248886 #> [347,] -2.05044361 -5.021504e-01 -0.226346006 -0.326835634  0.52429939 #> [348,] -1.65197959  7.055417e-01  0.111214293  0.024023288 -0.12078664 #> [349,] -0.42017688 -1.499484e+00  0.291972278 -0.298773237 -0.50103593 #> [350,] -0.70831857 -1.417002e+00  0.294913541  0.565203726 -0.20062867 #> [351,] -0.49472708 -1.091454e+00 -0.121985528 -0.383996053  0.19419214 #> [352,]  0.07513147 -8.701001e-01  0.001896274 -0.721744560  0.37666565 #> [353,] -1.01710250 -1.320418e+00  0.002190585 -0.406284165  0.49239761 #> [354,] -1.54725378  2.863700e-01  0.162244558  0.116205502  0.30688468 #> [355,] -2.26449643  3.515157e-01 -0.638222856 -0.407463911 -0.06716212 #> [356,]  0.04683053 -6.888320e-01  0.639727429 -0.379861360  0.18230989 #> [357,]  0.73828091 -5.225316e-01  0.633435613 -0.250949315  0.21988779 #> [358,] -0.39661185 -7.258750e-01  0.731858139 -0.088347216  0.30312337 #> [359,] -2.36135614 -9.556119e-02 -0.150938074  0.160513043 -0.25246440 #> [360,]  0.07113712  4.959249e-01  1.415138920  0.157805063  0.49729170 #> [361,] -3.46036849  1.881051e-01  0.955584221  0.442959148  0.16848387 #> [362,] -0.52602643  1.668935e+00  1.596182854  0.728699649 -1.64579228 #> [363,] -2.31828287  1.962931e+00  1.778553309 -0.185880557  0.53964506 #> [364,] -0.82533984  8.318124e-02  0.933079349 -0.186826642  0.79468850 #> [365,] -1.76093831 -6.698871e-01  0.735664148 -0.507482457  0.21329404 #>                 PC11          PC12          PC13          PC14          PC15 #>   [1,] -1.334128e-02  0.1120105811  0.0875024939 -0.9596130461  0.2207213900 #>   [2,]  5.353086e-01  0.0457120803 -0.2413333169 -0.7300130814  0.4346536929 #>   [3,]  5.874045e-01 -1.3829842111 -1.5698444433  1.3357215000 -0.4104482307 #>   [4,] -4.581118e-02 -0.8587797084  0.0597417377  0.0145712723 -0.2483953990 #>   [5,]  1.193700e-01 -0.6182289184 -0.3068957816  0.3994132404 -0.0680148311 #>   [6,]  3.037279e-02 -0.6644977596  0.6070749932 -0.8844116629 -0.2636080464 #>   [7,]  1.488666e+00  1.5920638812  0.4012296674 -0.4805775306 -0.8501227881 #>   [8,]  2.319484e-01 -0.3815753075  0.7205739640  0.4148370376 -0.1050708349 #>   [9,] -1.721591e-01  0.9526770074  1.5942630876 -0.5837606103  0.0818153086 #>  [10,] -4.579173e-01  0.2890588395  0.8305311893  0.3069643655 -0.4727420621 #>  [11,]  4.003698e-01 -0.9583638241  0.1943271811  0.1995116731 -1.2062611187 #>  [12,] -5.522805e-01 -0.0495648032 -0.3974339002  0.0839095156  0.5413577274 #>  [13,]  4.723209e-01 -0.1193716237  0.4280481752  0.3197707801 -0.7582053515 #>  [14,]  1.001529e+00  0.4844541328 -0.1691178682  0.4013886721 -1.0477150912 #>  [15,]  1.205318e-01 -0.5984682032  0.2801514112 -0.3542066563 -0.1174319254 #>  [16,]  1.943750e-01  0.3636199314 -0.6478336453  0.1058857001  0.0070502013 #>  [17,]  1.502931e+00  0.9191514596  0.8257000908  1.2569840886  1.2750915820 #>  [18,] -7.659429e-01 -1.6584747401  0.4525277911  0.0662303331 -0.3413491408 #>  [19,] -4.069995e-01 -0.5847635071 -0.4890326395 -0.5020025844  1.2466790973 #>  [20,]  2.847378e-01 -0.0718670594  0.7157341255  0.6286582463 -0.4752735315 #>  [21,] -1.801938e-01  0.5370680940  0.4476706119  0.6022547757 -0.4590164482 #>  [22,] -5.218692e-01 -0.5605045383  0.5209247001 -0.0189463945 -0.1273150506 #>  [23,]  8.035797e-01  0.2021896183 -0.0361516512  0.1745231627  0.2251556526 #>  [24,]  3.632366e-01  0.4501495103 -0.1722078525  0.0650122764 -0.2160564776 #>  [25,] -3.626288e-01 -0.3209535332 -0.7708874662 -0.0397530381 -0.4173340382 #>  [26,] -1.548297e-01  0.9802840795 -1.0905677690  0.3217869943 -0.2749740275 #>  [27,]  4.365001e-01  0.6854573869  0.6215934251 -0.4958505434  0.3170409106 #>  [28,]  3.506687e-01 -0.0591511244  0.4875504838 -0.0185693412  0.1669691214 #>  [29,]  9.112940e-01  0.4214148241 -1.1161006488  0.1490957949 -0.1930981184 #>  [30,]  5.801192e-01 -0.2213288650 -0.3240265001  0.0389714842  0.0459007950 #>  [31,]  6.978758e-01 -0.3377332232  0.6714865451 -0.3065072872  0.1101638686 #>  [32,] -2.563869e-01 -0.4213314565 -0.1074125137 -0.3329971011  0.3366769770 #>  [33,] -6.717088e-01 -0.7568766876 -0.1462732706 -0.3099807703  0.4319126283 #>  [34,]  1.063228e+00 -0.0507518515  0.2760463301 -0.1966137463  0.0935538638 #>  [35,]  4.993016e-01 -0.7818191778  0.6582389927 -0.4210468278 -0.5294452450 #>  [36,] -1.714755e-01  0.7592356199  0.6146727730 -0.3850389661 -0.3777085946 #>  [37,]  3.352522e-01 -0.2662683065  0.4785956904 -0.0798933497 -0.6608573824 #>  [38,] -5.788797e-02 -0.0264034576 -0.0707549531 -0.0310342684  0.0559584191 #>  [39,] -1.170754e-01 -0.3777432876 -0.2578272775 -0.1898853273 -0.0539700306 #>  [40,] -1.260234e-01  0.1175470198 -0.0528708196 -0.3124188109  0.1518905556 #>  [41,] -2.247907e-01 -0.1250279139 -0.1839652387  0.0002155145 -0.0716596243 #>  [42,] -6.233461e-01 -0.3194260272 -0.0489106027 -0.3218320759 -0.2681993715 #>  [43,]  1.694334e+00 -0.5888550049 -0.7658948651  0.2218215193 -0.4808594389 #>  [44,] -2.097437e-01  0.0199293786  0.1769432769  0.3232400302  0.2868608306 #>  [45,]  1.461826e-02  0.0615058792 -0.0458160779 -0.1604075350  0.0623149214 #>  [46,] -9.705339e-01 -0.2421665081 -0.7426927175  0.2528818089 -0.2236879534 #>  [47,]  1.465333e-01  1.1251059638  1.2610529640 -0.0951271028  1.1827323119 #>  [48,]  3.251097e+00 -1.3188066489  0.0738111850  1.5203619206  0.7554368602 #>  [49,] -1.028991e+00 -0.2641246515  1.0604710215  0.0744338070 -0.8093546867 #>  [50,]  1.317826e+00  0.3350600208  1.5512729128  0.3874844869  0.3546199109 #>  [51,] -4.396983e-01 -0.4971439580  0.5753297779  0.2582927284  0.3785276396 #>  [52,] -1.513856e+00 -1.0356315135 -0.3571403591  0.3187581759  0.6364422651 #>  [53,]  5.756269e-01 -2.2606639763  0.0593757310 -0.2555626019 -0.3076046768 #>  [54,]  6.146060e-03  0.3789295736  0.2474986005  0.2874279960  0.3019614946 #>  [55,] -1.306363e+00  1.2971135622  2.4420436664 -1.5372175323 -0.8122286812 #>  [56,]  7.669954e-01 -0.7237592069 -0.2811851042 -0.2148486047  0.2474383339 #>  [57,]  1.325947e-01  0.0049058361 -0.5221799127 -0.5234594738  0.1439753366 #>  [58,]  7.875923e-01  0.3118634473  0.2806749190  0.1218490877 -0.7734039427 #>  [59,]  1.332177e-01 -0.0179878691 -0.5567946916  0.0370702536  0.3243394120 #>  [60,] -2.358564e-01 -0.0496278601 -0.2002002234 -0.0217888237  0.2638273841 #>  [61,] -2.440586e-01  0.0161186091 -0.2591086772 -0.2074186909  0.1668448130 #>  [62,] -1.687527e-01 -0.0242971946 -0.1175269963 -0.1606499017  0.0884740629 #>  [63,]  1.055404e-01  0.0821799411 -0.0559719867 -0.0806019452  0.0629689972 #>  [64,]  6.320953e-02  0.6302522722  0.0424197668 -0.3532280172 -0.4054346608 #>  [65,] -3.962892e-02 -0.4810365057 -1.5548172898  1.1059390879 -0.0927941873 #>  [66,]  9.299818e-01  0.2438776753 -0.6279839942  0.1066758624 -0.1354763079 #>  [67,]  6.182292e-01  0.3556238315 -0.6242068547 -0.4604292588  0.2350726485 #>  [68,] -6.340856e-02  0.4476166168  0.2160303198  0.2406954166  0.1266992709 #>  [69,]  1.237699e+00  0.2823499143 -0.5017811354 -0.4247806262 -0.0328459407 #>  [70,]  3.802141e-01  0.2550261255 -0.1614566038  0.3566027626 -0.0571934914 #>  [71,] -1.272268e-03  0.5486571996  0.4445741245  0.4426217019  0.3313288083 #>  [72,] -1.971758e-02  0.3167084888  0.1599068662  0.2431699368 -0.1992538111 #>  [73,] -2.570682e-01 -0.0267828104  0.0748647873 -0.0612212081 -0.3834388766 #>  [74,] -1.443028e-03  0.4729910409 -0.5220779162  0.2127720203 -0.2853660604 #>  [75,] -4.388537e-01  0.5477230046 -0.0568936508 -0.1899773886  0.5596959338 #>  [76,] -1.087850e+00 -0.6769480179 -0.6971540751 -1.0337379815 -0.5523778366 #>  [77,]  1.821471e-01  0.1985650267  0.0689844500 -0.1605006550 -0.3490141466 #>  [78,] -1.241070e-01 -0.6691558121  0.3806184721  1.1869922038  0.0048060544 #>  [79,] -5.182437e-02  0.3537623090  0.1296671368  0.1236796751 -0.2278451263 #>  [80,]  2.623151e-01  0.1331334237 -0.2936259880 -0.0050326709 -0.4684613290 #>  [81,] -2.927177e-01 -0.8531159161  0.1955305651  0.6280939027  0.3802167440 #>  [82,] -3.134188e-01  0.5904125359  0.0594364581  0.0291078839 -0.0062265611 #>  [83,] -1.798287e-01  0.2089164188  0.3919325172 -0.4207855745 -0.3119113365 #>  [84,]  3.595794e-01  0.2827657872 -0.2222459412 -0.0941355281 -0.5306341380 #>  [85,] -3.605559e-01  0.4857971825 -0.1413246100 -0.1987224110  0.1565336411 #>  [86,] -2.857850e-01  1.0031186025  1.5068076696  1.1658120154  1.4602619353 #>  [87,]  2.223353e-01 -0.4882947423 -0.1702354558 -0.1651711373 -0.3323893284 #>  [88,] -9.667653e-02 -0.4920278814  0.0169510658 -0.0632439409 -0.3528321141 #>  [89,] -3.939321e-01  1.1363513154 -1.0525707273  0.0482167190 -0.0198901165 #>  [90,] -7.159943e-01  0.4134316142  0.2781014680  0.1412377425  0.1199933125 #>  [91,] -7.001875e-01 -0.5332684075 -0.0812339459  0.2317232912  0.1017658575 #>  [92,] -8.559333e-01 -0.9704182708  0.3191518960  0.5598063606  0.2095684579 #>  [93,]  4.610034e-01  0.3807116548 -0.1864313564 -0.3112889228  0.6429998494 #>  [94,]  7.450183e-02 -0.0806600267 -0.2784432508 -0.6085934808 -0.3379085152 #>  [95,] -4.402525e-01  0.5690534033 -0.8254380469  0.1077746251  0.3246457453 #>  [96,] -1.897137e-02 -0.0409651735 -0.2323447811  0.0601553545  0.1277250061 #>  [97,] -1.897651e+00 -0.0174979547  0.8301686266  0.2909762783 -0.4161674508 #>  [98,] -8.435521e-02  0.0979783802 -0.0040769555 -0.0211681489  0.2258671107 #>  [99,] -3.798199e-02 -0.4914015930  0.0678177718 -0.4816853349 -0.0456019776 #> [100,] -3.168385e-01 -0.2817017681  0.2747094343  0.0893616577 -0.1887023192 #> [101,] -4.177161e-02 -0.3493772509  0.1762507090  0.0216924347 -0.1485913879 #> [102,]  3.715733e-01 -1.1463619048  0.3015787906  0.3202140615 -0.0137156291 #> [103,]  3.351704e-01 -0.8019447173  0.3155114405 -0.8434199334  0.0974158522 #> [104,] -7.035713e-01 -0.6919509289  0.8702687422  0.4061194002  0.0993923370 #> [105,] -3.654415e-01 -0.1701019742 -0.0718214294  0.1272847712 -0.0122518328 #> [106,] -2.612003e-01  0.0291438173 -0.1058257669  0.2622490076 -0.0677706604 #> [107,]  9.518935e-02 -0.1722434593  0.2945948367  0.0078406870 -0.2557227718 #> [108,]  1.730667e-01 -0.0926082810  0.0863562011  0.1753991065  0.3014684628 #> [109,] -1.968240e-01  0.2105626415 -0.1443312035  0.3716195763  0.0928538790 #> [110,] -3.401961e-01 -0.0688269075 -0.1126516154 -0.0548294837  0.2373948265 #> [111,] -4.118185e-01  0.4364816098 -0.1200189260  0.3218057031 -0.0726868274 #> [112,] -5.419625e-02 -0.3333684231  0.1716958122  0.1495896248 -0.0105666910 #> [113,] -1.238926e-01 -0.2698137555 -0.0102934275  0.2233411382  0.1045887627 #> [114,] -4.092338e-05 -0.0439085683 -0.2394520459 -0.1388866801  0.4072452303 #> [115,]  4.867595e-01 -0.4572577125 -0.0054107784  0.0685875715 -0.5513650153 #> [116,] -1.109877e-01  0.1947462491 -0.3775304590  0.4074393889  0.2439220936 #> [117,] -5.961194e-01 -0.6074062028 -0.4957128346 -0.2044541157  0.0307975334 #> [118,] -1.972752e-02  0.4787377969 -0.6127819439  0.0233900533 -0.0019607772 #> [119,] -6.493777e-02  0.1746018032 -0.6188251237  0.2865887643 -0.1819741742 #> [120,] -3.754190e-01  0.1501178880 -0.1754130407  0.2071150876 -0.1946528970 #> [121,]  1.638948e-01 -0.0969935263  0.0223158537 -0.0957701682  0.0110703430 #> [122,] -1.632909e-02 -0.2686251958 -0.4099825293  0.2883503154  0.0647001613 #> [123,] -2.451370e-01  0.5798734073 -0.3875660870  0.3909093862 -0.2925895164 #> [124,]  7.502587e-01  1.5031552456  1.4809575897 -0.4119033975  0.5069128757 #> [125,] -1.027865e-01 -0.3700462160  0.0022181462  0.4383122944 -0.0619171040 #> [126,] -2.116084e-01 -0.2698864214  0.0869888292  0.0501002712 -0.0540328415 #> [127,] -1.622395e-01 -0.2919189822 -0.0530112610  0.3082879257  0.0724823098 #> [128,]  1.300077e-01  0.0443521608 -0.1113624966  0.3132811493 -0.0430165234 #> [129,]  1.926805e-01 -0.1190548753  0.0151692473  0.0501834895  0.1008966316 #> [130,]  2.486513e-01 -0.1240370045 -0.0453627405  0.5006837963  0.0658817790 #> [131,]  4.089274e-01  0.3427821252  0.1987303163  0.0477692044  0.1371362023 #> [132,]  2.990354e-02 -0.1474965299 -0.0247922446  0.3742639861 -0.1060191665 #> [133,]  1.892514e-01 -0.2285423044 -0.0125980161 -0.0015302242  0.2067145898 #> [134,] -8.827774e-02 -0.0132235998 -0.3020773719  0.3420554459  0.0471768560 #> [135,] -4.650158e-02 -0.0722151593 -0.0419352056  0.1016049109 -0.1654896185 #> [136,]  3.036070e-01 -0.0096757100  0.0395283667 -0.3453617045  0.1282302766 #> [137,] -9.298081e-02  0.3082825233 -0.2025743179  0.2783930118 -0.0963501665 #> [138,]  2.464493e-01  0.1728348269  0.3047464547  0.0511485965 -0.1102330125 #> [139,] -5.305283e-01 -0.1332441254  0.0647635577  0.6962983234 -0.1370166592 #> [140,] -7.279519e-01  0.4283031795  0.0697778067  0.2970974303 -0.2679587126 #> [141,] -1.067077e-01 -0.0766130509 -0.0294253632 -0.0478194175  0.3660461246 #> [142,] -5.654295e-01  0.4414692479  0.0301373392  0.5493338005 -0.0517657747 #> [143,] -3.242717e-01  0.2535583555 -0.3651670732  0.0657546311  0.3476099274 #> [144,]  2.897184e-02  0.0612248897 -0.2779411250  0.0821005304 -0.0242943585 #> [145,]  2.314805e-01  0.0123097107  0.5218390488 -0.0760529637 -0.0520945175 #> [146,]  3.231213e-02 -0.2004881112 -0.0263970702  0.0729031806 -0.0650970358 #> [147,] -3.861686e-01  0.3150680197  0.2344033668  0.3630278855  0.0345370433 #> [148,]  2.315373e-01 -0.0255230020 -0.0611689187  0.0232631135 -0.1808773481 #> [149,]  4.923621e-01  0.1117551658 -0.1407565923  0.0817447869  0.0544927994 #> [150,]  4.759364e-01 -0.1416479756  0.0711201068 -0.0238405551 -0.2088487584 #> [151,]  2.495787e-01  0.4280679193 -0.5348570337  0.0298349248 -0.3697616146 #> [152,]  1.545632e-01  0.0615526901  0.5361432003  0.6944046312  0.2474429172 #> [153,] -6.056864e-01 -0.1388255624  0.6053292795  0.5032160365 -0.1335855181 #> [154,] -1.748648e-01  0.0314498326  0.0628459920  0.2999358047  0.0353269268 #> [155,]  1.007508e-02 -0.0388487593 -0.0329025480  0.0590166782  0.1791916722 #> [156,] -3.500549e-01  0.2608169381 -0.1533438653  0.0592723651  0.1417117853 #> [157,]  1.629708e-01 -0.0312655018  0.1983342642  0.1836695033  0.2890402835 #> [158,]  3.351824e-01 -0.3898014736 -0.1450673593 -0.4588596391  0.1975280957 #> [159,]  5.905017e-01  0.3054379136  0.3769896613  0.3002601209 -0.0159792739 #> [160,] -3.662860e-01 -0.0130379611  0.2315265143  0.0083410679  0.4499059270 #> [161,] -3.958470e-01  0.6927625935 -0.1284121973  0.1743339147  0.1179889686 #> [162,] -7.142771e-01 -0.1849115469  0.1706863333  0.3890078828  0.2695216830 #> [163,] -3.662881e-01 -0.0274494218  0.2288366008  0.1504175754 -0.0412478860 #> [164,] -5.876093e-01 -0.4185005312  0.3757257626  0.0923690887  0.1359243216 #> [165,]  2.462389e-01  0.0584170231  0.1714533318  0.0854013695  0.1737516773 #> [166,]  1.424513e+00  0.1463626504  0.4165821524  0.1982073730 -1.5136621628 #> [167,] -6.268042e-01  0.5114917382 -0.0044939196  0.9394857060 -0.5030736980 #> [168,] -1.349301e-01  0.0827044137  0.4517544629  0.1406263385  0.1160345493 #> [169,] -2.750008e-02 -0.6396264365  0.4059297986 -0.1795497679  0.1319366616 #> [170,] -1.870092e-01 -0.6228672573  0.2910628298 -0.1689574894  0.2029397051 #> [171,] -3.067155e-01 -0.1169788421 -0.1096770503  0.2247636717 -0.1187172881 #> [172,] -3.687513e-02  0.2316350684 -0.1209824674  0.1875332185  0.2227047048 #> [173,] -5.637713e-02  0.1109856503 -0.3141354652 -0.0338614220  0.0552921026 #> [174,] -6.205817e-01 -0.1898367303  0.1929679984  0.1931198760  0.0062866201 #> [175,] -2.163626e-01  0.0943120240  0.3607043343 -0.0860597965  0.0989069704 #> [176,] -2.565340e-01 -0.0112567019  0.5699338163  0.2286484258 -0.1497774272 #> [177,] -3.817728e-01 -0.1537167085  0.1598399507  0.1657704210  0.1597559339 #> [178,] -1.450380e-01 -0.0143831387 -0.0356007451  0.1228128811 -0.0220672770 #> [179,]  3.899977e-01  1.1840734640 -0.4792028760 -0.1484497943 -0.2345601047 #> [180,]  2.274511e-01  1.0305108495  0.1860797464 -0.1976547213  0.2361619274 #> [181,] -2.795845e-01  0.0602194337  0.3576231721 -0.2180411915 -0.1203513396 #> [182,] -8.187692e-01  0.0042982091 -0.2412208707  0.0698521842 -0.2633241138 #> [183,] -5.141677e-01 -0.1669613630  0.5667240024 -0.0790833282 -0.0103631853 #> [184,] -5.431530e-01 -0.2182535700  0.1892765030  0.1035194767  0.2471486183 #> [185,] -4.532591e-01  0.3097221007  0.0359384402  0.3078189353 -0.0516134691 #> [186,]  3.170860e-01 -0.1450987739  0.1394512940 -0.2539970022  0.2378353048 #> [187,]  2.728839e-01  0.4908560878  0.4527313092 -0.2002268292 -0.0413433240 #> [188,] -2.338784e-01  0.0767616074  0.5694082745  0.0636387387 -0.0954444878 #> [189,] -4.000000e-01 -0.3026131548  0.4310842896 -0.0431709053  0.1488417440 #> [190,]  9.999605e-02 -0.2589368494  0.4912664078 -0.0635635711 -0.0884533771 #> [191,] -1.311293e-01 -0.0109393285  0.3595906555  0.1550445119 -0.0497192048 #> [192,]  4.534836e-01 -0.1393372655  0.3028972972 -0.1329197292 -0.0422319901 #> [193,] -1.901127e-01 -0.3923054659  0.6659023163  0.0736377240 -0.7391005050 #> [194,]  4.834891e-01 -0.0387697839  0.7059935184  0.1627592656 -0.7163349159 #> [195,]  4.730235e-02 -0.7204439114  0.6427491703 -0.2606979924 -0.0760652728 #> [196,] -3.508032e-01 -0.5219567550  0.2308350891 -0.3353433166  0.2902448799 #> [197,]  3.150160e-02 -0.5512097230  0.2820019771 -0.3262202127  0.3024232359 #> [198,] -2.432704e-01 -0.6126895680  0.1639689264 -0.2640043806  0.4320240070 #> [199,] -6.003050e-01  0.1691720680 -0.3118784109  0.2119543984  0.5374675487 #> [200,]  4.380967e-01  0.7420541771  0.0293666554 -0.6617390993 -0.1638052099 #> [201,]  2.956483e-01  0.7809113079  0.3469961528 -0.3648321881 -0.0940644535 #> [202,] -1.504338e-01  0.0656234656  0.5174492048  0.2898981621 -0.2126955519 #> [203,] -4.481613e-02 -0.2102189339  0.3721619772  0.2555015369 -0.0708695093 #> [204,]  3.662138e-01 -0.5313411857  0.1859104574 -0.1042104882  0.0530649080 #> [205,]  6.872879e-01 -0.5853544082  0.4700303855 -0.5795501564  0.2242761512 #> [206,] -3.674972e-03 -0.2903294283  0.3691467757  0.0501624943 -0.0567587580 #> [207,]  2.389995e-01  0.1567929472  0.3283984074  0.0987932412 -0.2464189781 #> [208,]  5.590623e-01  0.3503930804  0.5202169005  0.3148898988 -0.1298104609 #> [209,]  1.824622e-02 -0.1019714980 -0.1874113573  0.0094498747 -0.0809193605 #> [210,]  1.634647e-01  0.7177878134  0.2276432487  0.0276769632 -0.5797257201 #> [211,] -4.340143e-01 -0.2950338572  0.2001303133  0.1205934087  0.1527974743 #> [212,]  3.346543e-01 -0.8906644310  0.2363046773 -0.3245616049  0.1816486858 #> [213,] -2.957243e-02 -0.3450186258  0.4696961442  0.2907307339 -0.0285921758 #> [214,]  5.709100e-01  0.1524147374  0.2515026753  0.6940333758 -0.0137960319 #> [215,]  6.200456e-01  0.0876615642  0.7143760178 -0.0542143697  0.0338512972 #> [216,]  3.969338e-01 -0.3405102587  0.1795204420 -0.1233557633  0.0546042501 #> [217,]  3.672659e-01  0.3185314013  0.0289617448 -0.1321135327  0.4172370590 #> [218,]  5.944922e-01  0.2831488709  0.3024960160  0.0630543427  0.1556257969 #> [219,]  3.560094e-01  0.1785263316 -0.1296000497  0.0330123600  0.0647969952 #> [220,]  1.214815e-01 -0.1449363717  0.0890871619  0.1807536711  0.0960016650 #> [221,]  1.218822e-01 -0.3055247592  0.4542927617  0.2813440116  0.5118175280 #> [222,]  2.388959e-01  0.7921893197  0.4027709027 -0.2139499298  0.2363444914 #> [223,]  3.048051e-01  0.0197560205  0.3888841610  0.1532400724 -0.7100154482 #> [224,]  3.549401e-01  0.3363012864  0.4185478540  0.4649418252 -0.1627544897 #> [225,]  2.500614e-01  0.8468004837  0.0615335271  0.5514675207 -0.0816272296 #> [226,] -6.510845e-01  0.1846738976  0.5038649400 -0.1709629544  0.1106385511 #> [227,]  3.970163e-01  0.4618635344  0.4655857489 -0.1941575751  0.1440707651 #> [228,]  3.266713e-01  0.3087311097  0.3928391379 -0.2603511658 -0.0714859309 #> [229,]  3.168537e-01 -0.0108822865  0.4636408711  0.3226437207  0.0410726243 #> [230,]  3.407831e-01 -0.0680420166 -0.0559455853  0.1765914928 -0.1626289642 #> [231,]  5.062685e-01 -0.0876692651  0.2798713943 -0.1764897364 -0.3137534626 #> [232,]  4.005494e-01 -0.5259029307 -0.2456305232 -0.1848470178  0.0200482863 #> [233,]  4.911541e-01 -0.5729861741 -0.0798461804 -0.0454957677  0.0391258542 #> [234,]  8.635335e-01 -0.1189604781  0.0961346207 -0.2283608256 -0.0852960759 #> [235,] -4.839415e-03 -0.0532998581  0.0285437890  0.1834554212 -0.1221800628 #> [236,]  5.034820e-01  0.0612276114  0.0715430202  0.3715158044  0.0507817753 #> [237,]  6.411338e-01 -0.1686427379  0.0637310489  0.1438157281 -0.2680877804 #> [238,] -5.390917e-01  0.1319665247 -0.0018390631  0.3125107065 -0.1980909674 #> [239,]  4.224322e-01 -0.2018442526 -0.0153395522  0.1147354299 -0.0681574318 #> [240,] -1.488766e-01 -0.2399214722  0.2500268029  0.1971837564 -0.2278596357 #> [241,]  8.160445e-02 -0.6107649513  0.3160613372  0.2801043070  0.0191433794 #> [242,]  7.061800e-01 -0.0227511346  0.0217178655  0.2729301698 -0.1023986514 #> [243,]  3.133566e-01 -0.0946283797  0.2902041393  0.0575906448 -0.0862989903 #> [244,] -2.373140e-01 -0.7091047807  0.1418565921  0.0652320349  0.1165615737 #> [245,] -3.411038e-01 -0.7682216332  0.1884690989  0.1075831288  0.0584463390 #> [246,] -1.862582e-01 -0.0813241412 -0.1172358895  0.2687964600 -0.1592072914 #> [247,] -5.054297e-02 -0.2350792363  0.0135282915  0.1263633560  0.0390801105 #> [248,] -3.395136e-01 -0.4825969133  0.0139483921  0.1787603496 -0.0942673924 #> [249,]  9.006538e-02 -0.1822227697 -0.2111201057  0.3922558733 -0.1440334495 #> [250,]  2.171363e-03 -0.2547874355 -0.2203004920  0.0617331170  0.1509119207 #> [251,] -4.170462e-01 -0.3799833074 -0.0003093141  0.0631637299 -0.0322505763 #> [252,] -1.280332e-01 -0.0850821383 -0.1105870752  0.0297262090  0.0212213285 #> [253,] -2.091308e-01  0.2972301872 -0.1798372493  0.0263344564 -0.0052872436 #> [254,]  7.225693e-01 -0.5119713261 -0.1807424932 -0.4890622606  0.2354760227 #> [255,]  6.000836e-01 -0.2489074354 -0.5699912456  0.0773176773  0.2092048559 #> [256,] -5.366875e-02 -0.1231105713 -0.4189015141  0.1634621472 -0.1844785136 #> [257,] -2.229706e-01 -0.1167568123 -0.5307998163 -0.1444586796 -0.0684739959 #> [258,]  3.792153e-01 -0.2121316365 -0.1398681824  0.0860498599  0.1552234329 #> [259,]  2.535933e-02 -0.5166562337 -0.8880940369  0.2831068856  0.4651273281 #> [260,] -3.885130e-01  0.1752843108 -0.0649596051 -0.2101267891 -0.1719350660 #> [261,] -5.797887e-02 -0.0305693132 -0.1537546733 -0.1394423012  0.3279320434 #> [262,]  5.816347e-01 -0.0523961079 -0.7602175596 -0.0625439937  0.1351689017 #> [263,]  5.963312e-03 -0.7566597015  0.1872210364  0.2377170782 -0.2666704671 #> [264,]  4.425238e-02  0.1698456858 -0.6689700644 -0.1494465213 -0.5452149393 #> [265,]  4.998091e-01 -0.0493012777 -0.8603360163 -0.0417582636  0.2130870068 #> [266,]  8.558701e-01 -0.6952405933 -0.1681551930 -0.2339525371  0.1968423352 #> [267,]  1.015330e+00  0.0151110923  0.1914242779 -0.7294705572  0.4443890924 #> [268,]  3.597528e-01 -0.0969098402  0.3200814666 -0.2340020031  0.0565749279 #> [269,]  8.999223e-01  0.4391861302 -0.4111745240 -0.2716739841  0.3779516817 #> [270,] -3.308674e-01 -0.5886124430 -0.2611272046 -0.1989058728  0.1232034192 #> [271,]  1.770312e-01 -0.6227328332 -0.0409803003  0.0784055693 -0.2160074824 #> [272,] -6.768895e-01 -0.7365661116 -0.1365491212  0.1359420633  0.0544859889 #> [273,] -4.430064e-01  0.3045796246  0.4345853062 -0.2118804588 -0.1455548432 #> [274,]  1.061370e+00  0.6166581126  0.1572070487 -0.4112144788  0.2514484886 #> [275,]  5.238442e-01 -0.0384228060 -0.4551842028 -0.1772612249  0.0638731197 #> [276,] -3.408061e-01 -0.8686271797  0.5619638034 -0.5275926006 -0.1834707464 #> [277,]  4.036402e-01  0.7738807561 -0.0227015801 -0.2045551866  0.1899294642 #> [278,]  7.359084e-01  0.1993904465  0.2948721749  0.1224228252  0.3558165665 #> [279,] -7.367107e-01  0.1316047299  0.6165863030  0.4341572016 -0.1131688850 #> [280,] -1.103279e+00  0.0213167534  0.2024400629  0.0359464254  0.4362220521 #> [281,] -1.085965e+00  1.1755323458 -0.4655929560 -0.0645311430  0.2559111699 #> [282,] -1.116759e+00  0.4521794834 -0.7853735572  0.0391664335 -0.1834830207 #> [283,] -6.071994e-01 -0.4127185661 -0.6191217054 -0.3687139031 -0.0318555467 #> [284,]  2.683964e-02  1.2533557586 -0.3143787449  0.4786070885 -0.3510673220 #> [285,]  7.999727e-01 -0.7023929138  0.7152829344 -0.4581972093  0.3588311124 #> [286,] -1.201332e-01 -0.5823836069  0.3832081233 -0.6078889260  1.0076961587 #> [287,]  1.628244e-01  0.0016419012 -0.5598579894  0.2650695808  0.2875272320 #> [288,] -7.997598e-01  0.1023934456 -0.4108747598  0.5537542707  0.3122328570 #> [289,] -6.056615e-01  0.1162714160 -0.0608435350 -0.2679012682  0.7361986534 #> [290,]  2.757238e-01  0.7397215240 -1.5567035535 -0.2432033446  0.4263749328 #> [291,]  1.825990e-01 -0.1972315806 -0.8856300164 -0.4917220410 -0.9655530208 #> [292,] -2.352171e-02  0.0420007030 -0.1081108336 -0.6099302268 -0.3726477317 #> [293,] -1.137785e+00 -1.0378998675 -0.5488450875 -0.7662110711 -0.1527555099 #> [294,]  1.961348e-01  0.4633462874  0.6557894274 -0.2069480446 -0.2643296422 #> [295,]  2.604452e-01  0.3172692119 -0.8005869915 -0.1186335452  0.0327254844 #> [296,] -2.264447e-01 -0.0697731186  0.3776104074 -0.1549095548  0.2335508878 #> [297,]  1.587519e-01 -0.0473422426 -0.8624017443 -0.5167711221  0.0054144764 #> [298,] -2.716433e-02  0.0838450296  0.1303675500  0.3614546605 -1.0630702613 #> [299,] -1.047200e-01 -0.3617866679 -0.2352730802 -0.2906719254 -0.2461507600 #> [300,] -4.238284e-01 -0.5064256644 -0.0677807516 -1.2920595826 -0.1625842035 #> [301,]  4.298480e-01 -0.2390395395 -0.4304646767 -0.4288977206  0.1090237695 #> [302,]  2.729470e-01  0.2441740652 -1.1704686925 -0.8190712933 -0.0820242923 #> [303,]  1.225530e+00 -0.1798160161 -0.4316285455 -1.2386397328  0.2073375571 #> [304,]  1.795032e-01 -0.1281023106 -0.6122710351 -0.1054668991 -0.0745342158 #> [305,]  1.428186e-01 -0.0877345112 -0.0798999659 -0.0459575599  0.1689479012 #> [306,] -3.527447e-01  0.2076531853 -0.0310709132 -0.1000429563  0.0830198016 #> [307,] -2.382082e-01 -0.1890754089  0.2344453691  0.6066637334 -0.2322166515 #> [308,]  2.257455e-01  0.0910266505 -0.4769814919  0.1146634014  0.3392887369 #> [309,] -1.082758e+00  0.1893630307 -0.5406305977 -0.6502882979 -0.3895649988 #> [310,] -2.832638e-01  0.5599497650  0.0759216494 -0.1820409577  0.0764627965 #> [311,] -7.184299e-01  0.4779990916 -0.3645863619  0.2674641185 -0.1586214389 #> [312,]  4.919927e-02  0.5034751123 -0.2301143617 -0.3356436120 -0.3172479887 #> [313,] -5.889172e-01 -0.5294734927 -0.2817575914 -0.1690185139 -0.1073489079 #> [314,] -3.667225e-01  0.1041199892  0.9709077040 -0.2382921113  0.0944587926 #> [315,] -5.899294e-01 -0.3302908584 -0.0988814971 -0.3916414551  0.2469689075 #> [316,] -7.968948e-01  0.5623199432  0.0291611430 -0.0147617559  0.0705506576 #> [317,]  3.821161e-01 -0.3641704440 -0.5103386214 -0.4644052974  0.3088430810 #> [318,] -1.003847e+00  1.0257259368 -0.1456314227  0.2098734852  0.0226705611 #> [319,] -1.235740e-02  0.1016107819 -0.3796982968 -0.0413572857 -0.7702287977 #> [320,] -3.175470e-01 -0.0104206980  0.0276597466 -0.0913038633  0.0873337727 #> [321,] -4.213253e-01 -0.2511931011 -0.3124072639  0.0030360799  0.5309730074 #> [322,]  5.902302e-01  1.0123803704 -0.6050723289 -0.1068981960  0.1343907479 #> [323,]  1.986587e-01 -0.1898077692 -0.0887884310 -0.3251308510 -0.1849796253 #> [324,]  2.633006e-01 -0.3288102779 -0.5295367390 -0.3715266602 -0.0210158458 #> [325,]  1.055385e-01  0.0720783668 -0.0020469149 -0.3348101342  0.1345126748 #> [326,] -3.256369e-01 -0.2479039833 -0.1610893827 -0.0882142173  0.1575907726 #> [327,] -1.496117e-01  0.2058263830  0.5561911775 -0.1060488956  0.1252074680 #> [328,] -1.814062e-01  0.1113443516 -0.3589239725 -0.0216458843  0.1050169644 #> [329,] -2.044351e-01  0.0871429899 -0.3549190080 -0.1926619355  0.1758703210 #> [330,] -1.144099e-01  0.1510934351 -0.2010505314  0.1493633610 -0.0422870978 #> [331,] -1.204273e-01  0.0852452642 -0.5710033039 -0.3309030020 -0.0928440786 #> [332,] -6.953602e-01 -0.8528393921  0.5592147669 -0.1629075918 -0.2031748536 #> [333,]  3.773619e-02 -0.1143549854  0.7779488316 -0.2544689055 -0.2107278175 #> [334,] -9.139618e-01  1.0250084350 -0.4308690272  0.0494138872  0.0769208579 #> [335,]  2.622103e-01  0.2597963087 -0.0438130888 -0.0336787052  0.3270059910 #> [336,]  4.739801e-01  0.1512544619  0.3226031826 -0.3857675809  0.3481167567 #> [337,] -2.186077e-02  0.1406014803 -0.7961449591  0.0691159699 -0.1602126392 #> [338,]  2.491046e-01  0.2264505340 -0.6232006872 -0.1493094299  0.0065050253 #> [339,]  1.970170e-01  0.4846648556 -0.1509468760 -0.1372043164  0.0261181133 #> [340,] -4.565354e-01  0.3867232371 -0.5518350292 -0.2688232093  0.4198219525 #> [341,] -9.599237e-01  0.7259301082 -0.6257420135 -0.2284622771  0.0615031146 #> [342,] -5.044616e-01  0.7784171614  0.0541030684 -0.2836323625 -0.4876968428 #> [343,]  1.489998e-01  0.6413820684 -0.2163110920  0.1167482572  0.0004563824 #> [344,] -4.016927e-01  0.6751070497 -0.2108365307  0.2312615815 -0.1830857048 #> [345,] -4.402686e-01  0.3907513203 -0.4910885360  0.0302022038 -0.1440960992 #> [346,]  1.977300e-01  0.5344271032 -0.4098284433  0.0721390233 -0.1897144386 #> [347,]  1.643060e-02  0.3303360111 -0.4140425146  0.1545840588 -0.0137724719 #> [348,] -4.865270e-02  0.3154095455 -0.2294222809  0.0253195020  0.0377821584 #> [349,] -8.014310e-01  0.1241177623  0.1341656414  0.4257529933 -0.2446214280 #> [350,]  6.847815e-02  0.8915250909 -0.5591815700 -0.0769961921  0.0601809563 #> [351,] -2.388457e-01  0.4188122167 -0.1354733295  0.0276512917  0.0194354864 #> [352,] -1.668832e-01  0.0003488537 -0.6052735832  0.1576198763 -0.0722039745 #> [353,]  4.805475e-01 -0.3374051331 -0.1570765728 -0.2500804390  0.1994393907 #> [354,] -3.509239e-02 -0.0956113649  0.1338091925 -0.1045572867  0.0992420563 #> [355,] -3.641329e-01 -0.1778228855 -0.3997315400 -0.0235350094  0.4999397552 #> [356,]  7.311196e-01 -0.3119917957 -0.2488975747 -0.3048290385  0.0181450080 #> [357,]  1.075538e-01  0.0907576797  0.0188424741 -0.1951187649  0.1030243275 #> [358,]  2.753211e-01 -0.3729847867 -0.2581105744 -0.2468770124  0.2025475591 #> [359,] -3.548870e-01  1.1652585952 -0.9215292118  0.1968681397 -0.2142305769 #> [360,] -9.169095e-03  0.3328959048 -0.2124615822 -0.0890795025 -0.1809021132 #> [361,] -7.350831e-01 -0.3748834365  0.2353375302 -0.0389941964  0.6356196062 #> [362,] -7.196852e-01  0.4714130055 -0.4762926852 -0.0259314615  0.1432945318 #> [363,] -5.069630e-02 -0.1120424349  0.0200544660 -0.5639466750  0.3731109446 #> [364,]  4.251024e-02  0.0888414209  0.4662327642 -0.0334491089 -0.0845344561 #> [365,]  4.141508e-02  0.1663650930 -0.8731639393  0.0479673870  0.0952024047 #>                 PC16          PC17         PC18          PC19          PC20 #>   [1,]  0.4805014155 -0.2785294774  0.484439154 -0.1903939924 -0.1727246451 #>   [2,] -0.1245691949 -0.1542534320  0.229129436  0.0251131551  0.1591360102 #>   [3,] -0.3806387189  0.0629191233  1.227916593 -0.1755078624 -0.7669383110 #>   [4,] -0.0154835894  0.0070483837  0.421359670 -0.3358380226  0.0291585756 #>   [5,]  0.1383224807  0.0421355166  0.130400242 -0.2295080475 -0.1376489962 #>   [6,] -0.0671866154  0.4867953423  0.493038449 -0.4025534495 -0.0654640587 #>   [7,] -0.0117397133 -0.0133231357  0.007173765  0.7172773225  0.0376948287 #>   [8,] -0.0733502232 -0.8027271374 -0.029560659 -0.3107873281  0.3788978125 #>   [9,]  0.1636980778 -0.0616638836  0.063750457 -0.5513792080 -0.5557068379 #>  [10,] -0.3519932689  1.0732749005  0.318826046 -0.9663611166  0.3236262465 #>  [11,]  0.0966325881  0.1275519585  0.497471634  0.5725127767  0.4201117069 #>  [12,] -0.3655569467  0.7507976558 -0.290697522 -0.2009325374 -0.0871505629 #>  [13,]  0.3113187859 -0.8239921708 -0.178830694  0.2200238504  0.1795537280 #>  [14,]  0.3063270614 -0.3321085979  0.283047060  0.3424207048 -0.0569138544 #>  [15,] -1.0657882783  0.0820513466 -0.240931015 -0.1482974871  0.2644602232 #>  [16,] -0.3531922696 -0.6173189061 -0.068469327 -0.5188332160 -0.1889343157 #>  [17,] -0.1053301778 -0.1864898702 -0.556478896  0.0947053325 -0.0289811173 #>  [18,] -0.3095783015  0.3099643642 -0.493293390  0.4438578430  0.7334545011 #>  [19,] -0.4127054952  0.1150016084  0.206460575 -0.7095180613 -0.4005867883 #>  [20,]  0.5297616463 -0.6285766627 -0.321258979  0.8719861222 -0.0370769484 #>  [21,] -0.1555251859  0.1768027079 -0.238166835 -0.3373560728 -0.0109262428 #>  [22,] -0.0156749804  0.1622151053 -0.287370542 -0.2799911238  0.0036317392 #>  [23,] -0.5322665742 -0.1850153509 -0.372914270 -0.2744855765 -0.1251492967 #>  [24,] -0.3075379800 -0.1191263497  0.015398016 -0.2229190256 -0.0689138931 #>  [25,] -0.3265717099 -0.3827217478  0.705075094  0.2843274461 -0.3090554382 #>  [26,] -0.5388324811 -0.0208522750 -0.340152631 -0.0835188886  0.0345492957 #>  [27,] -0.0492265902  0.0955910838 -0.339256704 -0.4214555932 -0.2548975704 #>  [28,]  0.1721754662  0.0748886190 -0.306664609 -0.0539072837  0.1631587654 #>  [29,] -0.0170358494  0.3262421699  0.068542938  0.3101008387 -0.3428751330 #>  [30,]  0.3513036194 -0.3933698696 -0.467181091 -0.1917318990  0.3588392863 #>  [31,] -0.4672008511 -0.1591679370 -0.345568293  0.2557394705  0.1214375566 #>  [32,] -0.3181425480 -0.2328976474  0.318946831  0.8113925326  0.3504163646 #>  [33,] -0.0896911093 -0.0755063313  0.023192638 -0.4014625899  0.1671537511 #>  [34,] -0.2718768109 -0.4346765966  0.182338022  0.1756762426 -0.0144346812 #>  [35,] -0.3861325842 -0.4512442608 -0.062158472  0.0510030420  0.4447558792 #>  [36,] -0.2803095689  0.1678772602  0.203632066  0.1257147792 -0.2640060523 #>  [37,] -0.1801280639  0.3424090209 -0.870081155 -0.2825124251 -0.3414462384 #>  [38,]  0.0266333634  0.0150957767 -0.123939100 -0.0156942805 -0.0068103036 #>  [39,]  0.0322554929 -0.0039732967  0.158897637 -0.1095109026 -0.0293476375 #>  [40,]  0.0276926392 -0.0953618299  0.094353882 -0.0423594720  0.0038491423 #>  [41,]  0.0885248756 -0.0925104120  0.082099734 -0.0609725846 -0.0415206886 #>  [42,]  0.0103583730  0.0913275916 -0.254580588 -0.0017322443 -0.0504180555 #>  [43,] -0.4672495697  0.5843255990  0.007975252 -0.3045737653 -0.1788267531 #>  [44,]  0.1711872081 -0.0036899428  0.056506530  0.0332313916  0.0758951197 #>  [45,] -0.0215917086 -0.0154297978 -0.135378326 -0.0455872730 -0.0175894846 #>  [46,] -0.4029234818  0.0595949257  0.673446646  0.2319594200 -0.1211821132 #>  [47,]  0.1107009609 -0.0201304615 -0.158275477 -0.5829430180  0.0628974748 #>  [48,] -0.0733229949  0.7558721400 -0.832758467  0.0829814074  0.4237450499 #>  [49,] -0.5202544005  0.0411247632  0.378248204 -0.0699599027 -0.7872497308 #>  [50,]  0.4550076892 -0.1420395737  0.446748490 -0.2275934190  0.0357821723 #>  [51,] -0.2629026291  0.1256927693 -0.200758703 -0.0953382766  0.1345039050 #>  [52,] -0.6358477995  0.2392889481 -0.373297429  0.1923202684 -0.1892641943 #>  [53,] -0.1642010729  1.0818383665  0.464373872 -0.2752962823 -0.1249021772 #>  [54,] -0.1610852945 -0.1081473386  0.151195104 -0.1033051344 -0.2024481106 #>  [55,] -0.4036602666  0.4804717635 -0.757206430 -0.7021884331 -0.6081024888 #>  [56,]  0.1261798171  0.2127269765 -0.169858545 -0.0206416184  0.2439478391 #>  [57,]  0.1670085778 -0.0309818931 -0.285030980  0.1188111560  0.1428538066 #>  [58,]  0.5874073098 -0.0844800319 -0.464548224 -0.4814921653 -0.1412619991 #>  [59,]  0.0321122830 -0.0313015542  0.157080818 -0.2279304077 -0.0136229082 #>  [60,] -0.2980297321  0.0605932040 -0.018376163  0.1968467120 -0.0546835725 #>  [61,]  0.0762165764 -0.2321512958  0.085346780 -0.1235987006 -0.0560223385 #>  [62,]  0.0478712018 -0.0462358391 -0.080034785 -0.0196390776  0.0347615896 #>  [63,]  0.1536474997 -0.0813422863  0.028763536 -0.0762066524 -0.0010472964 #>  [64,]  0.5191284894 -0.0392430958 -0.269448651 -0.0905092656 -0.1112128844 #>  [65,]  0.1875588985 -0.3899852914 -0.114278528 -0.0491320736 -0.3370726194 #>  [66,] -0.0099861088 -0.0344330161 -0.321335089 -0.3326190418  0.1726948326 #>  [67,]  0.4341309359  0.4841162620 -0.936318151  0.4392288555 -0.2692272006 #>  [68,] -0.0778550959  0.2031790389  0.372152295 -0.0418191081 -0.1436212517 #>  [69,]  0.1056376135 -0.3780462062  0.022033178  0.0461646558 -0.2629267879 #>  [70,] -0.0890597349 -0.3560805841  0.079644814 -0.0785051133 -0.1533090805 #>  [71,]  0.0157813316  0.2329124709  0.040003739  0.1203723613  0.2143393365 #>  [72,] -0.2574993977 -0.0547479278  0.024802696 -0.1373570212  0.1221367185 #>  [73,]  0.0071070736 -0.1515528814  0.043055368 -0.1678131672 -0.2404363359 #>  [74,] -0.2859917482  0.0243989871 -0.084609941  0.1851291119 -0.1089655482 #>  [75,] -0.0305062899 -0.9403267397  0.072985659 -0.4111792747 -0.2618635599 #>  [76,] -0.4379533817 -0.8627131751  0.079837123 -0.1901778094  0.2610533079 #>  [77,]  0.2322674684 -0.1467584329  0.194032650  0.0446188106 -0.2877690671 #>  [78,] -0.2027132907 -0.1298971023 -0.267231526  0.1678995422 -0.4167544284 #>  [79,]  0.1632683804 -0.0810061557  0.094944820  0.0599638567 -0.2316386936 #>  [80,]  0.0468627356 -0.7666361079 -0.055965984 -0.1082610136  0.4007041462 #>  [81,] -0.2799928504 -0.4075245955 -0.009128494  0.1929028881  0.4013616440 #>  [82,] -0.1914070799  0.1301074413  0.260302133 -0.0978132826 -0.1001752041 #>  [83,] -0.3165881595 -0.3789399986  0.701994006  0.0606020466  0.0438520304 #>  [84,] -0.0280767371 -0.1206290002  0.150933976 -0.2750854565 -0.0382202124 #>  [85,]  0.1581951811 -0.0224382161  0.032568641 -0.0637356268 -0.1279018851 #>  [86,]  0.6206432310  0.0381188216  0.355848251  0.0083700969  0.6231838601 #>  [87,]  0.2650798354  0.0597712469  0.264442511 -0.2437400318  0.1817730071 #>  [88,] -0.5177477331 -0.1041118960 -0.196957511  0.4326229857 -0.0964568125 #>  [89,]  0.0360793133  0.9797077813  0.472992548  0.2883425886  0.1849022784 #>  [90,] -0.1157205714 -0.4387335524 -0.035881285  0.3425066413 -0.0689382690 #>  [91,]  0.2438535362 -0.3045969184 -0.002814405  0.4929234479  0.5410212748 #>  [92,]  0.0009684191  0.0595931780 -0.114800695  0.0867111442  0.2069414322 #>  [93,]  0.5689694858  0.4371353629  0.553519522  0.5031514715 -0.0427283617 #>  [94,]  0.1655359417  0.3589004720 -0.353442457 -0.0480097166 -0.3031255483 #>  [95,] -0.2789272114  0.3792713291 -0.390484677 -0.1019509860 -0.0451809540 #>  [96,] -0.5365333578 -0.6959547600 -0.001640453  0.1960524505  0.0313057854 #>  [97,] -0.0519455731  0.3654230143 -0.247369699 -0.2551799180  0.4120229017 #>  [98,]  0.2680786485  0.2606249034  0.143593402  0.4211603359 -0.1511204788 #>  [99,]  0.3315297759  0.4215630204  0.005403516  0.3825197032 -0.1950870339 #> [100,] -0.0488255104  0.0510285686 -0.045531882  0.2006006235 -0.1400955637 #> [101,] -0.1042370069 -0.0433944251 -0.138999536  0.1644118066 -0.3180970896 #> [102,] -0.1552639352  0.1148091855 -0.381343059 -0.4012504323 -0.0179821626 #> [103,]  0.1862710312  0.0134350728  0.026155008  0.0544221394  0.4922794640 #> [104,]  0.6544582538  0.1596228396 -0.075063084  0.4971267455 -0.1246474631 #> [105,] -0.0081277659  0.1265370263  0.105535390  0.0564525063 -0.0019033841 #> [106,] -0.1170102807  0.0035000108 -0.080055833  0.2071449436 -0.0407749198 #> [107,] -0.2158175641  0.3671021709  0.427293116  0.2304876433  0.2251144010 #> [108,] -0.2065120811 -0.2454853735  0.058420369 -0.0902568555  0.0471303223 #> [109,] -0.3162568616  0.1909337238 -0.093902713  0.3344058293 -0.0705796903 #> [110,] -0.0992055590  0.1898253928 -0.059609476  0.2194079803 -0.0435388153 #> [111,] -0.1016667958  0.3738319183 -0.263685150 -0.0970587761  0.0619833005 #> [112,]  0.3484827331  0.3594641600  0.010456735  0.4109460877  0.0199373094 #> [113,]  0.1513369056  0.3625885568 -0.013003243  0.2322244821 -0.1607586817 #> [114,]  0.1859754302  0.1050384139  0.452713842  0.0047204175 -0.1789620812 #> [115,]  0.2130843058  0.2149046923  0.097597021  0.0361530190  0.0908357638 #> [116,]  0.2319811883 -0.0939554827 -0.216952554 -0.2034224612 -0.0363491315 #> [117,] -0.1777523995 -0.0367042417 -0.161743421 -0.1601052085  0.3230796212 #> [118,]  0.2920207873  0.2202880909  0.228871277 -0.0953684108  0.2063937847 #> [119,] -0.0142250923  0.1409654646  0.018090075  0.0706221517 -0.2441076867 #> [120,]  0.1243110126  0.3035947460  0.052608146  0.2176927045 -0.0329092033 #> [121,] -0.3747932224  0.1420918413  0.173337751 -0.0268328365 -0.0417533408 #> [122,]  0.4557126170  0.2223190872  0.102403198  0.2239991579 -0.0109628714 #> [123,] -0.0874586247  0.4255184240 -0.370770728  0.1467205604 -0.0932476830 #> [124,] -0.7357108665  0.0248097327 -0.095335365  0.3672680105  0.0534367807 #> [125,]  0.0097785205  0.0337165950  0.073807484 -0.0539338319 -0.0089831124 #> [126,]  0.1204368847  0.2076021927  0.136153345 -0.1350206747  0.1067172216 #> [127,] -0.0024185186 -0.1400994302  0.044168200 -0.0591722364 -0.2304714335 #> [128,] -0.1394035166  0.0104768925 -0.073624656 -0.0178999826 -0.4016973288 #> [129,] -0.0240575491  0.1056128921 -0.009003861  0.0120484292 -0.0735484067 #> [130,] -0.1853539206 -0.0991924339 -0.300101037 -0.0781991017  0.0406573824 #> [131,] -0.4113898017  0.0437305769 -0.028474516  0.1056906940  0.0896660909 #> [132,]  0.0956804948 -0.1423469499  0.330877476 -0.3436577341 -0.0149368564 #> [133,]  0.0458905995  0.1432284880  0.092431544  0.0933171125 -0.1656209809 #> [134,] -0.1386984842  0.1855793390  0.084752754 -0.2240167325 -0.0243323213 #> [135,] -0.1706988736  0.2690769452  0.011258674 -0.1069770864 -0.1350911961 #> [136,]  0.1224049797  0.0334383797  0.194063159 -0.0218661086  0.1949132532 #> [137,]  0.0032711848  0.2870522624 -0.097947223  0.0338285031 -0.0923274316 #> [138,] -0.6968807842  0.0022416661 -0.055849158  0.1096848033  0.0413078988 #> [139,] -0.3421459548 -0.4907634967 -0.524085277 -0.0568946938  0.2385357028 #> [140,] -0.0309434642  0.5216493399  0.036913112 -0.0500406163  0.1409710215 #> [141,] -0.0224007927 -0.3129200826 -0.048381269  0.1970984251  0.1027301252 #> [142,]  0.0638424023  0.2986989370  0.315292618  0.0031416011  0.2721309684 #> [143,]  0.1873120449  0.5512039953 -0.023032299 -0.2018195912  0.1418931853 #> [144,] -0.2689114037 -0.1414958424 -0.017952245 -0.1688783868 -0.0016931404 #> [145,] -0.4323745573  0.3085488549  0.136836483  0.1235463090  0.2459737342 #> [146,]  0.3466102513  0.2617799289  0.222629144 -0.0085940239 -0.0799054144 #> [147,] -0.0787226177 -0.0439159446  0.001730231  0.0551935391 -0.0364818798 #> [148,]  0.0159965724 -0.1859582232  0.138699111 -0.0396436338  0.0256781485 #> [149,] -0.0090654084  0.0704921469  0.104971756 -0.2443846722  0.0150987593 #> [150,]  0.2659334264 -0.0242400455  0.315791930 -0.3396299970 -0.0032011120 #> [151,]  0.3215667035 -0.2280475927 -0.112671048 -0.2209921260 -0.3050940280 #> [152,] -0.0811767683  0.0013367548  0.288061640  0.0391201376  0.1543671303 #> [153,] -0.4167720806 -0.1491968059 -0.131689434 -0.2852784931  0.1885083757 #> [154,]  0.0757135832  0.1259846073 -0.046005398  0.1482121328 -0.0139105304 #> [155,]  0.4230242276 -0.1427645506  0.094716278 -0.2359029352  0.0159211327 #> [156,]  0.4999543038 -0.3713509565 -0.052152176 -0.1051707487 -0.1230001349 #> [157,]  0.1429137346  0.2736402331  0.269270560 -0.0250643615 -0.0247730590 #> [158,] -0.0204195493 -0.5034640508 -0.074859983 -0.4310878104  0.1961153487 #> [159,] -0.0390151650 -0.2569010046 -0.181414354  0.1354850778  0.1779155215 #> [160,]  0.0182469605  0.0216714226  0.086181068 -0.1731102162 -0.0377153009 #> [161,]  0.1295328986  0.0931722538 -0.164563822 -0.5632369790  0.3902706211 #> [162,] -0.0267020248 -0.1530631659 -0.001456834  0.0960069213 -0.3015024684 #> [163,]  0.0232841949 -0.1650010092  0.067297890  0.1570144312 -0.3173116733 #> [164,]  0.1699843025 -0.0665771163  0.136516857  0.2775296280 -0.2487597790 #> [165,] -0.3953220673 -0.2374246096  0.005548280  0.1503589156 -0.0050258224 #> [166,]  0.7494273749 -0.1228625580 -0.179278981  0.1172682119  0.4188526093 #> [167,]  0.3132717170  0.2495917095 -0.082651670 -1.2396267505  0.2262514915 #> [168,]  0.0592054519 -0.1092933029  0.131144130  0.1143738410 -0.0172742544 #> [169,]  0.3388492331  0.3279891431 -0.129353633 -0.0053332631 -0.1373684660 #> [170,]  0.2085588657  0.2035988501 -0.048157297  0.0375276826 -0.1123269895 #> [171,]  0.0069316375 -0.0302885580 -0.078858650 -0.1612840072 -0.0649703460 #> [172,]  0.1362041089 -0.5998117829  0.164505218 -0.1455566191 -0.2067300313 #> [173,] -0.0093821967 -0.8617625430 -0.110359887 -0.2030072574  0.0575519069 #> [174,] -0.0671423973  0.0347951954  0.049249690 -0.1860703646  0.2044675137 #> [175,] -0.2192276581 -0.0762155676 -0.017985577 -0.0001598458 -0.0735580553 #> [176,]  0.4874634558 -0.0228850707  0.414355406  0.0536754776  0.0487082429 #> [177,] -0.0183436351 -0.1793325828  0.091538652  0.1064102872 -0.2422378300 #> [178,] -0.0334649654  0.0218154064  0.098293074 -0.0372509061 -0.0572256426 #> [179,]  0.5403946386 -0.1099029451  0.287494324 -0.0844066170 -0.1698258318 #> [180,] -0.0909651681 -0.0624771967  0.610761832  0.1256417975  0.1272061369 #> [181,] -0.1242314690  0.3450230555  0.109349034  0.3444745163  0.0513653909 #> [182,]  0.0895724003 -0.3492266510  0.171851568 -0.0283605375  0.3691679547 #> [183,] -0.0981400405  0.3541183063 -0.012385348  0.1116165753 -0.0773205208 #> [184,]  0.1777789074 -0.1890611555  0.047915532 -0.1058151498 -0.2677030789 #> [185,] -0.0148127746  0.3380772458  0.159933270  0.2346096142 -0.2448196064 #> [186,]  0.0887405350 -0.0700288757  0.333505536 -0.3072694897  0.1355243658 #> [187,] -0.1164425483  0.0679561852  0.071981740 -0.0413675708 -0.0269943289 #> [188,]  0.0748610399  0.1112876831 -0.102138698  0.0918956657  0.1019427034 #> [189,] -0.2466510710 -0.4869680029  0.005543956 -0.2847532663  0.2736339287 #> [190,]  0.1902084589 -0.2002942402  0.556823504 -0.0420282994  0.2345514272 #> [191,]  0.1092517109  0.0508268155  0.211371425  0.0431922507  0.0091574031 #> [192,]  0.4458267023 -0.0148127767 -0.094703346  0.0528648929  0.1633889513 #> [193,] -0.1725090072  0.0304689563 -0.338346915  0.1119760774 -0.0773923420 #> [194,]  0.2470184576  0.1178144665 -0.002391608 -0.3356338359 -0.0169587808 #> [195,]  0.4198863994  0.1297038310  0.185410997  0.1067274674  0.0916023403 #> [196,]  0.3358890737  0.0307062564 -0.241926467 -0.0495471342 -0.1092326823 #> [197,]  0.3843872549 -0.0693048108 -0.038191017 -0.3191707742 -0.0169839658 #> [198,]  0.0616467577 -0.1626139035  0.234052850  0.0611678579  0.4224002426 #> [199,]  0.3301551226 -0.3407296910  0.188717186 -0.3602059265 -0.3565928601 #> [200,]  0.0015609177 -0.0904443243  0.319487071  0.4144750405 -0.0973329095 #> [201,] -0.2849455653 -0.0377173834  0.130219797  0.0338156627 -0.1534712590 #> [202,]  0.1844849685 -0.2950346452  0.509775153 -0.0231509729 -0.0551204469 #> [203,]  0.1378064503 -0.1161817878  0.273673539  0.0584673873 -0.0778968647 #> [204,]  0.0708665738  0.0634697898  0.086831033 -0.0469803108  0.0882345887 #> [205,] -0.2035977500  0.3431592418 -0.087136525 -0.1693992414  0.0667109757 #> [206,]  0.2674705248 -0.0246048208  0.152209122 -0.0498578199  0.0504383713 #> [207,]  0.1608530124 -0.1487759785  0.186725604 -0.2852148656 -0.0986788996 #> [208,] -0.1506731006  0.1014800387  0.136957162 -0.1831871877 -0.1616860949 #> [209,]  0.6377743822 -0.4429032488  0.275152729 -0.2264671151  0.1028149511 #> [210,]  0.5436166651 -0.3178213790 -0.864278022  0.2287009608  0.1058469097 #> [211,]  0.0092937414 -0.0010642921 -0.070613005  0.0176259009 -0.0673400195 #> [212,]  0.0487861793 -0.0572647464  0.024378265 -0.0987971327 -0.1745701274 #> [213,]  0.1694684884  0.2460416394 -0.026447895  0.4589746363 -0.0309103347 #> [214,]  0.2805206906 -0.1505157285 -0.144901441 -0.2196260053 -0.6716040485 #> [215,] -0.1646992521 -0.0074978195  0.050895009 -0.1025023956  0.0312871712 #> [216,]  0.1991769193  0.1758073171  0.335240809  0.0476933544  0.0236036045 #> [217,] -0.1171042590  0.0678172173 -0.068169542 -0.0931339504 -0.1041176957 #> [218,] -0.0397662744 -0.0379001300  0.258357232 -0.0807166921  0.0731921019 #> [219,]  0.0356616558 -0.1612105252  0.246927042 -0.0891916565  0.0645347618 #> [220,] -0.1058556532  0.1753098706 -0.247706151 -0.1603673413 -0.0086444939 #> [221,] -0.3099495364 -0.0110225113 -0.068330839 -0.0417234800 -0.1361854740 #> [222,] -0.1581359194  0.1023097082  0.343948175  0.1436834402 -0.0496806541 #> [223,]  0.2904773731 -0.4697394761 -0.384134519  0.0019192194  0.1582874691 #> [224,]  0.5027252628 -0.2316383122  0.372416021 -0.2972596928  0.0774382882 #> [225,]  0.3027720490  0.2464831526 -0.087492734  0.3751928843 -0.2779498466 #> [226,] -0.2468660099  0.4442443553 -0.388385912  0.2225702025  0.0260252271 #> [227,] -0.2726340744  0.1110490485  0.059536478  0.0733235137  0.0481722589 #> [228,]  0.2522811551  0.0765041214  0.174895654  0.1143871922 -0.5020899701 #> [229,] -0.4716978059  0.2949561446 -0.276133027  0.0827863986 -0.1207567542 #> [230,]  0.0888857153  0.0613214688  0.105089176 -0.0766304977  0.0892643589 #> [231,]  0.2688753906 -0.0907506388  0.223857588 -0.3076520938 -0.0257973325 #> [232,]  0.1888820454  0.0280254955 -0.266804267 -0.2772508565 -0.0326277695 #> [233,]  0.0830982805  0.2951817144 -0.182558305 -0.0864434149 -0.0074307542 #> [234,] -0.4154520368  0.1863956905  0.207937999  0.0179262057  0.2181448525 #> [235,] -0.3559625064 -0.1941606460 -0.288893366 -0.2321906295 -0.2403229789 #> [236,] -0.3115283808  0.2845211217 -0.094278526 -0.0039964328 -0.0091662409 #> [237,] -0.2206134312 -0.0478692530  0.010010524  0.1818859703  0.0055429033 #> [238,] -0.0676225845  0.0828929488 -0.376936614 -0.0177465265 -0.1451643503 #> [239,]  0.0637228841  0.2428993080  0.213072793 -0.2342458746  0.1915644931 #> [240,]  0.0318714977  0.0337377528  0.029167088  0.2254211145 -0.1978265306 #> [241,]  0.1109683664  0.2110055898 -0.124107181  0.1185078012 -0.0830126397 #> [242,]  0.0485085203  0.1619335214  0.098607330 -0.1211652649 -0.4076312381 #> [243,] -0.0557577463  0.1772852868  0.103883820 -0.0611599460 -0.0373187363 #> [244,]  0.1898168244 -0.0137052082 -0.110064603 -0.0279096717 -0.0312635961 #> [245,]  0.2148495872  0.3336626290 -0.297005256  0.1339047860 -0.1583014973 #> [246,]  0.0552149306 -0.1607252580 -0.239689476  0.1289740524 -0.2405098653 #> [247,] -0.1060653922  0.1354603754 -0.213172595  0.0300188389 -0.0086361782 #> [248,] -0.2350224043 -0.1678465730 -0.362463632 -0.1982705289 -0.1807937185 #> [249,]  0.0110155504  0.0979608932 -0.111655659 -0.1663752550  0.0020290113 #> [250,] -0.3145882729 -0.2965140516 -0.090085961 -0.1339517164 -0.1545912526 #> [251,]  0.1406501143  0.2545459093 -0.241185155  0.0571016187  0.0229087256 #> [252,] -0.0706897840  0.2098604160 -0.060688149 -0.0652525958  0.0978645503 #> [253,]  0.2411155361 -0.0006070126 -0.410843141  0.2631006105 -0.1555029526 #> [254,]  0.1943155280 -0.0043477245 -0.247946605 -0.1653438766  0.0640856217 #> [255,] -0.1952125918  0.2456680513 -0.083129883 -0.0254610227 -0.0819556682 #> [256,] -0.5257284067 -0.1388998109  0.007445634  0.0971521726 -0.1224289791 #> [257,] -0.0253421751  0.2794962380 -0.452749271 -0.0973860683 -0.2041837811 #> [258,] -0.0253312133  0.2203696746 -0.080060611  0.0265700762 -0.0319329205 #> [259,]  0.1462090126 -0.4441905979 -0.263705409 -0.3612123591 -0.0156029337 #> [260,]  0.1207450978 -0.1540394291 -0.485272254 -0.0201887181 -0.0583774599 #> [261,]  0.2160088783 -0.1297928006 -0.011676462 -0.1012926000 -0.0691018992 #> [262,]  0.0736394590 -0.0423692666 -0.120741608  0.0440567439  0.0953798987 #> [263,]  0.1589004180 -0.0139852100  0.027801360 -0.1340553521  0.1527598670 #> [264,] -0.1700330035 -0.3021694604  0.023109346 -0.0776272904 -0.5885424453 #> [265,] -0.1830383314  0.3472703259 -0.182496320  0.0779317771 -0.1033890197 #> [266,]  0.0324672893  0.2762965978  0.098609346 -0.0047544430  0.1155617790 #> [267,] -0.0812334091  0.0874290581  0.099852869  0.1141650033  0.1518583133 #> [268,]  0.0860877761  0.0693831377  0.164245253  0.1383798014 -0.1433876062 #> [269,] -0.1390401594  0.0245288490  0.086534078  0.1185204993 -0.0453890181 #> [270,]  0.2429637539 -0.1812058201 -0.206755249  0.0326354403  0.2077025880 #> [271,]  0.2875591524  0.1749742071 -0.053306692  0.0244595582  0.3521704563 #> [272,]  0.2283431084  0.4709464391 -0.188529821  0.3106990060 -0.3704059406 #> [273,]  0.1633349688 -0.0590424383 -0.018628441  0.2495169668 -0.1465959047 #> [274,] -0.3538274632 -0.0976493889  0.119674728  0.1638269698  0.2664114595 #> [275,] -0.1808940126  0.0291150502  0.096617331  0.1201651679  0.0074952569 #> [276,] -0.1485762073  0.0383247984 -0.301518632  0.0317230055  0.3698070000 #> [277,] -0.2193625486  0.1970659849 -0.077609092  0.0893264011  0.0215648645 #> [278,] -0.6189737178 -0.7558241235 -0.408204776  0.3583157790 -0.3800231804 #> [279,]  0.3960499601 -0.1803863521 -0.095936086  0.5567458555  0.1298993154 #> [280,]  0.2012242763 -1.1507815622 -0.578439075 -0.1351290757 -0.2471018742 #> [281,]  0.7236427988 -0.0434586888  0.214514683 -0.3590166042  0.5674693806 #> [282,]  0.2306704300  0.4630724620  0.021455277 -0.2462863103  0.5296352459 #> [283,]  0.2219659144 -0.1199979835  0.014689902 -0.2673974212 -0.0414632850 #> [284,] -0.7487785761  0.2669641091  0.330079420  0.1094981738  0.2167115878 #> [285,]  1.1271001459  0.2542646226 -0.122159259 -0.0300991307 -0.0606047036 #> [286,]  1.0158737627  0.0454907096  0.567074370  0.0910070845 -0.5094797174 #> [287,]  0.2756657810 -0.0012003319  0.001246155  0.3179221052  0.0110235146 #> [288,]  0.7313643006 -0.2959076233  0.308152211  0.4049838772 -0.1412175588 #> [289,] -0.3923017025 -0.0334552043  0.133780350  0.3177648341  0.0444464932 #> [290,]  0.3388551197  0.3582900560 -0.192052205  0.2597689294  0.1915984540 #> [291,]  0.4284425954 -0.3881771713 -0.420309997 -0.2202145536 -0.0123085380 #> [292,] -0.8449671821 -0.3017855454 -0.011033925  0.1548929884 -0.0009271963 #> [293,] -0.5217508481 -0.6747789214 -0.205961392 -0.0283486942  0.0845910527 #> [294,]  0.0292783738 -0.0005382124  0.382047762  0.5113299731  0.3740460132 #> [295,] -0.0914113892  0.5439763906  0.303162099  0.2191585108 -0.0436379126 #> [296,]  0.5710332965  0.0243367503  0.224217683  0.1971700530  0.0214201033 #> [297,]  0.2585897941  0.2513420740  0.228265377  0.4112413915 -0.1218593494 #> [298,] -0.1947512277 -1.0263725079  0.517253074  0.1243716471  0.1902793965 #> [299,]  1.0972032985 -0.3636118452 -0.218275111 -0.8203417115 -0.1349168105 #> [300,]  0.2133413906  0.2389209266 -0.077564902  0.3182149046 -0.1588729957 #> [301,] -0.2529711825  0.1979991825  0.209071786 -0.1228070552  0.0419266692 #> [302,] -0.5383187361 -0.0965046435  0.036380567 -0.2368584824  0.0657138743 #> [303,]  0.2873742339 -0.2426650093  0.085346017 -0.1044842745  0.3346129192 #> [304,]  0.5026427482 -0.2972047532  0.028964471 -0.1345760027 -0.0429226974 #> [305,] -0.1967955448 -0.1804627689 -0.130013055  0.4851341427 -0.6393447270 #> [306,] -0.0192663445  0.4959807389 -0.174715601  0.2542655753 -0.3073738100 #> [307,]  0.0840997407 -0.3245213586  0.261712327  0.3412221996 -0.3347192343 #> [308,]  0.4449792927 -0.5111812175 -0.010837774 -0.3580676873  0.1154801314 #> [309,]  0.0390813491  0.4100301223  0.364092630  0.1158109034 -0.0845070459 #> [310,] -0.0254851237  0.0104185157  0.035017674 -0.0851981357 -0.1215610744 #> [311,] -0.5800115083 -0.3870793439  0.194105912 -0.1894798549  0.0190550026 #> [312,]  0.2900422073  0.4327658682 -0.735532842  0.5993010439 -0.0713717963 #> [313,]  0.1266404520 -0.1940215531 -0.608345553  0.0662176821  0.1635747154 #> [314,] -0.0540013765 -0.1536383665  0.182383688  0.4967535790 -0.1623914849 #> [315,]  0.7119140931  0.4283058490 -0.307914939 -0.2547530055 -0.0714393205 #> [316,]  0.0782652755  0.1996676679 -0.323692941 -0.0181760852 -0.1322957949 #> [317,]  0.3423758642 -0.0345448176 -0.041962225 -0.2904662922  0.2391528030 #> [318,]  0.1914052061  0.6525434669  0.149561982 -0.2517459577  0.6434093725 #> [319,]  0.3726960324 -0.0702723304 -0.356494905  0.2415706533  0.5332775017 #> [320,]  0.0166572614 -0.0457638874  0.217084892  0.1481854944  0.0261908226 #> [321,] -0.0425160247 -0.6731411019  0.213572276  0.1401049206 -0.1082365794 #> [322,]  0.0510823881 -0.4476702702 -0.079660482 -0.0200240098 -0.0189749170 #> [323,] -0.0988515101  0.0318910338 -0.164374807  0.2128045755  0.0272202336 #> [324,]  0.1480464130  0.0163311773 -0.163295190  0.1195994672  0.1786032754 #> [325,]  0.0390110934  0.2790979519 -0.145808103  0.3388202913 -0.0993062909 #> [326,]  0.0225651300 -0.1265703327 -0.060718375  0.2389388710  0.2819095404 #> [327,]  0.0161190661 -0.1086575433  0.246106933 -0.1712513389  0.0833593553 #> [328,] -0.4910949816  0.0941181465  0.109029121 -0.1010169319  0.0327798080 #> [329,]  0.2411789794  0.1640315612 -0.227362056  0.0670103708 -0.0571580299 #> [330,] -0.3067461467  0.4020246595  0.023307074 -0.3053738261 -0.0366924519 #> [331,]  0.1757999424  0.2469545974  0.377175162  0.1572980257 -0.3150391070 #> [332,]  0.3041406469  0.2408820207  0.524377262  0.2048168852 -0.1954518071 #> [333,] -0.3917136929 -0.3213337133  0.034815383  0.1106471693 -0.0054051527 #> [334,]  0.6965675469 -0.1402005669  0.007125440 -0.1148218905  0.1903323941 #> [335,] -0.4979450849 -0.2332424642 -0.049811680 -0.0022666257 -0.0523446920 #> [336,] -0.6629833477 -0.4175860790  0.347603187 -0.4277413278  0.2068910214 #> [337,] -0.4251007871  0.3660930326  0.174682878 -0.2540076308  0.1832191672 #> [338,] -0.4717652735  0.2847687019 -0.162774793 -0.1468180350  0.2171580149 #> [339,] -0.3258109203  0.0372854092 -0.300788985 -0.1830843077  0.2121581508 #> [340,]  0.0871049261 -0.3741114881 -0.231683173  0.7592013065  0.4053024573 #> [341,]  0.6491439787 -0.2083627930 -0.655088366  0.3690929257 -0.1614077944 #> [342,] -0.4011242826  0.2523869494 -0.093639036  0.0639230408  0.1787586855 #> [343,] -0.7494274749  0.0120824071  0.189625686 -0.0111695542  0.1513000554 #> [344,]  0.1104559889  0.3469741849  0.176643910 -0.1601816670  0.7080900767 #> [345,] -0.1712157125  0.5094662013  0.251009896 -0.0457917485  0.1680047033 #> [346,] -0.0258340231 -0.1819951275 -0.362019976  0.1854746891 -0.1755302093 #> [347,] -0.3518988806 -0.0745912866  0.291405609 -0.0589293215 -0.0717388198 #> [348,]  0.1161436721  0.1165214267 -0.068006977  0.1074877217 -0.2108770906 #> [349,] -0.2366663144  0.2060686927  0.234026105 -0.1437808944  0.0940229880 #> [350,] -0.0352920286  0.5143248191  0.140882235 -0.1473679073  0.3481377697 #> [351,]  0.0061464339  0.2988265977  0.316937659  0.1900491626 -0.0117787861 #> [352,] -0.3070856034  0.0611000168  0.176746680 -0.1315309878  0.0412229335 #> [353,] -0.2544906531 -0.2806740795 -0.121546429  0.0060543016 -0.0847019839 #> [354,]  0.0322420910 -0.3462929157  0.056767841  0.0263944768  0.1267877526 #> [355,] -0.0725778990 -0.2954261180 -0.074355880  0.1573371925 -0.0790717377 #> [356,] -0.2289770383 -0.0878217353  0.220563098 -0.1386990914  0.2119664635 #> [357,] -0.1457130184 -0.0136822610  0.207699542  0.0376918354 -0.0038352553 #> [358,] -0.1163257025 -0.2884656897  0.114158724 -0.0866182861  0.1156687301 #> [359,]  0.3598596143  0.1807921229 -0.596876741 -0.2568670608  0.3338596702 #> [360,] -0.3757633418  0.2394822282 -0.173070463  0.0164766905  0.0030226364 #> [361,] -1.0622670926 -0.4627917133  0.093997538  0.3561831723  0.3195335155 #> [362,]  0.1051815923 -0.3057465928  0.019577352  0.7938374818  0.4743663452 #> [363,] -0.2599472436  0.0333474145 -1.035688194  0.2252967228 -0.1162614140 #> [364,]  0.0536228462 -0.0050647335  0.387903219  0.2152019760  0.1942813300 #> [365,]  0.0150573701  0.0089300272 -0.068979041 -0.0286811605  0.0937371443 #>                PC21          PC22          PC23          PC24 #>   [1,]  0.195112057 -0.3312936120 -0.1178808828 -0.0613776841 #>   [2,]  0.067044378  0.1383845897  0.2884020506 -0.5677972560 #>   [3,]  0.304406234 -0.1156622519 -0.4709067265  0.3193081466 #>   [4,] -0.040560564  0.0876736093 -0.2217346186  0.0730707320 #>   [5,] -0.389514424 -0.1383581213  0.0228654551 -0.0360425237 #>   [6,] -0.111054799  0.1368573057 -0.0131053424 -0.1428346055 #>   [7,] -0.368781660  0.0114638034 -0.2046676934 -0.1690600177 #>   [8,]  0.134803904 -0.7542653687  0.1108864726  0.0837042950 #>   [9,] -0.570627469 -0.0263189018  0.6929638611  0.0043508885 #>  [10,]  0.280016617 -0.0925142402  0.1251709995  0.3195775720 #>  [11,]  0.273439077 -0.1542254626 -0.0244317419 -0.2344471418 #>  [12,] -0.232506798  0.2222392240 -0.1568662558  0.0898573264 #>  [13,]  0.052218864  0.0155195943  0.1412810459 -0.4548707740 #>  [14,] -0.241881256  0.1369622865  0.1033246481  0.0046125924 #>  [15,]  0.141936143  0.1033307291  0.0533866707  0.3148072674 #>  [16,]  0.045931667 -0.1980377611  0.2209789243 -0.0942847521 #>  [17,]  0.044690457 -0.0516799083 -0.1849710940 -0.1167135994 #>  [18,]  0.009316991  0.2816998604  0.5435807837 -0.3079750781 #>  [19,]  0.158105236  0.2024061487  0.3932225411  0.0519805974 #>  [20,] -0.069241800  0.3699860928 -0.1030508830  0.3273832689 #>  [21,] -0.155333390  0.0314498448 -0.1186945288 -0.0145028195 #>  [22,]  0.137267106  0.2285332119  0.1812827128  0.0866129309 #>  [23,] -0.210225984  0.0664536214  0.0131930816  0.0716902239 #>  [24,]  0.016387026  0.2422424819  0.0939760888 -0.3609757121 #>  [25,]  0.145798059  0.2199287482  0.2856624028  0.0024263844 #>  [26,] -0.385186637  0.2716599462  0.1845229247  0.4977864361 #>  [27,]  0.232590247  0.4944189585  0.7479550564  0.0656232401 #>  [28,]  0.006965598  0.0794636944  0.0170198877 -0.1123662233 #>  [29,] -0.387256670 -0.0764433382  0.2016970098  0.4046734695 #>  [30,] -0.331884418 -0.3485078019 -0.0393368485  0.0456691335 #>  [31,]  0.030248808 -0.1276777785 -0.1344098980 -0.1019685532 #>  [32,]  0.237122390  0.0665399243 -0.2588798222  0.1881726123 #>  [33,] -0.258928784 -0.0255559984  0.3267645857  0.0833129363 #>  [34,] -0.088273196  0.1872060448 -0.0557262295 -0.1203070572 #>  [35,]  0.410523796 -0.1910723353  0.4064164811  0.1024499765 #>  [36,]  0.072305858 -0.0531499352 -0.1886016049 -0.2177927955 #>  [37,] -0.095524807 -0.0883162605 -0.4492936894 -0.1410174709 #>  [38,]  0.055385891  0.0296272055  0.0199634486  0.0411680779 #>  [39,] -0.095752537 -0.0576933109 -0.0046560254  0.0404619021 #>  [40,] -0.087957384 -0.0441522635  0.0319815890  0.0382765810 #>  [41,] -0.200937239 -0.0661916692  0.0212915621  0.2310837817 #>  [42,] -0.285716489  0.0308141563  0.0229566107  0.1094031267 #>  [43,]  0.178831045 -0.0129659011 -0.1275057927 -0.3817786268 #>  [44,] -0.106441411 -0.0203752283  0.0440278032 -0.0200605581 #>  [45,] -0.159734609 -0.0456426540  0.0084707541 -0.1054949622 #>  [46,] -0.157465574 -0.1209677129 -0.1209660199 -0.1727838154 #>  [47,] -0.386225410  0.2233269264 -0.0675781227  0.1975855637 #>  [48,] -0.118106100  0.1525665274  0.2039651455 -0.2791147454 #>  [49,] -1.083682509 -0.2429839396  0.3978997039  0.2502783017 #>  [50,]  0.160633980  0.3208153572  0.2233910292  0.0803728283 #>  [51,] -0.428404820 -0.0391406592 -0.2648699277 -0.1045755059 #>  [52,]  0.296034460 -0.0004145735 -0.3889307873 -0.0067513789 #>  [53,]  0.292231796 -0.2508015093 -0.2155805545  0.1656169286 #>  [54,]  0.063334113 -0.1092349592 -0.0758085500  0.0893339256 #>  [55,]  0.117864628  0.0575734002 -0.3600008042 -0.0505801339 #>  [56,] -0.219171058 -0.0916825170  0.1031427803 -0.0395052363 #>  [57,] -0.108814494  0.1073573594  0.0303292253  0.1267012693 #>  [58,]  0.259779183  0.0183212935  0.0969909422  0.2372166662 #>  [59,] -0.096085737  0.0373157577  0.0553989859 -0.0434428591 #>  [60,]  0.031499472 -0.0072657232 -0.0200050984  0.0616857758 #>  [61,] -0.154913925 -0.0449621573  0.0684396529  0.0674731630 #>  [62,] -0.073212606 -0.0126915429  0.0428528937  0.0669254691 #>  [63,] -0.075198901 -0.0151790753  0.0172559806  0.0041689223 #>  [64,]  0.305420914  0.3681623588  0.2524499031 -0.1931652209 #>  [65,] -0.005232663 -0.0540285815  0.0161620381 -0.0197973031 #>  [66,] -0.158083236 -0.0054721298  0.1345747903 -0.1528074754 #>  [67,] -0.113825049 -0.5797831772 -0.0744905883  0.0674754619 #>  [68,]  0.065856306  0.0737875075 -0.0797455758  0.0740282816 #>  [69,]  0.137382917 -0.0557068191 -0.2760217073  0.0946610939 #>  [70,]  0.149541513 -0.0656174392 -0.1663095058  0.0456924230 #>  [71,] -0.186144158 -0.0343385593  0.1778801221  0.0519871632 #>  [72,]  0.053527285 -0.0721073649  0.0260291175  0.0858756390 #>  [73,]  0.072846908  0.1108193354  0.2731767146  0.0951684254 #>  [74,] -0.314903685 -0.1573360551  0.2500063772 -0.2775797484 #>  [75,] -0.722486963 -0.0849850311 -0.0606163166 -0.5052824075 #>  [76,] -0.035730400 -0.0403720001  0.1823420050  0.0664194127 #>  [77,] -0.062103398  0.0161260865  0.0597908720  0.2220219648 #>  [78,] -0.156785668  0.0134850038  0.0322850556  0.1044337788 #>  [79,] -0.072271167 -0.0762354290 -0.0041834856 -0.0342430714 #>  [80,] -0.305865554  0.0097022192 -0.0479587134  0.1407729458 #>  [81,]  0.191862176 -0.0281591952  0.0066915627  0.1132449633 #>  [82,] -0.086273242  0.1184107839  0.0098292941  0.0410158531 #>  [83,] -0.122011396 -0.1858814437  0.0794405919 -0.2314118841 #>  [84,] -0.134087019 -0.1429951977 -0.0966821472 -0.0120286617 #>  [85,]  0.009073359  0.0426242255 -0.1848919370  0.1930171780 #>  [86,] -0.196130695  0.0505632785  0.1162254467 -0.0064137014 #>  [87,] -0.152778927 -0.2862582337  0.0663685841  0.1140190474 #>  [88,] -0.059293215 -0.3448734178  0.2562510119  0.1168013713 #>  [89,] -0.459910212  0.4191519545  0.3414571946 -0.1269994025 #>  [90,]  0.114120099  0.0100316399 -0.0004421400 -0.0100892734 #>  [91,]  0.225957401  0.4450544528 -0.1066401211 -0.3231264843 #>  [92,]  0.121092338 -0.4356277221  0.0433191395 -0.1781123677 #>  [93,]  0.340731203 -0.0820969873  0.0953888380  0.3229573142 #>  [94,]  0.203612105 -0.0552416789 -0.2105987139 -0.1715694778 #>  [95,]  0.380035348  0.3849245953 -0.0418519226  0.0049605992 #>  [96,]  0.264265332 -0.1000839724  0.3855209494 -0.0302604240 #>  [97,]  0.017504402  0.0420454893 -0.2207418016 -0.0808724052 #>  [98,]  0.141916019 -0.0775370269  0.1478616346  0.0159774141 #>  [99,]  0.020033644  0.0875167163  0.0430618653 -0.0619273004 #> [100,]  0.025366800  0.1470625140  0.0785859891 -0.0299890392 #> [101,]  0.099489922 -0.1233585427  0.1210849313 -0.0899406490 #> [102,] -0.115672927  0.1454796016 -0.2114682224 -0.0486752755 #> [103,] -0.137391872 -0.0167355168  0.0509114500  0.0817823634 #> [104,]  0.004882863  0.3353984547 -0.0725774379 -0.0419512890 #> [105,] -0.072274732 -0.0818079412  0.1021480164 -0.0795620897 #> [106,]  0.044734977 -0.2093866679  0.1051759349  0.1485241594 #> [107,]  0.305945930 -0.0088864384  0.0851973801 -0.1863032255 #> [108,]  0.017169005  0.1293671245  0.0025164718  0.0966504714 #> [109,]  0.004776604  0.1572714429  0.0923300933  0.2240510869 #> [110,]  0.009625270 -0.1552707816 -0.2305393662 -0.0605065539 #> [111,]  0.348407049 -0.2055621194  0.1167473091  0.1805462618 #> [112,]  0.085917168 -0.0553815306  0.0772461203  0.0320222488 #> [113,] -0.144492507  0.0748513242 -0.0151797643 -0.0756812354 #> [114,]  0.201260577 -0.1714570112  0.0285549328 -0.2098083735 #> [115,]  0.276552738  0.2892444496 -0.0256701542 -0.1082457979 #> [116,]  0.076818603  0.1695623974 -0.0005287562  0.1902486455 #> [117,]  0.242066283  0.1041577120  0.2339079169  0.0043129944 #> [118,]  0.134936429  0.2451600014 -0.2045965623 -0.0955536241 #> [119,]  0.058452105 -0.0073810604  0.0840384942 -0.1980876911 #> [120,] -0.042462313  0.0264984633  0.0364208185  0.0088371662 #> [121,]  0.218456166 -0.0334818822  0.1688003087 -0.0662648800 #> [122,]  0.027688789 -0.3043676080 -0.0591247503 -0.0019604243 #> [123,]  0.176744560  0.0324079658  0.0602018025 -0.0659307218 #> [124,]  0.258939517  0.0567876997 -0.1592430580  0.1580808568 #> [125,] -0.099517846 -0.0472361105  0.0707805792  0.0702426673 #> [126,] -0.123751990  0.1305624366  0.0555748475 -0.0267445281 #> [127,] -0.153406687  0.1119387762  0.0492767708 -0.0068761454 #> [128,] -0.055437174  0.1696061613  0.0892314828  0.0136599162 #> [129,]  0.090266393  0.1034989038 -0.0302365385 -0.0451834328 #> [130,]  0.050206662  0.1360948394  0.0007874483  0.0499241959 #> [131,]  0.075797528  0.0002531961  0.0114899642  0.1405839205 #> [132,]  0.130558390  0.0980597644 -0.0428118663  0.1713199589 #> [133,]  0.032189823  0.1128986162  0.0576851910  0.0806311885 #> [134,] -0.076197877  0.2577287507  0.0914072043 -0.0244022934 #> [135,] -0.061090464  0.1298711986 -0.3064255949 -0.0243375206 #> [136,] -0.088967685  0.1911297336 -0.0863531949  0.0569596807 #> [137,]  0.060938059  0.1476602529  0.3025705226  0.1032061585 #> [138,]  0.197399478  0.1874156305  0.0956193997  0.0600912017 #> [139,]  0.059570191  0.0297634446  0.1323159545  0.2687160256 #> [140,]  0.025866168  0.1486973097 -0.0931807479  0.0950608224 #> [141,] -0.034580789  0.1277467205 -0.1547055186 -0.0905956017 #> [142,] -0.164735025  0.2315377368 -0.0970339474 -0.2234027927 #> [143,] -0.059977300 -0.2739374503  0.1336725308 -0.0868505052 #> [144,]  0.108307377  0.1254579510  0.1395067435 -0.0309981340 #> [145,] -0.046405317 -0.0117880656 -0.0339327477 -0.2838838303 #> [146,]  0.049718382  0.3316253996 -0.0418947287 -0.0542638682 #> [147,]  0.009809728  0.2166849730  0.0148845040 -0.0527913292 #> [148,] -0.249701644  0.0534078837  0.0382746862  0.1101906661 #> [149,] -0.150004026 -0.0403077686 -0.1389168506 -0.0987647013 #> [150,]  0.053984386  0.0749860215 -0.0494110482 -0.0156964132 #> [151,]  0.243328343 -0.0183264563  0.2101008547 -0.0217749808 #> [152,] -0.316055801 -0.1071748839 -0.1000551999 -0.3163669465 #> [153,] -0.011785820 -0.1341549434 -0.0475545539  0.1165710165 #> [154,] -0.001073969  0.0472817438  0.1078341196  0.1222353352 #> [155,] -0.045436446  0.0883440505 -0.0097372855 -0.1157086972 #> [156,] -0.238656214  0.0207015065 -0.1069321347 -0.0330131598 #> [157,] -0.344798935 -0.1041509510  0.2909585934  0.1123312859 #> [158,] -0.424444141 -0.1761525917  0.2521975888 -0.0193044025 #> [159,] -0.281625550 -0.2314387414 -0.2586964279  0.1428328699 #> [160,] -0.139043606  0.1394595639 -0.1278577151  0.0165034403 #> [161,]  0.112532863  0.1657337121  0.0686269733 -0.0290888623 #> [162,]  0.196665317  0.0920195938  0.0263262926  0.0162652061 #> [163,] -0.035841525 -0.0437297720  0.1337415307 -0.0399260623 #> [164,] -0.174297395  0.0404047933 -0.1230148168 -0.0429160920 #> [165,] -0.092752937 -0.0010093438 -0.1039303644 -0.1219029935 #> [166,]  0.190900480  0.0993054779 -0.4699717821  0.4510488820 #> [167,]  0.325787042  0.1364771055  0.1228647843  0.0774398336 #> [168,] -0.033078831  0.0576297152  0.0586608943  0.0104549722 #> [169,] -0.151652671  0.1660807565 -0.0232909837 -0.0592971836 #> [170,]  0.050483420 -0.1524758176  0.1088170182 -0.1456078163 #> [171,] -0.012005760  0.1153685759 -0.0328914208  0.0074032126 #> [172,]  0.492143872 -0.0590934402  0.1423546705  0.0650086904 #> [173,] -0.131335595  0.0368417377 -0.0683694712  0.2813731857 #> [174,] -0.193287509  0.1374840738  0.0117036628  0.1172933022 #> [175,]  0.089891954 -0.0029930861  0.1201521251 -0.0147926146 #> [176,] -0.154398210  0.0089880213 -0.0329247363 -0.0036745050 #> [177,] -0.006016329  0.1621933215 -0.0490082542  0.0487575795 #> [178,] -0.034873939  0.0426574114  0.0223378590 -0.0285329707 #> [179,]  0.266678946 -0.1519825989 -0.1208477852  0.0161110607 #> [180,] -0.100953089 -0.1154768488  0.0022664714 -0.2312735769 #> [181,]  0.188311430  0.2096491713  0.0850211684 -0.4014691652 #> [182,] -0.319000072 -0.1340479226 -0.0377808296  0.2275032274 #> [183,] -0.247975209 -0.0802458809 -0.0897998387  0.1582378005 #> [184,]  0.044451609  0.0838007385 -0.0189120159  0.0179345145 #> [185,]  0.015695196 -0.0649637350  0.0854816771 -0.0847490729 #> [186,]  0.072491675 -0.1022375907 -0.0364014727  0.0319570575 #> [187,]  0.058060397  0.0627712078  0.0270772316 -0.0817677030 #> [188,] -0.083217104 -0.0217932707 -0.1884323645  0.1344610708 #> [189,]  0.127231672 -0.1198027009  0.1007195557  0.0347223059 #> [190,] -0.148466671 -0.0496421540  0.0016910821  0.0565541370 #> [191,]  0.064707992 -0.0756370863  0.1093722005 -0.0141670461 #> [192,] -0.120306498 -0.0273089316  0.0019406700  0.1934565540 #> [193,] -0.079387679 -0.1492706155  0.0566038561  0.0906305396 #> [194,]  0.142554652 -0.0090330933  0.0300526106 -0.0506468210 #> [195,] -0.204125077  0.0751555486 -0.0545275651  0.0191470937 #> [196,]  0.047997136  0.0870943251 -0.0967390164  0.0863120692 #> [197,]  0.065794848  0.0768369110 -0.2526448483  0.0811930702 #> [198,] -0.393501347 -0.1123664470 -0.1361496166 -0.0576233843 #> [199,]  0.021280932  0.1128206126 -0.0895416710 -0.2250346224 #> [200,] -0.094754366  0.1578623834 -0.0421428659  0.1728173228 #> [201,]  0.231065935 -0.0295946767 -0.0641381191  0.0376781768 #> [202,]  0.015310115 -0.1712786310  0.0478087386  0.0004432204 #> [203,] -0.140817428  0.0912656746  0.0641246439  0.0007922190 #> [204,] -0.160879864 -0.0185632396  0.0556638726  0.0145964798 #> [205,]  0.063785916  0.0534259586 -0.0515593994  0.1145107702 #> [206,] -0.142026021 -0.1129249569 -0.0011734629  0.1718107165 #> [207,] -0.056808561 -0.1159299486 -0.2175149409 -0.0743623986 #> [208,] -0.092161268 -0.0010045289  0.0602852481  0.0455060452 #> [209,]  0.160079193  0.1164778300 -0.0274095183  0.1542630129 #> [210,]  0.743197043 -0.0011927145 -0.0651030595 -0.2739135656 #> [211,]  0.077106035  0.0616616781  0.1885531194  0.1573721032 #> [212,] -0.019130059  0.0264960153  0.0276890102 -0.0645481320 #> [213,] -0.283541666 -0.2353232509  0.0244823143  0.1123414872 #> [214,]  0.303526069 -0.1414907311  0.2169629783 -0.0025177429 #> [215,] -0.049543932 -0.0328040314 -0.0544186408  0.0535828186 #> [216,] -0.008924382  0.0096924899 -0.1599544471  0.0206017822 #> [217,]  0.099614453  0.0629426610  0.1361517039  0.0065408883 #> [218,]  0.054609141  0.0120707503  0.0382009562  0.2198584892 #> [219,]  0.011382891  0.0815214208  0.0933750132 -0.0009375335 #> [220,] -0.032781492  0.0179644559 -0.1040309848  0.0070087994 #> [221,] -0.088747417 -0.1925651409 -0.3325862560 -0.1985910905 #> [222,]  0.063468156 -0.2213334867  0.0145923951  0.0235525315 #> [223,] -0.080487001 -0.0759423494 -0.0904552575 -0.1885715484 #> [224,]  0.081809318 -0.1296402739 -0.1821452228  0.0521580628 #> [225,]  0.461051288 -0.3229560270 -0.0424795209 -0.1016041678 #> [226,]  0.567190686  0.1454174726  0.0246832583 -0.0161522869 #> [227,]  0.046457789 -0.0157790913 -0.0079080987  0.0060309136 #> [228,] -0.126422422  0.0831649191  0.1099219343 -0.0400565633 #> [229,] -0.066462640 -0.0646344794 -0.0554694181  0.0193663484 #> [230,]  0.169135809 -0.0156035666 -0.0777300523 -0.0025875760 #> [231,] -0.018074823  0.0886707724  0.0621891370  0.0493871035 #> [232,] -0.049000581  0.0958986218  0.0484780621  0.0609191373 #> [233,]  0.014023592 -0.0021675047 -0.1819403798  0.0467135593 #> [234,]  0.060299885  0.0290074804  0.0442755624 -0.1738467966 #> [235,] -0.252548154 -0.2600782246 -0.2904925281 -0.1603375761 #> [236,] -0.158062988  0.0023584021 -0.0435748033 -0.0178385018 #> [237,] -0.150260211  0.0126686545 -0.1277179537 -0.0679060298 #> [238,] -0.049346997 -0.5994995228 -0.0545905350 -0.0928541295 #> [239,]  0.050272695 -0.1743058379  0.1139279488 -0.0734294315 #> [240,] -0.071681385  0.1217495239  0.0076503037 -0.0976958345 #> [241,] -0.199338968  0.1044912329 -0.0064216459  0.0270870881 #> [242,] -0.224730525  0.0326847134  0.0984485325 -0.0333096378 #> [243,] -0.144076074  0.0730060784  0.0236268970 -0.0815221206 #> [244,] -0.107304930 -0.1901084695 -0.0264639190 -0.0167018214 #> [245,] -0.058709742  0.0130473441 -0.0535214054  0.0237127413 #> [246,] -0.011725006 -0.0103311518  0.0404731915  0.0453930879 #> [247,] -0.116743293  0.0001850464 -0.0135631519  0.0233816657 #> [248,]  0.042424678 -0.0479291370 -0.0657912197  0.0079828628 #> [249,]  0.083531898  0.0597549130 -0.0930348506  0.1696656211 #> [250,]  0.266916879  0.0574528413  0.1293981469 -0.0182719847 #> [251,] -0.095481603  0.1791260600  0.0368781452 -0.0723059061 #> [252,] -0.069574111 -0.0084594917  0.0159746903 -0.0045714467 #> [253,] -0.131286126 -0.1621558852 -0.0496052822  0.1417626786 #> [254,] -0.204280678 -0.0586016013 -0.0511549523  0.0084092693 #> [255,] -0.114558988  0.0435715213  0.0075154857 -0.0860971985 #> [256,]  0.237557354  0.1210957151 -0.1145838688 -0.1254974405 #> [257,]  0.086267399 -0.0233313696 -0.1434812213 -0.1173942290 #> [258,] -0.121973751  0.0056060670  0.0294946585  0.0020664111 #> [259,]  0.209273692  0.1154700254 -0.2138106525  0.1257048721 #> [260,] -0.295330103 -0.0931795758 -0.2159469294 -0.0755882377 #> [261,]  0.036179402  0.0614404913 -0.0449316362 -0.1606993457 #> [262,] -0.188001238  0.0372410227  0.1412200970 -0.0674092924 #> [263,] -0.099092274  0.0517430338 -0.1733962257 -0.0032832137 #> [264,] -0.041368081 -0.6202755025 -0.1303317931 -0.0859042912 #> [265,]  0.004765140 -0.3065947125  0.1542137732 -0.0235508942 #> [266,] -0.131741716  0.0641777313 -0.0276898601 -0.0619011548 #> [267,]  0.112902529 -0.0758236125 -0.0464070369  0.0456508789 #> [268,] -0.038793980 -0.0313640149 -0.1076550876 -0.0137601287 #> [269,]  0.055628486 -0.0005221143 -0.0516593565  0.0855549017 #> [270,] -0.001398268  0.1242121442 -0.0434062443 -0.0423626452 #> [271,]  0.447258004  0.1290542459 -0.1176014662  0.0936137887 #> [272,] -0.151897919  0.2813594835 -0.1299062312 -0.1447600178 #> [273,]  0.372853619 -0.2025488726  0.0569582653  0.0389629492 #> [274,]  0.058668136 -0.1252374361 -0.1064648789  0.1691762623 #> [275,] -0.031775001  0.0273199182 -0.0133624507  0.0591642380 #> [276,] -0.178006751 -0.1767218050 -0.0833741303  0.1699903109 #> [277,]  0.204818065  0.0983157105 -0.1040912074  0.0991174849 #> [278,]  0.341488881 -0.2596488305  0.1625334870  0.0159311306 #> [279,] -0.146285721  0.1943756144  0.0188020924 -0.0163924825 #> [280,]  0.698668386 -0.3351002931  0.0490154689 -0.1225432308 #> [281,]  0.187805885 -0.0780217863 -0.1805197160  0.0027744898 #> [282,] -0.080078808 -0.5639315843  0.0660974514  0.0012177061 #> [283,]  0.012927067  0.2131478447 -0.0431412307  0.0516793372 #> [284,] -0.036560031  0.5236852979 -0.1186223486 -0.2240799528 #> [285,]  0.321922557 -0.4813839324  0.4611058467  0.1461101688 #> [286,]  0.447447816  0.1410550339 -0.2304758139 -0.1002397853 #> [287,] -0.081693968 -0.0467574827 -0.0008616355  0.0579710150 #> [288,]  0.164965016 -0.2059703172 -0.0635710334  0.0364878156 #> [289,]  0.191693128 -0.0184147398  0.1768413596 -0.1471742808 #> [290,]  0.084790988  0.1729570231  0.0002511117  0.1230671395 #> [291,]  0.006632275 -0.0220722465 -0.2887171157 -0.0939011215 #> [292,]  0.326335563  0.0386451846 -0.1175771383 -0.1632013444 #> [293,]  0.055382330  0.3741744020  0.1108617713  0.1719391940 #> [294,]  0.037658922  0.0522018342  0.0441003138  0.2318071336 #> [295,]  0.129364786 -0.3454494991  0.0629245196  0.0768354170 #> [296,]  0.042454349 -0.1591638773  0.0388034963 -0.0848438322 #> [297,] -0.129170249  0.2820711352 -0.0455665174  0.0714225576 #> [298,] -0.173141073  0.2852926620  0.0843267440 -0.3012492664 #> [299,]  0.227089987  0.4425078227  0.2907394499 -0.4195964245 #> [300,] -0.186622317  0.1346743432 -0.1162850905  0.0438053197 #> [301,] -0.061295251 -0.0579136892 -0.0742268401  0.0782800760 #> [302,]  0.061416442  0.0581637938  0.0410070097  0.0157456671 #> [303,] -0.095451164 -0.0048624045 -0.1549244070  0.2210860973 #> [304,] -0.191662735  0.0748003700 -0.1230280400  0.0768741346 #> [305,]  0.073959153  0.1390940531  0.0197134963  0.0127957061 #> [306,]  0.151839892 -0.2916448220  0.2126059744 -0.0049149577 #> [307,]  0.411868066  0.4167760977  0.0423662437  0.1236923597 #> [308,]  0.032138987 -0.0578202454 -0.4245671765 -0.0242729153 #> [309,] -0.050513814  0.2063082621 -0.0772676644  0.0481534410 #> [310,] -0.024197568  0.0035568818 -0.1953798093 -0.1857350522 #> [311,]  0.136109066  0.0657191389 -0.0083490185  0.0412663722 #> [312,]  0.109737772 -0.0023171022  0.4169967792  0.2889393645 #> [313,] -0.238528392 -0.0582973294 -0.1654811728 -0.0469675268 #> [314,] -0.006569095 -0.0954914599 -0.1571365162  0.0400284843 #> [315,]  0.409165966 -0.4028842874 -0.0768898803 -0.1198829792 #> [316,] -0.052417546  0.0567971376 -0.2180033018  0.0563262568 #> [317,] -0.088682630 -0.1154184906 -0.1846605061 -0.2139071956 #> [318,]  0.292940605 -0.6959866143  0.0864561277  0.0170708655 #> [319,]  0.230087404  0.4001880346  0.4012610506  0.0590665786 #> [320,]  0.110939699 -0.0922810385 -0.3155340084  0.2005910489 #> [321,]  0.050315321  0.0418719910  0.1070370814  0.0397240150 #> [322,] -0.118637746  0.1823287395 -0.1511261855  0.1067861646 #> [323,] -0.090879525  0.0940677758  0.1695844370 -0.2488975957 #> [324,] -0.164135335  0.1292063019  0.1203293974  0.0779353247 #> [325,] -0.201549716  0.1096827904  0.0828279681 -0.0598329039 #> [326,]  0.268977624  0.1536013833  0.0529357209  0.3369037880 #> [327,] -0.050734131  0.0683306149 -0.5434721070 -0.1501253074 #> [328,]  0.027471975  0.3182979023 -0.1405091968  0.1288139567 #> [329,]  0.013570516 -0.0307937118  0.1754559757 -0.1190612026 #> [330,] -0.053810434 -0.0772288483 -0.0796846918  0.0173376763 #> [331,] -0.111337299 -0.2294812547 -0.0004908359 -0.0132638803 #> [332,]  0.140414421 -0.0357754351  0.2670004347  0.1492347488 #> [333,]  0.099733848 -0.0498827826  0.0013118711  0.0185435254 #> [334,] -0.137601197  0.4977343892 -0.4178835235  0.2624157408 #> [335,]  0.243406653 -0.1800135633  0.0054457973  0.0138346272 #> [336,]  0.403520186  0.1471723768 -0.1256441604  0.0931167187 #> [337,]  0.024120167  0.0581949772 -0.0384539028 -0.0678243205 #> [338,] -0.026549929  0.0337333981 -0.2457001476 -0.0174835770 #> [339,]  0.130190848 -0.1098795274 -0.1878112434  0.1053100434 #> [340,] -0.291027645 -0.3330327580  0.2842304365  0.1196131470 #> [341,] -0.253148824 -0.0915265414 -0.1186701410 -0.3012683471 #> [342,]  0.084288790 -0.2804364658  0.0287261949 -0.0028883411 #> [343,]  0.136445424 -0.1045574282  0.0838238829  0.1570013084 #> [344,]  0.053001323 -0.4271201646  0.1990049593 -0.3346088942 #> [345,]  0.130806305 -0.1521838299 -0.0416426556  0.0050935049 #> [346,] -0.046091539  0.1074163762  0.0520036662 -0.1876453113 #> [347,]  0.133732968 -0.3402395672  0.1310617608 -0.0536417655 #> [348,]  0.010358266 -0.2561311425 -0.0520666327 -0.0715033107 #> [349,]  0.001439030  0.0603819057 -0.1263218464 -0.0893257607 #> [350,]  0.079075563  0.0359362293 -0.2627882560 -0.1428642025 #> [351,]  0.017213429  0.0871760482 -0.0178848148 -0.0121200986 #> [352,]  0.152116866 -0.4514053010  0.2308654518 -0.0204012411 #> [353,] -0.040427987  0.1813184179 -0.0373791949 -0.0397906210 #> [354,] -0.040156677  0.1824142853 -0.0177777302 -0.0643375773 #> [355,] -0.032437047 -0.0842692012  0.1385906610  0.0716945571 #> [356,] -0.112241250 -0.0025312932  0.0765571332 -0.0199126242 #> [357,]  0.017269956  0.0988833768 -0.0316263898  0.0236015865 #> [358,] -0.184572653  0.0358003723 -0.0217281469 -0.0197230118 #> [359,] -0.434675755 -0.1025035653  0.1946626565  0.0999498517 #> [360,] -0.046291471  0.0799821273 -0.1432316538 -0.0910414479 #> [361,] -0.021928510 -0.0386178956 -0.4348385730 -0.1083246156 #> [362,] -0.102439565 -0.0512699895 -0.1977577653  0.0134361023 #> [363,] -0.035924741  0.0532564632 -0.1948151265  0.1691002728 #> [364,]  0.092904258 -0.3333903832  0.0753016688 -0.1538721492 #> [365,] -0.042969724  0.0887464298  0.3821010954 -0.2220937442 #>  #> $orig_pc #> Standard deviations (1, .., p=24): #>  [1] 77.2315671 26.7318369 16.2309065  9.3588893  7.1832854  5.9066390 #>  [7]  4.9859137  3.9145218  3.3242487  2.6839125  2.5627256  2.4098350 #> [13]  2.3273200  1.7727337  1.6504147  1.5377087  1.4911883  1.3502552 #> [19]  1.2647807  1.0921938  0.9715828  0.8952075  0.8188714  0.7049841 #>  #> Rotation (n x k) = (24 x 24): #>             PC1         PC2         PC3         PC4           PC5          PC6 #>  [1,] 0.1804080  0.24254360  0.20684682  0.15074488  0.0741310293 -0.577925809 #>  [2,] 0.1796828  0.29116522  0.15796020  0.10652507 -0.0182399352 -0.274739082 #>  [3,] 0.1756191  0.32434366  0.14625776  0.05327038 -0.1165528476 -0.057168359 #>  [4,] 0.1761300  0.32865760  0.14462657  0.04990623 -0.1118220257  0.090412246 #>  [5,] 0.1749795  0.32191597  0.12652992  0.03722686 -0.1357223793  0.197018414 #>  [6,] 0.1814889  0.28262373  0.07993945  0.03284175 -0.1183233823  0.253377347 #>  [7,] 0.2017121  0.22281964 -0.04185884  0.07570932 -0.0402286065  0.321917464 #>  [8,] 0.2194851  0.03358344 -0.22345203  0.20087852  0.0303773132  0.253741480 #>  [9,] 0.2283291 -0.01745215 -0.29782534  0.19038297  0.1110743832  0.243337950 #> [10,] 0.2254422 -0.04939046 -0.31169744  0.25145482  0.1937966301  0.002642792 #> [11,] 0.2266156 -0.03641059 -0.22776194  0.10669215  0.2227259477 -0.161150003 #> [12,] 0.2303041 -0.02763738 -0.17694340 -0.01575547  0.2003853246 -0.168360527 #> [13,] 0.2304659 -0.04921901 -0.16192814 -0.04750736  0.1951473979 -0.174820078 #> [14,] 0.2318761 -0.04003625 -0.12310718 -0.17047821  0.1124985535 -0.123166170 #> [15,] 0.2283383 -0.04581873 -0.09431251 -0.25247176 -0.0004215206 -0.120708112 #> [16,] 0.2281950 -0.05483166 -0.10171755 -0.29841763 -0.1427458288  0.008037703 #> [17,] 0.2314061 -0.08951466 -0.08360071 -0.32662853 -0.2725479409  0.094594405 #> [18,] 0.2263094 -0.15246517 -0.05439472 -0.23716137 -0.3355395002  0.021998188 #> [19,] 0.2051155 -0.25584118  0.06721572 -0.01309128 -0.4004725186 -0.189436488 #> [20,] 0.1809176 -0.33785169  0.17043799  0.36398524 -0.3296105275 -0.108472631 #> [21,] 0.1755778 -0.32842713  0.28064739  0.36448078 -0.0076955444  0.110525757 #> [22,] 0.1701359 -0.24586560  0.34774863  0.13026513  0.2364753089  0.206400486 #> [23,] 0.1777346 -0.11572803  0.35185109 -0.21282868  0.3576546375  0.104974212 #> [24,] 0.1775066 -0.04867468  0.34526569 -0.35514840  0.2873381077  0.105936381 #>               PC7          PC8           PC9        PC10        PC11 #>  [1,] -0.38372430 -0.264500702 -1.625848e-02 -0.06451018  0.12784632 #>  [2,] -0.10908276 -0.140073473 -1.676729e-03  0.26619776 -0.23073409 #>  [3,]  0.14879386  0.061491251  9.611151e-02  0.14988259  0.02010165 #>  [4,]  0.21125039  0.139897081  1.096553e-02  0.12293547  0.20931728 #>  [5,]  0.24932012  0.163964106 -1.756106e-02 -0.04133501  0.26925371 #>  [6,]  0.12109964  0.098007958 -5.208948e-03 -0.15370641 -0.05052864 #>  [7,] -0.17260741 -0.124117936  2.261693e-02 -0.34594119 -0.63840888 #>  [8,] -0.40561894 -0.186756589 -4.272842e-02 -0.31712287  0.33068614 #>  [9,] -0.26755833  0.012000062 -1.059258e-02  0.21237872  0.19209211 #> [10,] -0.01629406  0.243083026 -5.534339e-05  0.40147052  0.03012092 #> [11,]  0.09572981  0.240894294  1.263940e-01  0.09968834 -0.17983403 #> [12,]  0.20106184  0.102522926  3.260611e-02 -0.13322336 -0.17364518 #> [13,]  0.24737656  0.012378738  5.489923e-02 -0.22515605 -0.04351480 #> [14,]  0.25230298 -0.110206871 -9.388093e-02 -0.22851621  0.07047194 #> [15,]  0.18411452 -0.199465627 -2.422931e-01 -0.15968749  0.17172463 #> [16,]  0.04657624 -0.270927544 -1.504401e-01  0.12294387  0.03810293 #> [17,] -0.07503523 -0.208933139 -3.253665e-02  0.28526478 -0.06578115 #> [18,] -0.13144163  0.005142788  2.075637e-01  0.20399308 -0.03694723 #> [19,] -0.15553210  0.339157046  4.641880e-01 -0.21559349 -0.04108215 #> [20,]  0.02652407  0.220368437 -4.301702e-01 -0.18453852  0.12579105 #> [21,]  0.20002407 -0.248961177 -2.006334e-01  0.16187098 -0.28178299 #> [22,]  0.16314390 -0.335498078  3.980570e-01  0.08754267  0.15555748 #> [23,] -0.13216203  0.116786296  2.431477e-01 -0.12960181  0.13273232 #> [24,] -0.29780665  0.389336628 -4.182150e-01  0.10067935 -0.10820234 #>              PC12        PC13         PC14         PC15        PC16 #>  [1,] -0.39859192  0.21720301 -0.147986941 -0.001788306  0.12470480 #>  [2,]  0.46527851 -0.14734459  0.279289149 -0.025729434 -0.27772247 #>  [3,]  0.33798054 -0.27941363  0.002300781  0.005440759  0.25649426 #>  [4,] -0.09787362 -0.01441198 -0.114096891  0.063676593  0.18936673 #>  [5,] -0.24156753  0.06670699 -0.130448473  0.058446950 -0.12433232 #>  [6,] -0.09463103  0.13911920  0.050551874 -0.107218446 -0.28180830 #>  [7,] -0.06010520  0.24270697  0.114382807 -0.086141650  0.16790798 #>  [8,]  0.12682018 -0.41093876 -0.158497967  0.216936358 -0.19249525 #>  [9,]  0.06866228  0.02881416  0.152640073 -0.202205846  0.29755750 #> [10,] -0.04767142  0.28887988 -0.062141267 -0.280801969 -0.12960412 #> [11,] -0.13356874 -0.04586300  0.011692089  0.224011792 -0.15179523 #> [12,] -0.08104127 -0.16599093 -0.022693426  0.379238281 -0.11802549 #> [13,]  0.07068637  0.01371002 -0.030473499  0.122209369  0.14021372 #> [14,]  0.05142983 -0.08914777  0.063165881 -0.196254368  0.41914359 #> [15,]  0.10133148  0.01031947  0.051796944 -0.469660475 -0.15812527 #> [16,] -0.05717897  0.11005107  0.038018982  0.027263178 -0.38425100 #> [17,] -0.07708630  0.11603790 -0.068312926  0.300462404  0.01870313 #> [18,]  0.02779634  0.02097680 -0.084792954  0.153600053  0.31381077 #> [19,] -0.09658958 -0.21671891 -0.024587447 -0.354942094 -0.16025180 #> [20,]  0.17487519  0.28386958  0.316482212  0.255705841  0.05860040 #> [21,] -0.03333738 -0.21102275 -0.548514412 -0.150994588  0.00635384 #> [22,] -0.23991824 -0.06036099  0.508379529  0.041026910 -0.01595724 #> [23,]  0.45574610  0.42178046 -0.318699742  0.070235233 -0.06945083 #> [24,] -0.21965310 -0.31533081  0.137579774 -0.051829170  0.04674048 #>               PC17         PC18         PC19        PC20         PC21 #>  [1,]  0.041502553  0.029908476 -0.064046958  0.11806232 -0.026043296 #>  [2,] -0.396386377 -0.069105628  0.010840546 -0.22411962  0.068365703 #>  [3,]  0.604713511  0.092162385 -0.101475420  0.27291631 -0.128452805 #>  [4,] -0.016718876  0.008043549  0.308930080 -0.30403425  0.166570333 #>  [5,] -0.226782747  0.029056209  0.130572575 -0.17471091 -0.175298102 #>  [6,] -0.186807984 -0.060847087 -0.528870051  0.47756633  0.135924746 #>  [7,]  0.165836380 -0.039315930  0.232812910 -0.14879861 -0.065743400 #>  [8,]  0.095075272 -0.261750081 -0.014966065 -0.08189307  0.053960813 #>  [9,] -0.265918811  0.581742527  0.021684143  0.15063655 -0.071204922 #> [10,]  0.239538174 -0.380143820 -0.144815872 -0.21668832 -0.003586524 #> [11,]  0.059247528 -0.046579107  0.308564403  0.32850149  0.204050415 #> [12,] -0.135116280  0.185195204  0.133475787  0.11370040 -0.141765301 #> [13,] -0.022078004  0.093850528 -0.490512344 -0.37405194 -0.375495569 #> [14,] -0.132179875 -0.161878907 -0.070416800 -0.02990158  0.624787080 #> [15,]  0.010714491 -0.121666287  0.330557254  0.18151716 -0.407361501 #> [16,]  0.268522598  0.272965746  0.034857740 -0.05415275  0.217476008 #> [17,]  0.083091520  0.109042133 -0.167874146 -0.14254770  0.073110352 #> [18,] -0.287121609 -0.439818695  0.049333436  0.24163547 -0.235799353 #> [19,]  0.038952728  0.192720113 -0.007563283 -0.16647936  0.088938795 #> [20,]  0.067753647 -0.012032302  0.036451356  0.02285118  0.014341633 #> [21,] -0.097597744  0.073711855 -0.027812446  0.04321797  0.007604010 #> [22,]  0.078968663 -0.108654166  0.005539032 -0.01496357 -0.056876137 #> [23,] -0.002494031  0.074899660  0.093640289  0.04411946  0.085230591 #> [24,]  0.032773843 -0.044429102 -0.082335009 -0.05754178 -0.054147334 #>                PC22         PC23         PC24 #>  [1,] -1.771752e-03 -0.022361097 -0.017330672 #>  [2,]  5.439614e-02 -0.004379136  0.036278684 #>  [3,]  1.318370e-01 -0.113849373 -0.030454055 #>  [4,] -5.747891e-01  0.288296385 -0.038079718 #>  [5,]  5.968232e-01 -0.200301726  0.044367891 #>  [6,] -2.447990e-01  0.063127878  0.022433075 #>  [7,]  4.638903e-02 -0.012131503 -0.027408292 #>  [8,] -2.367664e-02  0.028362355  0.031719857 #>  [9,]  1.603004e-02  0.033966340 -0.012883656 #> [10,] -4.751872e-02 -0.231059412 -0.129001702 #> [11,]  2.019587e-01  0.394422576  0.378067523 #> [12,] -2.813324e-01 -0.512335851 -0.329879406 #> [13,]  3.688400e-02  0.392532292  0.058565366 #> [14,]  1.717690e-01 -0.178954795 -0.024248300 #> [15,] -1.729596e-01 -0.017129124  0.243406615 #> [16,]  1.588112e-01  0.277492446 -0.494783098 #> [17,] -1.199619e-01 -0.294246451  0.563181449 #> [18,]  7.034611e-02  0.162696081 -0.309363475 #> [19,] -3.138306e-02 -0.056526814  0.039694518 #> [20,]  6.429062e-05 -0.004603422  0.005870734 #> [21,]  2.420392e-02  0.044415917 -0.002913406 #> [22,] -2.580610e-02 -0.029620319  0.005618053 #> [23,]  1.638431e-03 -0.041924729  0.007720153 #> [24,]  2.018221e-02  0.038344378 -0.023454618 #>"},{"path":"https://jrvanderdoes.github.io/fChange/reference/pca_examination.html","id":null,"dir":"Reference","previous_headings":"","what":"Principal Component Exploration — pca_examination","title":"Principal Component Exploration — pca_examination","text":"Principal Component Exploration","code":""},{"path":"https://jrvanderdoes.github.io/fChange/reference/pca_examination.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Principal Component Exploration — pca_examination","text":"","code":"pca_examination(X, TVE = 0.95, d.max = 3)"},{"path":"https://jrvanderdoes.github.io/fChange/reference/pca_examination.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Principal Component Exploration — pca_examination","text":"X dfts object data can automatically converted format. See dfts(). TVE Numeric [0,1]. Total variance explained determine number components examine d.max Numeric. Max number components investigate (TVE suggests many).","code":""},{"path":"https://jrvanderdoes.github.io/fChange/reference/pca_examination.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Principal Component Exploration — pca_examination","text":"List following elements: Figures: List figures components, summaries, reconstructed values, residuals reconstruction: Reconstructed value pcs residuals: Difference true reconstruction","code":""},{"path":"https://jrvanderdoes.github.io/fChange/reference/pca_examination.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Principal Component Exploration — pca_examination","text":"","code":"results <- pca_examination(electricity)"},{"path":"https://jrvanderdoes.github.io/fChange/reference/pipe.html","id":null,"dir":"Reference","previous_headings":"","what":"Pipe operator — %>%","title":"Pipe operator — %>%","text":"See tidyr::%>% details.","code":""},{"path":"https://jrvanderdoes.github.io/fChange/reference/pipe.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Pipe operator — %>%","text":"","code":"lhs %>% rhs"},{"path":"https://jrvanderdoes.github.io/fChange/reference/pipe.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Pipe operator — %>%","text":"lhs value tidyr placeholder. rhs function call using tidyr semantics.","code":""},{"path":"https://jrvanderdoes.github.io/fChange/reference/pipe.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Pipe operator — %>%","text":"result calling rhs(lhs).","code":""},{"path":"https://jrvanderdoes.github.io/fChange/reference/plot.dfts.html","id":null,"dir":"Reference","previous_headings":"","what":"Plot dfts — plot.dfts","title":"Plot dfts — plot.dfts","text":"function plot dfts objects many ways.","code":""},{"path":"https://jrvanderdoes.github.io/fChange/reference/plot.dfts.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Plot dfts — plot.dfts","text":"","code":"# S3 method for class 'dfts' plot(   x,   changes = NULL,   type = c(\"spaghetti\", \"highdim\", \"rainbow\", \"banded\", \"acf\", \"pacf\", \"summary\", \"qq\",     \"distribution\", \"change\", \"interval\", \"surface\"),   plot_title = x$name,   val_axis_title = NULL,   res_axis_title = NULL,   FD_axis_title = NULL,   eye = NULL,   aspectratio = NULL,   showticklabels = TRUE,   lag.max = 20,   d.max = 2,   alpha = 0.05,   TVE = 0.95,   distribution = c(\"norm\"),   method = c(\"Welch\", \"MC\", \"Imhof\"),   legend = TRUE,   highlight_changes = TRUE,   intervals = confidence_interval(x, changes),   int.gradual = TRUE,   ... )"},{"path":"https://jrvanderdoes.github.io/fChange/reference/plot.dfts.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Plot dfts — plot.dfts","text":"x dfts object data can automatically converted format. See dfts(). changes Vector change points. Can NULL. type Choice plotting method. Options include: 'spaghetti', 'highdim', 'rainbow','banded','acf', 'pacf', 'summary', 'qq', 'distribution', 'change', 'interval', 'surface'. plot_title Title include return plot val_axis_title, res_axis_title, FD_axis_title Title axis giving values (val), resolution intratime (res), functional observations (FD) eye, aspectratio Angle (eye) ratio (aspectratio) view 3d plots showticklabels Boolean tick marks shown lag.max Max number lags consider ACF/PACF summary plots d.max Max number dimensions qq/distribution summary plots alpha Significance level used various plots. Value [0,1] TVE Total variance explained used qq/distribution plots. Value [0,1] distribution String distribution compare distribution plot. string can anything rdistribution ddistribution function available. example \"exp\", \"gamma\". Additional parameters can passed using ... method Method computing ACF/PACF. Options include 'Welch', 'MC', 'Imhof'. legend Boolean legend given qq/distribution plots highlight_changes, int.gradual Boolean changes highlighted confidence interval solid gray gradual colors change plot intervals Information confidence intervals changes change plot. See confidence_interval(). ... Details plotting acf/pacf, summary, distribution function","code":""},{"path":"https://jrvanderdoes.github.io/fChange/reference/plot.dfts.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Plot dfts — plot.dfts","text":"Plot varying types","code":""},{"path":"https://jrvanderdoes.github.io/fChange/reference/plot.dfts.html","id":"references","dir":"Reference","previous_headings":"","what":"References","title":"Plot dfts — plot.dfts","text":"John Fox, & Sanford Weisberg (2019). R Companion Applied Regression. Sage.","code":""},{"path":"https://jrvanderdoes.github.io/fChange/reference/plot.dfts.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Plot dfts — plot.dfts","text":"","code":"plt <- plot(electricity) plt <- plot(var(electricity), type='surface') #> Warning: plot type 'surface' will be truncated to first character"},{"path":"https://jrvanderdoes.github.io/fChange/reference/portmanteau_tests.html","id":null,"dir":"Reference","previous_headings":"","what":"Compute Functional Hypothesis Tests — portmanteau_tests","title":"Compute Functional Hypothesis Tests — portmanteau_tests","text":"Computes variety functional portmanteau hypothesis tests. hypothesis tests package accessible function.","code":""},{"path":"https://jrvanderdoes.github.io/fChange/reference/portmanteau_tests.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Compute Functional Hypothesis Tests — portmanteau_tests","text":"","code":"portmanteau_tests(   data,   test = c(\"variety\", \"single-lag\", \"multi-lag\", \"spectral\", \"independence\", \"imhof\"),   lag = NULL,   M = NULL,   method = c(\"iid\", \"bootstrap\"),   kernel = \"Bartlett\",   bandwidth = \"adaptive\",   components = 3,   block_size = \"adaptive\",   moving = FALSE,   B = 500,   alpha = 0.05 )"},{"path":"https://jrvanderdoes.github.io/fChange/reference/portmanteau_tests.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Compute Functional Hypothesis Tests — portmanteau_tests","text":"data dfts object data can automatically converted format. See dfts(). test String specifying hypothesis test. Currently available tests referred string handles: 'variety', \"single-lag\", \"multi-lag\", \"spectral\", \"independence\", \"imhof\". Please see Details section documentation, vignette, short overview available tests. complete treatment hypothesis tests, please consult references. lag positive integer value. used \"single-lag\", \"multi-lag\", \"independence\", \"imhof\" tests. parameter specifies single lag, maximum lag, used specified test. M used \"single-lag\" \"multi-lag\" tests. positive Integer. Determines number Monte-Carlo simulations employed Welch-Satterthwaite approximation limiting distribution test statistic. method String indicating method, options include: iid:used \"single-lag\" \"multi-lag\" tests. hypothesis test use strong-white noise assumption (instead weak-white noise assumption). bootstrap: used \"single-lag\" test. hypothesis test evaluated approximating limiting distribution test statistic via block bootstrapping process. kernel used \"spectral\" test. String, 'Bartlett' default. Specifies kernel used \"spectral\" test. Currently supported kernels 'Bartlett' 'Parzen' kernels. bandwidth used \"spectral\" test. Either String positive Integer value, 'adaptive' default. Determines bandwidth (lag-window) used test. Given string handle 'adaptive', bandwidth computed via bandwidth selection method aims minimize integrated normed error spectral density operator. given string handle 'static', bandwidth computed n^(1/(2q + 1)), n sample size q kernel order. positive integer given, bandwidth used. components used \"independence\" test. positive Integer value. Determines number functional principal components use (ranked importance). block_size used \"single-lag\" test case 'bootstrap' = TRUE. positive Integer value, default value computed via adaptive bandwidth selection method \"spectral\" test. Determines block size (block bootstrap sample) test bootstrapped. moving used \"single-lag\" test case 'bootstrap' = TRUE. Boolean value, FALSE default given TRUE, performed block bootstrap moving rather stationary. B used \"single-lag\" test case 'bootstrap' = TRUE. positive Integer default value 300. Determines number bootstrap samples take test bootstrapped. alpha Numeric value 0 1 specifying significance level used specified hypothesis test. default value 0.05. Note, significance value ever used compute 1-alpha quantile limiting distribution specified test's test statistic.","code":""},{"path":"https://jrvanderdoes.github.io/fChange/reference/portmanteau_tests.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Compute Functional Hypothesis Tests — portmanteau_tests","text":"suppress_raw_output = FALSE, list containing test statistic, 1-alpha quantile limiting distribution, p-value computed specified hypothesis test. Also prints output containing short description test, p-value, additional information test suppress_print_output = FALSE. 'complete-test' = TRUE, return 1-column table instead containing p-values variety tests, given short descriptions index table.","code":""},{"path":"https://jrvanderdoes.github.io/fChange/reference/portmanteau_tests.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Compute Functional Hypothesis Tests — portmanteau_tests","text":"\"single-lag\" portmanteau test based sample autocovariance function computed functional data. test assesses significance lagged autocovariance operators single, user-specified lag h. specifically, tests null hypothesis lag-h autocovariance operator equal 0. test designed stationary functional time-series, valid conditional heteroscedasticity conditions. required parameter test 'lag', determines lag test evaluated. parameter left blank, take default 1. optional parameters test 'iid', 'M', 'low_disc', 'bootstrap', 'block_size', 'straps', 'moving', 'alpha'. \"multi-lag\" portmanteau test also based sample autocovariance function computed functional data. test assesses cumulative significance lagged autocovariance operators, user-selected maximum lag lag. specifically, tests null hypothesis first lag lag-h autocovariance operators (h going 1 lag) equal 0. test designed stationary functional time-series, valid conditional heteroscedasticity conditions. required parameter test 'lag', determines maximum lag test evaluated. parameter left blank, take default 20. optional parameters test 'iid', 'M', 'low_disc', 'bootstrap', 'block_size', 'straps', 'moving', 'alpha'. \"spectral\" portmanteau test based spectral density operator. essentially measures proximity functional time series white noise - constant spectral density operator uncorrelated series. Unlike \"single-lag\" \"multi-lag\" tests, test general white noise series, may hold functional conditionally heteroscedastic assumptions. optional parameters test 'kernel', 'bandwidth', 'alpha'. \"independence\" portmanteau test test independence identical distribution based dimensionality reduction projecting data onto important functional principal components. based resulting lagged cross-variances. test general white noise series, may hold functional conditionally heteroscedastic assumptions. required parameters test 'lag' 'components'. 'lag' parameter determines maximum lag test evaluated. 'components' parameter determines number important principal components use (importance determined proportion variance explained individual principal component.) \"imhof\" portmanteau test analogue \"single-lag\" test. \"single-lag\" test computes limiting distribution test statistic via Welch-Satterthwaite approximation, \"imhof\" test directly computes coefficients quadratic form Normal variables test statistic converges sample size goes infinity. warn user test extremely computationally expensive, recommended small datasets means cross-verification single-lag test. required parameter test 'lag', determines lag test evaluated. \"imhof\" test requires \"tensorA\" \"CompQuadForm\" packages. Note also imhof test return statistic, thus returns list 2 elements suppress_raw_output = FALSE.","code":""},{"path":"https://jrvanderdoes.github.io/fChange/reference/portmanteau_tests.html","id":"references","dir":"Reference","previous_headings":"","what":"References","title":"Compute Functional Hypothesis Tests — portmanteau_tests","text":"Kim, M., Kokoszka P., & Rice G. (2023) White noise testing functional time series. Statist. Surv., 17, 119-168, DOI: 10.1214/23-SS143 Characiejus V., & Rice G. (2019). general white noise test based kernel lag-window estimates spectral density operator. Econometrics Statistics, submitted. Kokoszka P., & Rice G., & Shang H.L. (2017). Inference autocovariance functional time series conditional heteroscedasticity. Journal Multivariate Analysis, 162, 32-50. Zhang X. (2016). White noise testing model diagnostic checking functional time series. Journal Econometrics, 194, 76-95. Gabrys R., & Kokoszka P. (2007). Portmanteau Test Independence Functional Observations. Journal American Statistical Association, 102:480, 1338-1348, DOI: 10.1198/016214507000001111. Chen W.W. & Deo R.S. (2004). Power transformations induce normality applications. Journal Royal Statistical Society: Series B (Statistical Methodology), 66, 117-130.","code":""},{"path":"https://jrvanderdoes.github.io/fChange/reference/portmanteau_tests.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Compute Functional Hypothesis Tests — portmanteau_tests","text":"","code":"b <- generate_brownian_motion(250) res0 <- portmanteau_tests(b, test = 'single-lag', lag = 10) res1 <- portmanteau_tests(b, test = 'multi-lag', lag = 10, alpha = 0.01) res2 <- portmanteau_tests(b, test = 'spectral', kernel = 'Bartlett',                           bandwidth = 'static', alpha = 0.05) res3 <- portmanteau_tests(b, test = 'spectral', alpha = 0.1,                           kernel = 'Parzen', bandwidth = 'adaptive') res4 <- portmanteau_tests(b, test = 'independence', components = 3, lag = 3) #> Registered S3 method overwritten by 'quantmod': #>   method            from #>   as.zoo.data.frame zoo  res5 <- portmanteau_tests(b, test = 'single-lag', lag = 1, M = 250)"},{"path":"https://jrvanderdoes.github.io/fChange/reference/projection_model.html","id":null,"dir":"Reference","previous_headings":"","what":"Forecast using principal component analysis — projection_model","title":"Forecast using principal component analysis — projection_model","text":"Forecast using principal component analysis","code":""},{"path":"https://jrvanderdoes.github.io/fChange/reference/projection_model.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Forecast using principal component analysis — projection_model","text":"","code":"projection_model(   X,   TVE = 0.95,   model = c(\"ets\", \"arima\"),   n.ahead = 0,   alpha = 0.05,   check.cp = TRUE,   frequency = 1,   ... )"},{"path":"https://jrvanderdoes.github.io/fChange/reference/projection_model.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Forecast using principal component analysis — projection_model","text":"X dfts object data can automatically converted format. See dfts(). TVE Numeric total variance explained select number components PCA model String indicate method model components, either \"ets\" \"arima\". n.ahead Number observations forecast alpha Significance [0,1] intervals forecasting check.cp Boolean indicates errors checked change points change forecasts plots frequency Numeric seasonal frequency component made ts object ... Additional information pass pca, change (check.cp=TRUE), plot","code":""},{"path":"https://jrvanderdoes.github.io/fChange/reference/projection_model.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Forecast using principal component analysis — projection_model","text":"List following elements: fit: dfts object fit errors: dfts object errors fit parameters: list fit parameters like pcs, TVE, model","code":""},{"path":"https://jrvanderdoes.github.io/fChange/reference/projection_model.html","id":"references","dir":"Reference","previous_headings":"","what":"References","title":"Forecast using principal component analysis — projection_model","text":"Hyndman, R. J., & Shahid Ullah, M. (2007). Robust forecasting mortality fertility rates: functional data approach. Computational Statistics & Data Analysis, 51(10), 4942-4956. https://doi.org/10.1016/j.csda.2006.07.028","code":""},{"path":"https://jrvanderdoes.github.io/fChange/reference/projection_model.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Forecast using principal component analysis — projection_model","text":"","code":"result <- projection_model(dfts(electricity$data[,50:100]),  n.ahead=1, TVE=0.1, check.cp=FALSE)"},{"path":"https://jrvanderdoes.github.io/fChange/reference/qqplot.dfts.html","id":null,"dir":"Reference","previous_headings":"","what":"Generic Function to Compute QQ plot for dfts — qqplot.dfts","title":"Generic Function to Compute QQ plot for dfts — qqplot.dfts","text":"Creates normal QQ plots principal components functional data","code":""},{"path":"https://jrvanderdoes.github.io/fChange/reference/qqplot.dfts.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Generic Function to Compute QQ plot for dfts — qqplot.dfts","text":"","code":"# S3 method for class 'dfts' qqplot(   x,   TVE = 0.95,   d.max = 3,   alpha = 0.05,   changes = NULL,   legend = FALSE,   ... )"},{"path":"https://jrvanderdoes.github.io/fChange/reference/qqplot.dfts.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Generic Function to Compute QQ plot for dfts — qqplot.dfts","text":"x dfts object data can automatically converted format. See dfts(). TVE Numeric [0,1] giving total variance explained selecting number principal components. d.max Max number principal components alpha Significance level, alpha [0,1] changes Vector change points legend Boolean indicating legend shown ... Unused","code":""},{"path":"https://jrvanderdoes.github.io/fChange/reference/qqplot.dfts.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Generic Function to Compute QQ plot for dfts — qqplot.dfts","text":"ggplot2 QQ plot","code":""},{"path":"https://jrvanderdoes.github.io/fChange/reference/qqplot.dfts.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Generic Function to Compute QQ plot for dfts — qqplot.dfts","text":"","code":"result <- qqplot(electricity)"},{"path":"https://jrvanderdoes.github.io/fChange/reference/qqplot.html","id":null,"dir":"Reference","previous_headings":"","what":"QQ Plot Generic Function — qqplot","title":"QQ Plot Generic Function — qqplot","text":"QQ Plot Generic Function","code":""},{"path":"https://jrvanderdoes.github.io/fChange/reference/qqplot.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"QQ Plot Generic Function — qqplot","text":"","code":"qqplot(x, ...)  # Default S3 method qqplot(x, ...)"},{"path":"https://jrvanderdoes.github.io/fChange/reference/qqplot.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"QQ Plot Generic Function — qqplot","text":"x Data examine qqplot ... Additional paramters based data","code":""},{"path":[]},{"path":"https://jrvanderdoes.github.io/fChange/reference/quantile.dfts.html","id":null,"dir":"Reference","previous_headings":"","what":"Quantile dfts — quantile.dfts","title":"Quantile dfts — quantile.dfts","text":"Obtain pointwise quantile information dfts objects","code":""},{"path":"https://jrvanderdoes.github.io/fChange/reference/quantile.dfts.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Quantile dfts — quantile.dfts","text":"","code":"# S3 method for class 'dfts' quantile(x, probs = seq(0, 1, 0.25), ...)"},{"path":"https://jrvanderdoes.github.io/fChange/reference/quantile.dfts.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Quantile dfts — quantile.dfts","text":"x dfts object probs Numerics [0,1] indicating probabilities interest ... Additional parameters pass quantile function","code":""},{"path":"https://jrvanderdoes.github.io/fChange/reference/quantile.dfts.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Quantile dfts — quantile.dfts","text":"Matrix columns requested quantile","code":""},{"path":"https://jrvanderdoes.github.io/fChange/reference/quantile.dfts.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Quantile dfts — quantile.dfts","text":"","code":"result <- quantile(electricity) result1 <- quantile(electricity,probs = 0.95)"},{"path":"https://jrvanderdoes.github.io/fChange/reference/rates.html","id":null,"dir":"Reference","previous_headings":"","what":"US Yield Curves — rates","title":"US Yield Curves — rates","text":"Yield curves US 1 - 360 month maturity 1990 2023 (removing days without information).","code":""},{"path":"https://jrvanderdoes.github.io/fChange/reference/rates.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"US Yield Curves — rates","text":"","code":"rates"},{"path":[]},{"path":"https://jrvanderdoes.github.io/fChange/reference/rates.html","id":"rates","dir":"Reference","previous_headings":"","what":"rates","title":"US Yield Curves — rates","text":"dfts object","code":""},{"path":"https://jrvanderdoes.github.io/fChange/reference/sd.html","id":null,"dir":"Reference","previous_headings":"","what":"Generic sd/var of Data — sd","title":"Generic sd/var of Data — sd","text":"Generic sd/var Data Generic Variance Standard Deviation","code":""},{"path":"https://jrvanderdoes.github.io/fChange/reference/sd.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Generic sd/var of Data — sd","text":"","code":"sd(object, ...)  # Default S3 method sd(object, ...)  # S3 method for class 'dfts' sd(object, type = \"pointwise\", ...)  var(object, ...)  # Default S3 method var(object, ...)  # S3 method for class 'dfts' var(object, type = c(\"operator\", \"pointwise\"), ...)"},{"path":"https://jrvanderdoes.github.io/fChange/reference/sd.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Generic sd/var of Data — sd","text":"object Data compute ... Additional parameters based data type Character specify operator ('op') pointwise ('pw') calculation desired","code":""},{"path":"https://jrvanderdoes.github.io/fChange/reference/sd.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Generic sd/var of Data — sd","text":"Numeric(s) explain standard deviation / variance Standard Deviation/Variance","code":""},{"path":"https://jrvanderdoes.github.io/fChange/reference/sd.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Generic sd/var of Data — sd","text":"","code":"sd(1:10) #> [1] 3.02765 var(1:10) #> [1] 9.166667 sd(electricity,type='pointwise') #>  [1] 16.35713 16.34201 16.39898 16.47707 16.33269 16.13200 16.97070 17.73917 #>  [9] 18.54756 18.47440 18.10570 18.18850 18.20834 18.24674 18.01622 18.07915 #> [17] 18.50953 18.32770 17.73067 17.50302 17.26738 16.09757 15.67295 15.62891 var(electricity,type='pointwise') #>  [1] 267.5556 267.0614 268.9267 271.4940 266.7568 260.2413 288.0047 314.6783 #>  [9] 344.0118 341.3035 327.8163 330.8216 331.5437 332.9434 324.5842 326.8555 #> [17] 342.6026 335.9044 314.3766 306.3559 298.1623 259.1318 245.6414 244.2629 var(electricity,type='operator') #>           [,1]     [,2]     [,3]     [,4]     [,5]     [,6]     [,7]     [,8] #>  [1,] 266.8226 258.3463 251.2251 249.8657 244.1265 241.6963 249.2290 231.1259 #>  [2,] 258.3463 266.3297 262.2927 260.8044 255.6677 253.0834 258.3323 232.7066 #>  [3,] 251.2251 262.2927 268.1899 266.9947 262.7752 258.0742 259.1404 227.4958 #>  [4,] 249.8657 260.8044 266.9947 270.7501 267.0062 261.2326 261.3174 228.4781 #>  [5,] 244.1265 255.6677 262.7752 267.0062 266.0259 259.9783 260.0942 228.3761 #>  [6,] 241.6963 253.0834 258.0742 261.2326 259.9783 259.5283 264.7307 240.0232 #>  [7,] 249.2290 258.3323 259.1404 261.3174 260.0942 264.7307 287.2156 276.0245 #>  [8,] 231.1259 232.7066 227.4958 228.4781 228.3761 240.0232 276.0245 313.8162 #>  [9,] 226.3456 228.4487 222.1118 223.8089 223.8012 237.6298 278.0906 322.7289 #> [10,] 219.8945 219.7326 212.3350 213.4931 212.9526 226.6528 266.3497 314.3064 #> [11,] 228.1157 226.8837 219.6527 219.8745 218.6856 230.6395 266.6847 307.0494 #> [12,] 234.2608 233.5810 227.0882 227.3861 226.3003 237.4389 271.1360 307.0040 #> [13,] 231.2138 229.5075 223.0144 222.9140 221.9454 233.6443 267.3881 305.0501 #> [14,] 233.9530 233.1102 227.7527 228.1423 227.1469 238.0900 269.8659 303.5704 #> [15,] 230.1144 229.1858 223.5811 223.9115 223.2323 233.9177 264.0867 296.4667 #> [16,] 226.0504 226.0130 220.9978 221.6211 221.4165 233.0184 264.5560 297.1976 #> [17,] 222.8072 222.4622 217.3451 218.1453 218.0121 230.8193 264.1622 300.0173 #> [18,] 209.8491 206.6692 199.7570 199.8573 199.5861 213.3668 247.5496 291.2552 #> [19,] 181.6730 170.3478 160.4956 158.9230 158.3417 172.3015 203.9928 256.2007 #> [20,] 149.6597 134.3975 121.0516 120.4458 120.0029 133.5485 163.1451 222.5073 #> [21,] 148.3682 133.9047 120.3889 120.1032 119.0489 131.4054 158.9553 210.6348 #> [22,] 157.5122 144.2774 133.5701 134.1695 132.8444 142.1546 163.3423 199.3750 #> [23,] 186.7835 177.5326 169.0679 169.3129 167.0564 173.9476 190.4623 207.4274 #> [24,] 196.4137 189.4402 182.8918 184.0646 181.7316 186.7886 200.0759 207.5360 #>           [,9]    [,10]    [,11]    [,12]    [,13]    [,14]    [,15]    [,16] #>  [1,] 226.3456 219.8945 228.1157 234.2608 231.2138 233.9530 230.1144 226.0504 #>  [2,] 228.4487 219.7326 226.8837 233.5810 229.5075 233.1102 229.1858 226.0130 #>  [3,] 222.1118 212.3350 219.6527 227.0882 223.0144 227.7527 223.5811 220.9978 #>  [4,] 223.8089 213.4931 219.8745 227.3861 222.9140 228.1423 223.9115 221.6211 #>  [5,] 223.8012 212.9526 218.6856 226.3003 221.9454 227.1469 223.2323 221.4165 #>  [6,] 237.6298 226.6528 230.6395 237.4389 233.6443 238.0900 233.9177 233.0184 #>  [7,] 278.0906 266.3497 266.6847 271.1360 267.3881 269.8659 264.0867 264.5560 #>  [8,] 322.7289 314.3064 307.0494 307.0040 305.0501 303.5704 296.4667 297.1976 #>  [9,] 343.0693 336.7780 326.7601 324.6390 323.2094 320.1780 311.7412 312.6031 #> [10,] 336.7780 340.3684 329.1381 325.1875 324.1657 318.5914 309.0846 307.8505 #> [11,] 326.7601 329.1381 326.9181 326.0395 324.6212 320.9409 311.8707 309.8280 #> [12,] 324.6390 325.1875 326.0395 329.9153 328.6835 327.1141 319.2309 316.8981 #> [13,] 323.2094 324.1657 324.6212 328.6835 330.6353 328.7910 321.1894 318.6517 #> [14,] 320.1780 318.5914 320.9409 327.1141 328.7910 332.0312 325.5098 323.4069 #> [15,] 311.7412 309.0846 311.8707 319.2309 321.1894 325.5098 323.6950 322.0187 #> [16,] 312.6031 307.8505 309.8280 316.8981 318.6517 323.4069 322.0187 325.9600 #> [17,] 316.3954 310.5348 311.9408 319.0583 321.2199 326.5196 325.5697 331.4524 #> [18,] 308.8416 305.3038 306.3017 311.6091 314.4784 318.6163 317.3094 322.2924 #> [19,] 273.1979 274.9097 276.7746 280.0408 284.0840 285.1320 283.9295 287.4406 #> [20,] 239.7452 245.6962 242.6409 243.5415 248.7815 247.2886 245.7705 246.9752 #> [21,] 226.0114 231.1596 230.7863 233.5436 238.8988 238.0828 235.4889 235.7055 #> [22,] 211.2727 212.5124 217.5108 223.1106 228.4882 230.0760 227.4755 227.3078 #> [23,] 215.6305 213.1279 222.9295 231.9338 236.2411 240.6431 239.5879 238.3798 #> [24,] 213.3396 208.0330 219.7623 230.1668 231.9213 239.4201 239.7397 239.4532 #>          [,17]    [,18]    [,19]    [,20]    [,21]    [,22]    [,23]    [,24] #>  [1,] 222.8072 209.8491 181.6730 149.6597 148.3682 157.5122 186.7835 196.4137 #>  [2,] 222.4622 206.6692 170.3478 134.3975 133.9047 144.2774 177.5326 189.4402 #>  [3,] 217.3451 199.7570 160.4956 121.0516 120.3889 133.5701 169.0679 182.8918 #>  [4,] 218.1453 199.8573 158.9230 120.4458 120.1032 134.1695 169.3129 184.0646 #>  [5,] 218.0121 199.5861 158.3417 120.0029 119.0489 132.8444 167.0564 181.7316 #>  [6,] 230.8193 213.3668 172.3015 133.5485 131.4054 142.1546 173.9476 186.7886 #>  [7,] 264.1622 247.5496 203.9928 163.1451 158.9553 163.3423 190.4623 200.0759 #>  [8,] 300.0173 291.2552 256.2007 222.5073 210.6348 199.3750 207.4274 207.5360 #>  [9,] 316.3954 308.8416 273.1979 239.7452 226.0114 211.2727 215.6305 213.3396 #> [10,] 310.5348 305.3038 274.9097 245.6962 231.1596 212.5124 213.1279 208.0330 #> [11,] 311.9408 306.3017 276.7746 242.6409 230.7863 217.5108 222.9295 219.7623 #> [12,] 319.0583 311.6091 280.0408 243.5415 233.5436 223.1106 231.9338 230.1668 #> [13,] 321.2199 314.4784 284.0840 248.7815 238.8988 228.4882 236.2411 231.9213 #> [14,] 326.5196 318.6163 285.1320 247.2886 238.0828 230.0760 240.6431 239.4201 #> [15,] 325.5697 317.3094 283.9295 245.7705 235.4889 227.4755 239.5879 239.7397 #> [16,] 331.4524 322.2924 287.4406 246.9752 235.7055 227.3078 238.3798 239.4532 #> [17,] 341.6639 334.3879 300.8888 259.9330 247.3509 236.6134 245.3503 245.8630 #> [18,] 334.3879 334.9841 310.7268 274.6303 259.9502 244.4607 246.0162 241.9221 #> [19,] 300.8888 310.7268 313.5153 290.8029 275.2674 251.7602 238.1319 226.7409 #> [20,] 259.9330 274.6303 290.8029 305.5165 290.6680 254.5242 221.9332 203.9157 #> [21,] 247.3509 259.9502 275.2674 290.6680 297.3455 265.9319 230.0656 209.6839 #> [22,] 236.6134 244.4607 251.7602 254.5242 265.9319 258.4218 233.6798 215.4848 #> [23,] 245.3503 246.0162 238.1319 221.9332 230.0656 233.6798 244.9685 234.7553 #> [24,] 245.8630 241.9221 226.7409 203.9157 209.6839 215.4848 234.7553 243.5936"},{"path":"https://jrvanderdoes.github.io/fChange/reference/space_measuring_vectors.html","id":null,"dir":"Reference","previous_headings":"","what":"Compute Spacing Measuring Vectors — space_measuring_vectors","title":"Compute Spacing Measuring Vectors — space_measuring_vectors","text":"function used compute vectors spaces measure function data objects.","code":""},{"path":"https://jrvanderdoes.github.io/fChange/reference/space_measuring_vectors.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Compute Spacing Measuring Vectors — space_measuring_vectors","text":"","code":"space_measuring_vectors(X, M = 20, space = \"BM\")"},{"path":"https://jrvanderdoes.github.io/fChange/reference/space_measuring_vectors.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Compute Spacing Measuring Vectors — space_measuring_vectors","text":"X dfts object data can automatically converted format. See dfts(). M Integer number vectors generate space String space interest. Options Brownian motion ('BM'), OU process ('OU'), principal components ('PC'), vectors iid standard, random normals ('RN').","code":""},{"path":"https://jrvanderdoes.github.io/fChange/reference/space_measuring_vectors.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Compute Spacing Measuring Vectors — space_measuring_vectors","text":"Data.frame columns vectors describing space. Columns independent vectors.","code":""},{"path":"https://jrvanderdoes.github.io/fChange/reference/space_measuring_vectors.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Compute Spacing Measuring Vectors — space_measuring_vectors","text":"","code":"space_measuring_vectors(M=10, space=\"BM\", X=electricity) #>              [,1]          [,2]        [,3]        [,4]       [,5]         [,6] #>  [1,]  0.00000000  0.0000000000  0.00000000  0.00000000  0.0000000  0.000000000 #>  [2,]  0.25418822 -0.2607752739  0.04351663 -0.01640834 -0.1551238 -0.050595264 #>  [3,]  0.23540426 -0.0110772794  0.17833894  0.22080534 -0.5408895  0.056055657 #>  [4,]  0.03535060 -0.0172864562  0.02478558  0.11254395 -0.6119310  0.478997749 #>  [5,] -0.08001589 -0.0684676211 -0.12190273 -0.35664470 -0.7283260  0.219487399 #>  [6,]  0.02842450 -0.1765245685 -0.02883417 -0.61765379 -0.5079469  0.084097185 #>  [7,]  0.20456242 -0.2439475076  0.08484219 -0.44666594 -0.8327540  0.029834281 #>  [8,]  0.36381951  0.0210952513 -0.19116022 -0.46219396 -0.8784770  0.430176123 #>  [9,]  0.29099723 -0.0771575492 -0.57034527 -0.58226696 -1.0674100  0.008783773 #> [10,]  0.31770187  0.2326972458 -0.66324112 -0.18689170 -1.2571463 -0.140018536 #> [11,]  0.27392581 -0.1065601456 -0.75304334 -0.51407573 -1.6120179 -0.583031286 #> [12,] -0.17961347 -0.0071913971 -0.82251599 -0.40237889 -1.8411637 -0.503773997 #> [13,] -0.37736262 -0.1979170860 -0.70370604 -0.44686029 -1.7020061 -0.174238155 #> [14,] -0.49284082 -0.1576687526 -0.95792147 -0.31050572 -1.9912691 -0.294143651 #> [15,] -0.63979045 -0.2591126749 -0.67178952 -0.42230234 -1.9939729 -0.607643132 #> [16,] -0.82614327 -0.1657275556 -0.72385872 -0.33149195 -1.3568731 -0.562134803 #> [17,] -0.79191473  0.0007771205 -0.98310109 -0.18619247 -1.6302181 -0.440690886 #> [18,] -0.68468507 -0.1643991549 -0.98338829 -0.19822982 -1.6936379  0.017346500 #> [19,] -0.71488530  0.1631092793 -1.18089865  0.25324158 -1.6334259  0.173619911 #> [20,] -0.84917925  0.5091521802 -1.45913673 -0.08618792 -1.7942783 -0.037527623 #> [21,] -0.39817871  0.2674695779 -1.87948708 -0.21129753 -1.7120912 -0.040799286 #> [22,] -0.91868535  0.1656004929 -1.92564203 -0.21313686 -1.5184470 -0.105881623 #> [23,] -0.98472202  0.1527352874 -2.17053563 -0.13212816 -1.2216554 -0.214123021 #> [24,] -1.40364669  0.2161304850 -1.94202138 -0.25160920 -0.9791805  0.415379389 #>              [,7]       [,8]        [,9]       [,10] #>  [1,]  0.00000000  0.0000000  0.00000000  0.00000000 #>  [2,]  0.06755798 -0.1912902 -0.22884206  0.13116899 #>  [3,]  0.22410726 -0.1681280 -0.39614707 -0.58399971 #>  [4,]  0.46984051 -0.4783295 -0.04118298 -0.33782671 #>  [5,]  0.75368107 -0.8594931 -0.14441085 -0.09073257 #>  [6,]  0.44872388 -0.7554750 -0.12432593 -0.27451441 #>  [7,]  0.82503394 -0.9475307  0.14344703 -0.45954874 #>  [8,]  0.56727101 -0.9735186  0.14155632 -0.16608105 #>  [9,]  0.23447721 -1.1876742  0.08113525 -0.09497139 #> [10,]  0.33937115 -1.0940179  0.32232138 -0.15279576 #> [11,]  0.04461335 -1.0058343  0.23314489 -0.24886847 #> [12,]  0.16459791 -1.1801516  0.11600041 -0.11753188 #> [13,] -0.14952075 -1.0966103 -0.30404212  0.17167666 #> [14,]  0.07334185 -0.7601619 -0.38337087  0.48610620 #> [15,] -0.01290766 -0.3963934 -0.31092064  0.29466995 #> [16,] -0.13950320 -0.5258997 -0.21181241  0.63886264 #> [17,] -0.24577436 -0.3258882 -0.16804639  0.55582078 #> [18,] -0.26535005 -0.4527611 -0.24560912  0.66997651 #> [19,] -0.24275074 -0.7372388 -0.46577388  0.50164241 #> [20,] -0.19160458 -0.3792248 -0.22974327  0.25223371 #> [21,] -0.17746065 -0.3888268 -0.46628870  0.41386726 #> [22,] -0.11951040 -0.3117808 -0.56169408 -0.01702550 #> [23,] -0.14607569 -0.1426850 -0.59694329  0.15232493 #> [24,] -0.14641430 -0.3589049 -0.32979896  0.42309625 #space_measuring_vectors(M=10, space=\"OU\", X=electricity) space_measuring_vectors(M=10, space=\"PC\", X=electricity) #>            V1          V2          V3         V4          V5          V6 #> 1   377.15538 -1115.40545   -56.73571  -463.1231   950.45808  -377.54252 #> 2   950.32314  -365.26981  -846.45690  1162.9780  -159.41135  -491.01405 #> 3  1651.40626   309.67461   702.70959   351.7791   194.79148    21.52847 #> 4  -503.43600 -1304.22837 -2059.61572  -666.2209   141.55141  -524.44144 #> 5  -732.88719 -1940.15527   134.50044  -274.9304   438.17447   571.77302 #> 6  -505.89307  -697.24838   409.31559  -331.3790  1480.05897  -132.94424 #> 7  -525.53544  -580.56912   178.21749  -630.5537    37.46077   479.63849 #> 8  1246.68621 -1668.21607  -465.93979  -645.1443  -657.29136  -271.02319 #> 9  1016.11476  -343.47560 -1268.87491  -255.0774    -3.60259  -375.79592 #> 10 -105.61684  -358.61776  -508.40121  1035.7128  -835.10514 -1474.51831 #> 11  651.91285  2337.10838   946.51362   269.3005    41.06047   605.49438 #> 12  -64.77032  -608.03461 -1291.06706  -376.3419   220.88827    16.22337 #> 13 -984.99602 -1423.48818   124.56824  1170.6135  -682.51509   -50.02302 #> 14 -379.45070  -613.84515   971.70634  -344.0333  1016.82574   296.98645 #> 15 -190.75051 -1821.39401  -741.38833 -1134.7966  -164.41019  1009.94419 #> 16 -822.18140   906.82802  -917.89890  -284.1828    97.39430   590.37967 #> 17 -299.55848  -931.76629  1752.34846 -2489.2894  -681.65089  1643.72576 #> 18  616.09886   379.09201  -498.39297 -1975.8143    29.29593   773.48110 #> 19 1470.11095   568.44335 -1025.26218 -1503.9506   365.64816  1009.90317 #> 20 -485.31821   -25.60619   934.42043  -321.9652   -54.68179 -1412.85554 #> 21 -300.89478   374.21657  -790.64184 -1339.4291 -1694.68006   240.12023 #> 22  354.31327   197.73840  -432.85105  -186.2489   -65.47206    80.46541 #> 23  165.82814  -627.40208  1073.70128 -1496.6727 -1125.30440 -1753.32300 #> 24 -535.94750  -193.26890    74.99851 -1430.5559  -543.01252  2151.34175 #>             V7          V8         V9          V10 #> 1   -570.42667  -756.95928   690.0510   392.789149 #> 2   -535.11061  -488.01438  -710.5438 -1132.425671 #> 3   -257.81943  1198.72880   812.6882 -1005.736396 #> 4   -852.50917  -687.21520  -449.0622   209.626746 #> 5   -227.03224   -27.98216  -169.6400  -893.031989 #> 6   -570.71216   648.33199   742.3744     9.230325 #> 7   1010.17007   444.47535 -2250.9099  -152.347249 #> 8    242.00952   -51.02217   943.8104   324.248369 #> 9   -462.23211  -814.18616   646.3833  1581.037471 #> 10  -486.27490  3302.78701  -609.3656 -2275.852871 #> 11   915.48838  1131.06991  -763.7796  1177.772446 #> 12  -258.12464  1587.69999  -368.9911  1537.142392 #> 13   486.35123  -782.60410 -1137.2591  1520.365727 #> 14 -1183.21447  1387.08811  1220.9104  2136.141964 #> 15  -690.32152    42.77748   430.7832 -1932.977712 #> 16  1414.56495  1168.42643  -889.0324  1688.956989 #> 17   317.48454  -344.54991   241.0039  -828.710429 #> 18 -1596.53810   150.75575  -413.2870  1625.465612 #> 19  -195.20503  -983.53456  -689.9569   544.544311 #> 20  1076.91893  -291.35818   213.2337    80.384343 #> 21   -68.46426  -531.73932  1120.9490  1153.335675 #> 22   933.27529 -1040.25783   289.0451  -295.191939 #> 23  -491.03134 -1162.65158  -849.4873   214.184199 #> 24   579.69900   651.63166  1296.7133  -168.100206"},{"path":"https://jrvanderdoes.github.io/fChange/reference/stat_3D.html","id":null,"dir":"Reference","previous_headings":"","what":"Draw 3D Geoms — stat_3D","title":"Draw 3D Geoms — stat_3D","text":"function adds 3D geoms points paths ggplot2 plot.","code":""},{"path":"https://jrvanderdoes.github.io/fChange/reference/stat_3D.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Draw 3D Geoms — stat_3D","text":"","code":"stat_3D(   mapping = NULL,   data = NULL,   geom = \"point\",   position = \"identity\",   na.rm = FALSE,   show.legend = NA,   inherit.aes = TRUE,   ... )"},{"path":"https://jrvanderdoes.github.io/fChange/reference/stat_3D.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Draw 3D Geoms — stat_3D","text":"mapping Default list aesthetic mappings use plot. specified, must supplied layer added plot. data Default dataset use plot. already data.frame, converted one fortify(). specified, must supplied layer added plot. geom geometric object use display data layer. using stat_*() function construct layer, geom argument can used override default coupling stats geoms. geom argument accepts following: Geom ggproto subclass, example GeomPoint. string naming geom. give geom string, strip function name geom_ prefix. example, use geom_point(), give geom \"point\". information ways specify geom, see layer geom documentation. position azimuthal rotation (degrees). na.rm Boolean na data removed show.legend logical. layer included legends? NA, default, includes aesthetics mapped. FALSE never includes, TRUE always includes. can also named logical vector finely select aesthetics display. inherit.aes FALSE, overrides default aesthetics, rather combining . useful helper functions define data aesthetics inherit behaviour default plot specification, e.g. borders(). ... Arguments passed layer. Often aesthetics like color = \"red\" size = 3.","code":""},{"path":"https://jrvanderdoes.github.io/fChange/reference/stat_3D.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Draw 3D Geoms — stat_3D","text":"#param theta azimuthal rotation (degrees). #param phi colatitude rotation (degrees).","code":""},{"path":"https://jrvanderdoes.github.io/fChange/reference/stat_3D.html","id":"references","dir":"Reference","previous_headings":"","what":"References","title":"Draw 3D Geoms — stat_3D","text":"Acker D (2024). gg3D: 3D perspective plots ggplot2. R package version 0.0.0.9000.","code":""},{"path":"https://jrvanderdoes.github.io/fChange/reference/stat_3D.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Draw 3D Geoms — stat_3D","text":"","code":"dat <- electricity  data_lines <- cbind(data.frame('Time'=dat$intratime), dat$data) %>%  tidyr::pivot_longer(cols = 1+1:ncol(dat$data))  colors_plot <- RColorBrewer::brewer.pal(11, \"Spectral\") colors_plot <- grDevices::colorRampPalette(colors_plot)(ncol(dat$data)) data_lines$color <- rep(colors_plot, nrow(dat$data) ) data_lines$name <- as.numeric(data_lines$name)  result <- ggplot2::ggplot(data_lines,    ggplot2::aes(y=Time, x=name, z=value, color=color)) + ggplot2::theme_void() + stat_3D(theta=0, phi=15, geom='path') + ggplot2::scale_color_manual(    breaks = data_lines$color,    values = data_lines$color ) + ggplot2::guides(color='none')"},{"path":"https://jrvanderdoes.github.io/fChange/reference/stationarity_test.html","id":null,"dir":"Reference","previous_headings":"","what":"Functional Stationarity Test — stationarity_test","title":"Functional Stationarity Test — stationarity_test","text":"Stationarity test functional time series different methods determining critical values test statistic. Monte Carlo method constructed Horvath et al. (2014), bootstrap-based methods validated literature (although option provided, please use risk).","code":""},{"path":"https://jrvanderdoes.github.io/fChange/reference/stationarity_test.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Functional Stationarity Test — stationarity_test","text":"","code":"stationarity_test(   X,   statistic = \"Tn\",   critical = c(\"simulation\", \"permutation\"),   perm_method = \"separate\",   M = 1000,   blocksize = 3,   TVE = 1,   replace = TRUE )"},{"path":"https://jrvanderdoes.github.io/fChange/reference/stationarity_test.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Functional Stationarity Test — stationarity_test","text":"X dfts object data can automatically converted format. See dfts(). statistic String test statistic. Options Tn Mn. Default Tn. critical String method determining critical values. Options simulation permutation. Default simulation. perm_method String method permutation. Options separate sliding. Default separate. M Numeric number simulation use determining null distribution. Default 1000. blocksize Numeric blocksize permutation test. Default 1. TVE Numeric total variance explained using PCA eigenvalues. Default 1. replace Boolean replacement used permutation test. Default TRUE.","code":""},{"path":"https://jrvanderdoes.github.io/fChange/reference/stationarity_test.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Functional Stationarity Test — stationarity_test","text":"List (1) pvalue, (2) test statistic, (3) test statistics simulating null distribuion.","code":""},{"path":"https://jrvanderdoes.github.io/fChange/reference/stationarity_test.html","id":"references","dir":"Reference","previous_headings":"","what":"References","title":"Functional Stationarity Test — stationarity_test","text":"Horvath, L., Kokoszka, P., & Rice, G. (2014). Testing stationarity functional time series. Journal Econometrics, 179(1), 66-82.","code":""},{"path":"https://jrvanderdoes.github.io/fChange/reference/stationarity_test.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Functional Stationarity Test — stationarity_test","text":"","code":"res <- stationarity_test(   generate_brownian_motion(100,v=seq(0,1,length.out=20)),   critical='permutation', statistic='Mn') res2 <- stationarity_test(electricity)"},{"path":"https://jrvanderdoes.github.io/fChange/reference/summary.dfts.html","id":null,"dir":"Reference","previous_headings":"","what":"Summary for dfts Object — summary.dfts","title":"Summary for dfts Object — summary.dfts","text":"Summary dfts Object","code":""},{"path":"https://jrvanderdoes.github.io/fChange/reference/summary.dfts.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Summary for dfts Object — summary.dfts","text":"","code":"# S3 method for class 'dfts' summary(object, changes = NULL, lag.max = 20, d.max = 2, demean = FALSE, ...)"},{"path":"https://jrvanderdoes.github.io/fChange/reference/summary.dfts.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Summary for dfts Object — summary.dfts","text":"object dfts object data can automatically converted format. See dfts(). changes changes, . Default NULL. lag.max Max lags consider ACF. Default 20. d.max Max number dimensions QQ-plot. demean Boolean data demeaned based changes create plots based residuals. ... Unused.","code":""},{"path":"https://jrvanderdoes.github.io/fChange/reference/summary.dfts.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Summary for dfts Object — summary.dfts","text":"Plot (ggplot) summarizing data","code":""},{"path":"https://jrvanderdoes.github.io/fChange/reference/summary.dfts.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Summary for dfts Object — summary.dfts","text":"","code":"res <- summary(dfts(electricity$data[,1:20]), lag.max=2) #> Warning: no DISPLAY variable so Tk is not available  # res1 <- summary(dfts(electricity$data[,1:20]), changes=c(3), lag.max=2) # summary(electricity, changes=c(50,200,300), lag.max=5, demean = TRUE)"},{"path":"https://jrvanderdoes.github.io/fChange/reference/temperature.html","id":null,"dir":"Reference","previous_headings":"","what":"Australian Temperature Data — temperature","title":"Australian Temperature Data — temperature","text":"list daily minimum temperature data reporting stations Australia. missing data previously, linearly, interpolated leap days removed consistency. Moreover, data classified city one station observed city.","code":""},{"path":"https://jrvanderdoes.github.io/fChange/reference/temperature.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Australian Temperature Data — temperature","text":"","code":"temperature"},{"path":[]},{"path":"https://jrvanderdoes.github.io/fChange/reference/temperature.html","id":"temperature","dir":"Reference","previous_headings":"","what":"temperature","title":"Australian Temperature Data — temperature","text":"list 8 elements, one city. element data.frame 365 rows (one per day), variable number columns related years collected data.","code":""},{"path":"https://jrvanderdoes.github.io/fChange/reference/temperature.html","id":"source","dir":"Reference","previous_headings":"","what":"Source","title":"Australian Temperature Data — temperature","text":"<www.bom.gov.au>","code":""},{"path":"https://jrvanderdoes.github.io/fChange/news/index.html","id":"fchange-100","dir":"Changelog","previous_headings":"","what":"fChange 1.0.0","title":"fChange 1.0.0","text":"Added NEWS.md file track changes package. Major revamp codes access. Many incorporations simplifications. Standard usage class Squash bugs","code":""}]
