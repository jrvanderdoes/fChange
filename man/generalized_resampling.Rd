% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/generalized_resampling.R
\name{generalized_resampling}
\alias{generalized_resampling}
\title{Generalized Bootstrap and Permutation Methods Including Blocking}
\usage{
generalized_resampling(
  X,
  fn,
  blockSize = 1,
  iters = 1000,
  replace = FALSE,
  alpha = 0.05,
  silent = FALSE,
  ...
)
}
\arguments{
\item{X}{A data frame of the evaluated fd data
(rows are evaled points and columns are fd)}

\item{fn}{Function that returns the test statistic value}

\item{blockSize}{Numeric value indicating blocking sizes

Value of 1 should be used for iid data while larger values can be used to
account for dependence in the data}

\item{iters}{Numeric value indicating number iterations used in bootstrapping}

\item{replace}{Boolean value indicating bootstrapping (T) or permutation (F)}

\item{alpha}{Numeric value in (0, 1) to get the correct percentile}

\item{silent}{Boolean to silence output helpful to a user}

\item{...}{Optional arguments passed into \code{fn}}
}
\value{
Numeric value indicating the cutoff value
}
\description{
Use this method for generalized resampling of a test statistic in
determination of the proper cutoff value
}
\details{
TODO:: Consider compiler::cmpfun(generalized_resampling)
}
\examples{
\dontrun{
# Setup Data
data_KL <- generate_data_fd(
  ns = c(20, 20),
  eigsList = list(
    c(3, 2, 1, 0.5),
    c(3, 3, 2)
  ),
  basesList = list(
    fda::create.bspline.basis(nbasis = 4, norder = 4),
    fda::create.fourier.basis(nbasis = 2)
  ),
  meansList = c(0, 0.5),
  distsArray = c("Normal", "Binomial"),
  evals = seq(0, 1, 0.05),
  kappasArray = c(0, 0.5)
)
# Metric
compute_Tn(data_KL,M =100) # Note value
compute_Tn(data_KL,M =100) # Note different value
# Permutation Method for Tn (this will get 1-alpha quantile of iters)
generalized_resampling(
  X = data_KL,
  blockSize = 5,
  fn = compute_Tn, iters = 10, replace = F
)
}
}
