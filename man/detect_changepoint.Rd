% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/detect_changepoint.R
\name{detect_changepoint}
\alias{detect_changepoint}
\title{Detect Change Point}
\usage{
detect_changepoint(
  X,
  nSims = 100,
  x = seq(0, 1, length.out = ncol(X)),
  M = 25,
  h = 3,
  K = bartlett_kernel,
  silent = FALSE
)
}
\arguments{
\item{X}{Numeric data.frame with rows for evaluated values and columns
indicating FD}

\item{nSims}{(Optional) Integer indicating the number of realizations of
Gaussian processes to compute. Default is 100}

\item{x}{(Optional) Vector of locations of observations. Default is equally
spaced observations on (0, 1) with the same number of observations as FDs}

\item{M}{(Optional) Integer indicating the number of vectors used to create
each value in the covariance matrix. Default is 25.}

\item{h}{(Optional) Integer indicating amount of lag to consider. Default is
3.}

\item{K}{(Optional) Function for the kernel function to use. Default is the
barlett_kernel.}

\item{silent}{(Optional) Boolean indicating it the output should be supressed.
Default is FALSE.}
}
\value{
List
1. pval: pvalue based on the data and estimated Gaussian processes
2. gamProcess: Vector of estimated test statistics based on data
3. value: Test statistic for data
}
\description{
This function detects change points in functional data. This is done through
simulating the null distribution
}
\examples{
\dontrun{
X <- generate_data_fd(ns = c(100),
           eigsList = list(c(3,2,1,0.5)),
           basesList = list(fda::create.bspline.basis(nbasis=4, norder=4)),
           meansList = c(0),
           distsArray = c('Normal'),
           evals = seq(0,1,0.05),
           kappasArray = c(0))
tmp <- detect_changepoint(X)
tmp$pval

X1 <- generate_data_fd(ns = c(50,50),
           eigsList = list(c(3,2,1,0.5),
                           c(1.5,1,0.5,0.25)),
           basesList = list(fda::create.bspline.basis(nbasis=4, norder=4),
                            fda::create.bspline.basis(nbasis=4, norder=4)),
           meansList = c(0,0),
           distsArray = c('Normal','Binomial'),
           evals = seq(0,1,0.05),
           kappasArray = c(0,0))
tmp1 <- detect_changepoint(X1)
tmp1$pval
}
}
