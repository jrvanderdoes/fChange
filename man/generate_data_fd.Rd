% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/generate_data.R
\name{generate_data_fd}
\alias{generate_data_fd}
\title{Generate functional data}
\usage{
generate_data_fd(
  ns,
  eigsList,
  basesList,
  meansList,
  distsArray,
  evals,
  kappasArray = c(0),
  burnin = 100,
  silent = F
)
}
\arguments{
\item{ns}{A numerical vector of length m\preformatted{Indicates the number of functional objects (groups) created using first
set of parameters
}}

\item{eigsList}{A list of vectors of length $1$ or $m$ with the eigenvalues
for each group}

\item{basesList}{A list of bases (eigenfunctions), length 1 or m, for each
group. Define the basis on c(0,1) to ensure it works
(TODO:: Remove this restriction)}

\item{meansList}{A list of means, length 1 or m, for each group}

\item{distsArray}{A vector of distributions, length 1 or m, for each group}

\item{evals}{A vector of points indicating the points to evaluate the
functions on}

\item{kappasArray}{A vector of Kappas, length 1 or m, for the strength of the
VAR(1) process}

\item{burnin}{A numeric value indicating the number of burnin trials
This is only necessary when kappa>0}

\item{silent}{A Boolean that toggles running output}
}
\value{
A data.frame of m columns length(evals) rows (TODO:: Verify)
}
\description{
\code{generate_data_fd} generates functional data via KL expansion.
This can include change points in any combination of the following:
\itemize{
\item Mean
\item Distribution
\item Eigenvalue(s)
\item Eigenvector(s)
}
This creates m 'groups' of functions with similar properties.
}
\examples{
# Create 200 functions with a midway change point. The change point
#     is a change point in the eigenvalues, eigenfunctions, means,
#     distributions, and VAR(1) strength
data_KL <- gen_FD_KL_Expansion(ns = c(100,100),
    eigsList = list(c(3,2,1,0.5),
                    c(3,2,)),
    basesList = list(create.bspline.basis(nbasis=4, norder=4),
                     create.fourier.basis()),
    meansList = c(0,0.5),
    distsArray = c('Normal','Binomial'),
    evals = seq(0,1,0.05),
    kappasArray = c(0, 0.5))
}
